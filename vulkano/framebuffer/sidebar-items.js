initSidebarItems({"enum":[["FramebufferCreationError","Error that can happen when creating a framebuffer object."],["LoadOp","Describes what the implementation should do with an attachment at the start of the subpass."],["RenderPassCreationError","Error that can happen when creating a compute pipeline."],["StoreOp","Describes what the implementation should do with an attachment after all the subpasses have completed."]],"struct":[["EmptySinglePassRenderPass","Implementation of `RenderPass` with no attachment at all and a single pass."],["Framebuffer","Contains the list of images attached to a render pass."],["LayoutAttachmentDescription","Describes an attachment that will be used in a render pass."],["LayoutPassDependencyDescription","Describes a dependency between two passes of a render pass."],["LayoutPassDescription","Describes one of the passes of a render pass."],["Subpass","Represents a subpass within a `RenderPass` object."],["UnsafeRenderPass","Defines the layout of multiple subpasses."]],"trait":[["RenderPass","Trait for objects that describe a render pass."],["RenderPassAttachmentsList","Extension trait for `RenderPass`. Defines which types are allowed as an attachments list."],["RenderPassClearValues","Extension trait for `RenderPass`. Defines which types are allowed as a list of clear values."],["RenderPassCompatible","Trait implemented on render pass objects to check whether they are compatible with another render pass."],["RenderPassDesc",""],["RenderPassSubpassInterface","Extension trait for `RenderPass` that checks whether a subpass of this render pass accepts the output of a fragment shader."]]});