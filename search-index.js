var searchIndex = {};
searchIndex["vulkano"] = {"doc":"","items":[[4,"OomError","vulkano","Error type returned by most Vulkan functions.",null,null],[13,"OutOfHostMemory","","There is no memory available on the host (ie. the CPU, RAM, etc.).",0,null],[13,"OutOfDeviceMemory","","There is no memory available on the device (ie. video memory).",0,null],[0,"buffer","","Location in memory that contains data.",null,null],[3,"BufferSlice","vulkano::buffer","A subpart of a buffer.",null,null],[0,"cpu_access","","Buffer whose content is accessible to the CPU.",null,null],[3,"CpuAccessibleBuffer","vulkano::buffer::cpu_access","Buffer whose content is accessible by the CPU.",null,null],[3,"ReadLock","","Object that can be used to read or write the content of a `CpuAccessBuffer`.",null,null],[3,"WriteLock","","Object that can be used to read or write the content of a `CpuAccessBuffer`.",null,null],[11,"fmt","","",1,{"inputs":[{"name":"cpuaccessiblebuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new buffer. Only allowed for sized data.",1,{"inputs":[{"name":"arc"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"array","","Builds a new buffer. Can be used for arrays.",1,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"raw","","Builds a new buffer without checking the size.",1,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"device","","Returns the device used to create this buffer.",1,{"inputs":[{"name":"cpuaccessiblebuffer"}],"output":{"name":"arc"}}],[11,"queue_families","","Returns the queue families this buffer can be used on.",1,{"inputs":[{"name":"cpuaccessiblebuffer"}],"output":{"name":"vec"}}],[11,"read","","Locks the buffer in order to write its content.",1,{"inputs":[{"name":"cpuaccessiblebuffer"},{"name":"duration"}],"output":{"name":"result"}}],[11,"write","","Locks the buffer in order to write its content.",1,{"inputs":[{"name":"cpuaccessiblebuffer"},{"name":"duration"}],"output":{"name":"result"}}],[11,"inner_buffer","","",1,{"inputs":[{"name":"cpuaccessiblebuffer"}],"output":{"name":"unsafebuffer"}}],[11,"blocks","","",1,{"inputs":[{"name":"cpuaccessiblebuffer"},{"name":"range"}],"output":{"name":"vec"}}],[11,"block_memory_range","","",1,{"inputs":[{"name":"cpuaccessiblebuffer"},{"name":"usize"}],"output":{"name":"range"}}],[11,"needs_fence","","",1,{"inputs":[{"name":"cpuaccessiblebuffer"},{"name":"bool"},{"name":"range"}],"output":{"name":"option"}}],[11,"host_accesses","","",1,{"inputs":[{"name":"cpuaccessiblebuffer"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"gpu_access","","",1,{"inputs":[{"name":"cpuaccessiblebuffer"},{"name":"iterator"},{"name":"arc"}],"output":{"name":"gpuaccessresult"}}],[11,"map","","Makes a new `ReadLock` to access a sub-part of the current `ReadLock`.",2,{"inputs":[{"name":"readlock"},{"name":"f"}],"output":{"name":"readlock"}}],[11,"deref","","",2,{"inputs":[{"name":"readlock"}],"output":{"name":"t"}}],[11,"map","","Makes a new `WriteLock` to access a sub-part of the current `WriteLock`.",3,{"inputs":[{"name":"writelock"},{"name":"f"}],"output":{"name":"writelock"}}],[11,"deref","","",3,{"inputs":[{"name":"writelock"}],"output":{"name":"t"}}],[11,"deref_mut","","",3,{"inputs":[{"name":"writelock"}],"output":{"name":"t"}}],[0,"device_local","vulkano::buffer","Buffer whose content is read-written by the GPU only.",null,null],[3,"DeviceLocalBuffer","vulkano::buffer::device_local","Buffer whose content is accessible by the CPU.",null,null],[11,"fmt","","",4,{"inputs":[{"name":"devicelocalbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new buffer. Only allowed for sized data.",4,{"inputs":[{"name":"arc"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"array","","Builds a new buffer. Can be used for arrays.",4,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"raw","","Builds a new buffer without checking the size.",4,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"device","","Returns the device used to create this buffer.",4,{"inputs":[{"name":"devicelocalbuffer"}],"output":{"name":"arc"}}],[11,"queue_families","","Returns the queue families this buffer can be used on.",4,{"inputs":[{"name":"devicelocalbuffer"}],"output":{"name":"vec"}}],[11,"inner_buffer","","",4,{"inputs":[{"name":"devicelocalbuffer"}],"output":{"name":"unsafebuffer"}}],[11,"blocks","","",4,{"inputs":[{"name":"devicelocalbuffer"},{"name":"range"}],"output":{"name":"vec"}}],[11,"block_memory_range","","",4,{"inputs":[{"name":"devicelocalbuffer"},{"name":"usize"}],"output":{"name":"range"}}],[11,"needs_fence","","",4,{"inputs":[{"name":"devicelocalbuffer"},{"name":"bool"},{"name":"range"}],"output":{"name":"option"}}],[11,"host_accesses","","",4,{"inputs":[{"name":"devicelocalbuffer"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"gpu_access","","",4,{"inputs":[{"name":"devicelocalbuffer"},{"name":"iterator"},{"name":"arc"}],"output":{"name":"gpuaccessresult"}}],[0,"immutable","vulkano::buffer","Buffer that is written once then read for as long as it is alive.",null,null],[3,"ImmutableBuffer","vulkano::buffer::immutable","Buffer that is written once then read for as long as it is alive.",null,null],[11,"new","","Builds a new buffer. Only allowed for sized data.",5,{"inputs":[{"name":"arc"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"array","","Builds a new buffer. Can be used for arrays.",5,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"raw","","Builds a new buffer without checking the size.",5,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"i"}],"output":{"name":"result"}}],[11,"device","","Returns the device used to create this buffer.",5,{"inputs":[{"name":"immutablebuffer"}],"output":{"name":"arc"}}],[11,"queue_families","","Returns the queue families this buffer can be used on.",5,{"inputs":[{"name":"immutablebuffer"}],"output":{"name":"vec"}}],[11,"inner_buffer","","",5,{"inputs":[{"name":"immutablebuffer"}],"output":{"name":"unsafebuffer"}}],[11,"blocks","","",5,{"inputs":[{"name":"immutablebuffer"},{"name":"range"}],"output":{"name":"vec"}}],[11,"block_memory_range","","",5,{"inputs":[{"name":"immutablebuffer"},{"name":"usize"}],"output":{"name":"range"}}],[11,"needs_fence","","",5,{"inputs":[{"name":"immutablebuffer"},{"name":"bool"},{"name":"range"}],"output":{"name":"option"}}],[11,"host_accesses","","",5,{"inputs":[{"name":"immutablebuffer"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"gpu_access","","",5,{"inputs":[{"name":"immutablebuffer"},{"name":"iterator"},{"name":"arc"}],"output":{"name":"gpuaccessresult"}}],[0,"sys","vulkano::buffer","Low level implementation of buffers.",null,null],[3,"UnsafeBuffer","vulkano::buffer::sys","Data storage in a GPU-accessible location.",null,null],[3,"SparseLevel","","",null,null],[12,"sparse","","",6,null],[12,"sparse_residency","","",6,null],[12,"sparse_aliased","","",6,null],[3,"Usage","","Describes how a buffer is going to be used. This is **not** an optimization.",null,null],[12,"transfer_source","","",7,null],[12,"transfer_dest","","",7,null],[12,"uniform_texel_buffer","","",7,null],[12,"storage_texel_buffer","","",7,null],[12,"uniform_buffer","","",7,null],[12,"storage_buffer","","",7,null],[12,"index_buffer","","",7,null],[12,"vertex_buffer","","",7,null],[12,"indirect_buffer","","",7,null],[4,"BufferCreationError","","Error that can happen when creating a buffer.",null,null],[13,"OomError","","Not enough memory.",8,null],[13,"SparseBindingFeatureNotEnabled","","Sparse binding was requested but the corresponding feature wasn&#39;t enabled.",8,null],[13,"SparseResidencyBufferFeatureNotEnabled","","Sparse residency was requested but the corresponding feature wasn&#39;t enabled.",8,null],[13,"SparseResidencyAliasedFeatureNotEnabled","","Sparse aliasing was requested but the corresponding feature wasn&#39;t enabled.",8,null],[11,"fmt","","",9,{"inputs":[{"name":"unsafebuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new buffer of the given size.",9,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usage"},{"name":"sharing"},{"name":"sparselevel"}],"output":{"name":"result"}}],[11,"bind_memory","","",9,{"inputs":[{"name":"unsafebuffer"},{"name":"devicememory"},{"name":"usize"}],"output":{"name":"result"}}],[11,"device","","Returns the device used to create this buffer.",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"arc"}}],[11,"size","","Returns the size of the buffer in bytes.",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"usize"}}],[11,"usage_transfer_src","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"bool"}}],[11,"usage_transfer_dest","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"bool"}}],[11,"usage_uniform_texel_buffer","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"bool"}}],[11,"usage_storage_texel_buffer","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"bool"}}],[11,"usage_uniform_buffer","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"bool"}}],[11,"usage_storage_buffer","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"bool"}}],[11,"usage_index_buffer","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"bool"}}],[11,"usage_vertex_buffer","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"bool"}}],[11,"usage_indirect_buffer","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"bool"}}],[11,"internal_object","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":{"name":"buffer"}}],[11,"drop","","",9,{"inputs":[{"name":"unsafebuffer"}],"output":null}],[11,"clone","","",6,{"inputs":[{"name":"sparselevel"}],"output":{"name":"sparselevel"}}],[11,"fmt","","",6,{"inputs":[{"name":"sparselevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"none","","",6,{"inputs":[],"output":{"name":"sparselevel"}}],[11,"clone","","",7,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"fmt","","",7,{"inputs":[{"name":"usage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"none","","Builds a `Usage` with all values set to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"all","","Builds a `Usage` with all values set to true. Can be used for quick prototyping.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"transfer_source","","Builds a `Usage` with `transfer_source` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"vertex_buffer","","Builds a `Usage` with `vertex_buffer` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"vertex_buffer_transfer_dest","","Builds a `Usage` with `vertex_buffer` and `transfer_dest` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"index_buffer","","Builds a `Usage` with `index_buffer` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"index_buffer_transfer_dest","","Builds a `Usage` with `index_buffer` and `transfer_dest` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"uniform_buffer","","Builds a `Usage` with `uniform_buffer` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"uniform_buffer_transfer_dest","","Builds a `Usage` with `uniform_buffer` and `transfer_dest` set to true and the rest\nto false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"indirect_buffer","","Builds a `Usage` with `indirect_buffer` set to true and the rest to false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"indirect_buffer_transfer_dest","","Builds a `Usage` with `indirect_buffer` and `transfer_dest` set to true and the rest\nto false.",7,{"inputs":[],"output":{"name":"usage"}}],[11,"eq","","",8,{"inputs":[{"name":"buffercreationerror"},{"name":"buffercreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"buffercreationerror"},{"name":"buffercreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"buffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"buffercreationerror"}}],[11,"description","","",8,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"str"}}],[11,"cause","","",8,{"inputs":[{"name":"buffercreationerror"}],"output":{"name":"option"}}],[11,"fmt","","",8,{"inputs":[{"name":"buffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",8,{"inputs":[{"name":"oomerror"}],"output":{"name":"buffercreationerror"}}],[11,"from","","",8,{"inputs":[{"name":"error"}],"output":{"name":"buffercreationerror"}}],[0,"traits","vulkano::buffer","",null,null],[3,"AccessRange","vulkano::buffer::traits","",null,null],[12,"block","","",10,null],[12,"write","","",10,null],[3,"GpuAccessResult","","",null,null],[12,"dependencies","","",11,null],[12,"additional_wait_semaphore","","",11,null],[12,"additional_signal_semaphore","","",11,null],[8,"Buffer","","",null,null],[10,"inner_buffer","","Returns the inner buffer.",12,{"inputs":[{"name":"buffer"}],"output":{"name":"unsafebuffer"}}],[10,"needs_fence","","Returns whether accessing a range of this buffer should signal a fence.",12,{"inputs":[{"name":"buffer"},{"name":"bool"},{"name":"range"}],"output":{"name":"option"}}],[10,"host_accesses","","Called when a command buffer that uses this buffer is being built.",12,{"inputs":[{"name":"buffer"},{"name":"usize"}],"output":{"name":"bool"}}],[10,"blocks","","Given a range, returns the list of blocks which each range is contained in.",12,{"inputs":[{"name":"buffer"},{"name":"range"}],"output":{"name":"vec"}}],[10,"block_memory_range","","Returns the range of bytes of the memory used by a block.",12,{"inputs":[{"name":"buffer"},{"name":"usize"}],"output":{"name":"range"}}],[10,"gpu_access","","",12,{"inputs":[{"name":"buffer"},{"name":"iterator"},{"name":"arc"}],"output":{"name":"gpuaccessresult"}}],[11,"size","","",12,{"inputs":[{"name":"buffer"}],"output":{"name":"usize"}}],[8,"TypedBuffer","","",null,null],[16,"Content","","",13,null],[11,"len","","",13,{"inputs":[{"name":"typedbuffer"}],"output":{"name":"usize"}}],[11,"eq","","",10,{"inputs":[{"name":"accessrange"},{"name":"accessrange"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"accessrange"},{"name":"accessrange"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"accessrange"}],"output":{"name":"accessrange"}}],[11,"fmt","","",10,{"inputs":[{"name":"accessrange"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"view","vulkano::buffer","View of a buffer, in order to use it as a uniform texel buffer or storage texel buffer.",null,null],[3,"BufferView","vulkano::buffer::view","Represents a way for the GPU to interpret buffer data. See the documentation of the\n`view` module.",null,null],[4,"BufferViewCreationError","","Error that can happen when creating a buffer view.",null,null],[13,"OomError","","Out of memory.",14,null],[13,"WrongBufferUsage","","The buffer was not creating with one of the `storage_texel_buffer` or\n`uniform_texel_buffer` usages.",14,null],[13,"UnsupportedFormat","","The requested format is not supported for this usage.",14,null],[11,"new","","Builds a new buffer view.",15,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"result"}}],[11,"unchecked","","Builds a new buffer view without checking that the format is correct.",15,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"name":"result"}}],[11,"uniform_texel_buffer","","Returns true if the buffer view can be used as a uniform texel buffer.",15,{"inputs":[{"name":"bufferview"}],"output":{"name":"bool"}}],[11,"storage_texel_buffer","","Returns true if the buffer view can be used as a storage texel buffer.",15,{"inputs":[{"name":"bufferview"}],"output":{"name":"bool"}}],[11,"storage_texel_buffer_atomic","","Returns true if the buffer view can be used as a storage texel buffer with atomic accesses.",15,{"inputs":[{"name":"bufferview"}],"output":{"name":"bool"}}],[11,"internal_object","","",15,{"inputs":[{"name":"bufferview"}],"output":{"name":"bufferview"}}],[11,"drop","","",15,{"inputs":[{"name":"bufferview"}],"output":null}],[11,"clone","","",14,{"inputs":[{"name":"bufferviewcreationerror"}],"output":{"name":"bufferviewcreationerror"}}],[11,"fmt","","",14,{"inputs":[{"name":"bufferviewcreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",14,{"inputs":[{"name":"bufferviewcreationerror"}],"output":{"name":"str"}}],[11,"cause","","",14,{"inputs":[{"name":"bufferviewcreationerror"}],"output":{"name":"option"}}],[11,"fmt","","",14,{"inputs":[{"name":"bufferviewcreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",14,{"inputs":[{"name":"oomerror"}],"output":{"name":"bufferviewcreationerror"}}],[11,"from","","",14,{"inputs":[{"name":"error"}],"output":{"name":"bufferviewcreationerror"}}],[11,"clone","vulkano::buffer","",16,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bufferslice"}}],[11,"buffer","","Returns the buffer that this slice belongs to.",16,{"inputs":[{"name":"bufferslice"}],"output":{"name":"arc"}}],[11,"offset","","Returns the offset of that slice within the buffer.",16,{"inputs":[{"name":"bufferslice"}],"output":{"name":"usize"}}],[11,"size","","Returns the size of that slice in bytes.",16,{"inputs":[{"name":"bufferslice"}],"output":{"name":"usize"}}],[11,"slice_custom","","Builds a slice that contains an element from inside the buffer.",16,{"inputs":[{"name":"bufferslice"},{"name":"f"}],"output":{"name":"bufferslice"}}],[11,"len","","Returns the number of elements in this slice.",16,{"inputs":[{"name":"bufferslice"}],"output":{"name":"usize"}}],[11,"index","","Reduces the slice to just one element of the array.",16,{"inputs":[{"name":"bufferslice"},{"name":"usize"}],"output":{"name":"option"}}],[11,"slice","","Reduces the slice to just a range of the array.",16,{"inputs":[{"name":"bufferslice"},{"name":"range"}],"output":{"name":"option"}}],[11,"from","","",16,{"inputs":[{"name":"arc"}],"output":{"name":"bufferslice"}}],[11,"from","","",16,{"inputs":[{"name":"bufferslice"}],"output":{"name":"bufferslice"}}],[0,"command_buffer","vulkano","Commands that the GPU will execute (includes draw commands).",null,null],[3,"Submission","vulkano::command_buffer","",null,null],[3,"DynamicState","","The dynamic state to use for a draw command.",null,null],[12,"line_width","","",17,null],[12,"viewports","","",17,null],[12,"scissors","","",17,null],[3,"PrimaryCommandBufferBuilder","","A prototype of a primary command buffer.",null,null],[3,"PrimaryCommandBufferBuilderInlineDraw","","Object that you obtain when calling `draw_inline` or `next_subpass_inline`.",null,null],[3,"PrimaryCommandBufferBuilderSecondaryDraw","","Object that you obtain when calling `draw_secondary` or `next_subpass_secondary`.",null,null],[3,"PrimaryCommandBuffer","","Represents a collection of commands to be executed by the GPU.",null,null],[3,"SecondaryGraphicsCommandBufferBuilder","","A prototype of a secondary compute command buffer.",null,null],[3,"SecondaryGraphicsCommandBuffer","","Represents a collection of commands to be executed by the GPU.",null,null],[3,"SecondaryComputeCommandBufferBuilder","","A prototype of a secondary compute command buffer.",null,null],[3,"SecondaryComputeCommandBuffer","","Represents a collection of commands to be executed by the GPU.",null,null],[3,"CommandBufferPool","","A pool from which command buffers are created from.",null,null],[3,"DrawIndirectCommand","","",null,null],[12,"vertex_count","","",18,null],[12,"instance_count","","",18,null],[12,"first_vertex","","",18,null],[12,"first_instance","","",18,null],[3,"DrawIndexedIndirectCommand","","",null,null],[12,"index_count","","",19,null],[12,"instance_count","","",19,null],[12,"first_index","","",19,null],[12,"vertex_offset","","",19,null],[12,"first_instance","","",19,null],[5,"submit","","Submits the command buffer to a queue so that it is executed.",null,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"result"}}],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",20,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",20,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",20,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",20,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",20,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",20,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"from","alloc::boxed","",21,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",21,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",21,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",21,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",21,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",21,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",22,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",23,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",24,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",25,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",26,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",27,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"description","","",28,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"description","rustc_unicode::char","",29,{"inputs":[{"name":"decodeutf16error"}],"output":{"name":"str"}}],[11,"description","alloc::boxed","",21,{"inputs":[{"name":"box"}],"output":{"name":"str"}}],[11,"cause","","",21,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"is","vulkano::command_buffer","Returns true if the boxed type is the same as `T`",30,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",30,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",30,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",30,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",30,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",31,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",31,null],[11,"next_back","","",31,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","std::thread::local","",32,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",32,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",33,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",33,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::elf","",34,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",34,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"new","std::thread::local::os","",35,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",35,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",36,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",36,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",36,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",37,{"inputs":[],"output":{"name":"keyinner"}}],[11,"set","","",37,null],[11,"get","","",37,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",38,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",38,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",38,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",38,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",39,null],[11,"name","","Gets the thread&#39;s name.",39,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",39,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"thread","","Extracts a handle to the underlying thread",40,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",40,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::map","",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",41,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",41,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",41,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",41,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"s"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",41,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",41,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"valuesmut"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",41,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",41,null],[11,"get","","Returns a reference to the value corresponding to the key.",41,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",41,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",41,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",41,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",41,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",41,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",41,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",41,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",42,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",43,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",44,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",41,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",42,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",42,null],[11,"len","","",42,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",45,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",45,null],[11,"len","","",45,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",46,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",46,null],[11,"len","","",46,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",43,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",43,null],[11,"len","","",43,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",44,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",44,null],[11,"len","","",44,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",47,{"inputs":[{"name":"valuesmut"}],"output":{"name":"option"}}],[11,"size_hint","","",47,null],[11,"len","","",47,{"inputs":[{"name":"valuesmut"}],"output":{"name":"usize"}}],[11,"next","","",48,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",48,null],[11,"len","","",48,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",49,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",49,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"key","","Returns a reference to this entry&#39;s key.",49,{"inputs":[{"name":"entry"}],"output":{"name":"k"}}],[11,"key","","Gets a reference to the key in the entry.",50,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"k"}}],[11,"get","","Gets a reference to the value in the entry.",50,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",50,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",50,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",50,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",50,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",51,{"inputs":[{"name":"vacantentry"}],"output":{"name":"k"}}],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",51,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",41,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",41,null],[11,"extend","","",41,null],[11,"clone","","",52,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",52,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",52,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",52,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",53,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",53,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",53,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",53,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",53,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",53,{"inputs":[{"name":"hashset"}],"output":{"name":"s"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",53,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",53,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",53,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",53,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",53,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",53,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",53,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",53,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",53,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",53,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",53,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",53,null],[11,"contains","","Returns `true` if the set contains a value.",53,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",53,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",53,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",53,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",53,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",53,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",53,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",53,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",53,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",53,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",53,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",53,null],[11,"extend","","",53,null],[11,"default","","",53,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",53,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"len","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",55,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"len","","",55,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",56,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"len","","",56,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",57,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",57,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"clone","","",58,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",58,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"clone","","",59,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",59,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"clone","","",60,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",60,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",60,null],[11,"clone","collections::linked_list","",61,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",62,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"default","","",63,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",63,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",63,null],[11,"iter","","Provides a forward iterator.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",63,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",63,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"bool"}}],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",63,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",63,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",63,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"front_place","","Returns a place for insertion at the front of the list.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"frontplace"}}],[11,"back_place","","Returns a place for insertion at the back of the list.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"backplace"}}],[11,"drop","","",63,null],[11,"next","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",64,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",64,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",62,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",63,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",63,null],[11,"extend","","",63,null],[11,"eq","","",63,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",63,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",63,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",63,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",63,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",63,null],[11,"make_place","","",65,{"inputs":[{"name":"frontplace"}],"output":{"name":"frontplace"}}],[11,"pointer","","",65,null],[11,"finalize","","",65,null],[11,"make_place","","",66,{"inputs":[{"name":"backplace"}],"output":{"name":"backplace"}}],[11,"pointer","","",66,null],[11,"finalize","","",66,null],[11,"clone","collections::binary_heap","",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",67,null],[11,"default","","",67,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",67,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",67,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",67,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",67,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",67,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",67,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",67,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",67,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",67,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",67,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",67,null],[11,"clone","","",68,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",68,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"next_back","","",70,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",67,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",71,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",67,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",67,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",67,null],[11,"extend","","",67,null],[11,"clone","collections::vec_deque","",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",72,null],[11,"default","","",72,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",72,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",72,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",72,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",72,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",72,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",72,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",72,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",72,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",72,null],[11,"iter","","Returns a front-to-back iterator.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",72,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",72,null],[11,"len","","Returns the number of elements in the `VecDeque`.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",72,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",72,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",72,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"bool"}}],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",72,null],[11,"push_back","","Appends an element to the back of a buffer",72,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",72,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",72,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",72,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",72,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",72,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",72,null],[11,"retain","","Retains only the elements specified by the predicate.",72,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",72,null],[11,"clone","","",73,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",73,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"next_back","","",73,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",74,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"next_back","","",74,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",75,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",75,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"next_back","","",75,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",76,null],[11,"next","","",76,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"next_back","","",76,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",72,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",72,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",72,null],[11,"index","","",72,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",72,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",72,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",72,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",72,null],[11,"extend","","",72,null],[11,"fmt","","",72,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",72,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",71,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"next","std::env","",77,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next","","",78,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"clone","","",79,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",79,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",79,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",79,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",80,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"fmt","","",81,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",81,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",81,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",82,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"len","","",82,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",83,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"len","","",83,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",84,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",84,null],[11,"cmp","","",84,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",84,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",84,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",84,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",84,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",84,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",84,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",85,null],[11,"fmt","","",86,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",86,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",87,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",87,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",87,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",84,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",84,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",84,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",84,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",84,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",84,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",84,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",84,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",84,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",85,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",85,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",85,null],[11,"as_ptr","","Returns the inner pointer to this C string.",85,null],[11,"to_bytes","","Converts this C string to a byte slice.",85,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",85,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",85,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",85,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",84,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",84,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","collections::vec","",71,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",85,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",84,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",84,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",86,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",86,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",86,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",86,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",88,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",87,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",87,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",87,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"cause","","",87,{"inputs":[{"name":"intostringerror"}],"output":{"name":"option"}}],[11,"fmt","","",87,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",85,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",85,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",85,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",85,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"from","","",84,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",84,{"inputs":[{"name":"cstring"},{"name":"rangefull"}],"output":{"name":"cstr"}}],[11,"as_ref","","",85,{"inputs":[{"name":"cstr"}],"output":{"name":"cstr"}}],[11,"as_ref","","",84,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"clone","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",89,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",89,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",89,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",89,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",89,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",89,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",89,{"inputs":[{"name":"osstring"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",89,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",89,null],[11,"from","","",89,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",89,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",89,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",90,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",90,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",90,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",90,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"is_empty","","Checks whether the `OsStr` is empty.",90,{"inputs":[{"name":"osstr"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of this `OsStr`.",90,{"inputs":[{"name":"osstr"}],"output":{"name":"usize"}}],[11,"deref","","",89,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"default","","",89,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",89,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",89,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",89,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",89,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",89,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",89,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",89,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",89,null],[11,"eq","","",90,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",90,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",90,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",90,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",90,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",90,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",90,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"eq","","",89,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",90,{"inputs":[{"name":"osstr"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"osstr"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"eq","","",89,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",90,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",90,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",91,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",91,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"option"}}],[11,"hash","","",90,null],[11,"fmt","","",90,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",89,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",90,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",90,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",89,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",92,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",94,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",95,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",95,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",96,null],[11,"eq","","",96,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",97,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",97,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",97,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",97,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",97,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",97,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",97,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",97,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",97,null],[11,"read_to_end","","",97,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",97,null],[11,"flush","","",97,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",97,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank new set of options ready for configuration.",94,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",94,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",94,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",94,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",94,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",94,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create_new","","Sets the option to always create a new file.",94,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",94,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",93,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",93,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",93,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",93,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"modified","","Returns the last modification time listed in this metadata.",93,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"accessed","","Returns the last access time of this metadata.",93,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"created","","Returns the creation time listed in the this metadata.",93,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",95,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",95,null],[11,"is_dir","","Test whether this file type represents a directory.",96,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",96,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",96,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",98,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",99,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",99,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",99,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",99,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",100,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",100,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",100,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",101,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",101,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",101,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",101,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",101,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",101,null],[11,"fill_buf","","",101,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",101,null],[11,"fmt","","",101,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",101,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",103,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",103,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",103,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",103,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",103,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",103,null],[11,"flush","","",103,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",103,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",103,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",103,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",102,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",102,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",88,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",102,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",102,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",104,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",104,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",104,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",104,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",104,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",104,null],[11,"flush","","",104,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",104,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",105,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",105,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",105,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",105,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",105,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",105,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",105,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",105,null],[11,"seek","","",105,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",105,null],[11,"fill_buf","","",105,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",105,null],[11,"write","","",105,null],[11,"flush","","",105,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",105,null],[11,"flush","","",105,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",105,null],[11,"flush","","",105,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",88,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",106,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",106,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",88,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",88,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",88,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",88,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",88,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",88,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",88,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",88,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",88,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",88,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",88,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",21,null],[11,"read_to_end","","",21,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",21,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",21,null],[11,"write","","",21,null],[11,"flush","","",21,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",21,null],[11,"write_fmt","","",21,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",21,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",21,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",21,null],[11,"read_until","","",21,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",21,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",71,null],[11,"write_all","","",71,null],[11,"flush","","",71,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"read","std::io::util","",107,null],[11,"fill_buf","","",107,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",107,null],[11,"read","","",108,null],[11,"write","","",109,null],[11,"flush","","",109,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",110,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",110,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",110,null],[11,"read_to_end","","",110,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",110,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",110,null],[11,"read","","",111,null],[11,"read_to_end","","",111,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",111,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",111,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",112,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",112,null],[11,"flush","","",112,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",112,null],[11,"write_fmt","","",112,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",113,null],[11,"flush","","",113,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",114,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",114,null],[11,"flush","","",114,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",114,null],[11,"write_fmt","","",114,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",115,null],[11,"flush","","",115,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",116,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",116,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"read","","",117,null],[11,"fill_buf","","",117,{"inputs":[{"name":"chain"}],"output":{"name":"result"}}],[11,"consume","","",117,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",118,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",118,null],[11,"fill_buf","","",118,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",118,null],[11,"next","","",119,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",120,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",121,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",120,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",120,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",120,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",122,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",123,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",124,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",124,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",124,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",124,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",124,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",124,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",124,null],[11,"fmt","","",124,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",124,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",125,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",125,null],[11,"clone","","",125,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",125,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",126,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",126,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",124,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",126,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",126,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",126,null],[11,"partial_cmp","","",126,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",126,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",126,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",126,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",127,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",127,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this is an address reserved for documentation\nThis is defined to be 2001:db8::/32 in RFC 3849.",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",127,null],[11,"fmt","","",127,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",127,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",127,null],[11,"partial_cmp","","",127,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",127,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"from","","",127,null],[11,"fmt","std::net::addr","",128,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",128,null],[11,"eq","","",128,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",128,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",128,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",128,null],[11,"port","","Returns the port number associated with this socket address.",128,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",128,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",129,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",129,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",129,null],[11,"port","","Returns the port number associated with this socket address.",129,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",129,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",130,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",130,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",130,null],[11,"port","","Returns the port number associated with this socket address.",130,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",130,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",130,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_flowinfo","","Change the flow information associated with this socket address.",130,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",130,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_scope_id","","Change the scope ID associated with this socket address.",130,null],[11,"fmt","","",128,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",130,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",129,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",130,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",129,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",130,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",129,null],[11,"hash","","",130,null],[11,"to_socket_addrs","","",128,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",129,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",130,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",131,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",131,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",131,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",131,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",131,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",131,{"inputs":[{"name":"tcpstream"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",131,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"read","","",131,null],[11,"read_to_end","","",131,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",131,null],[11,"flush","","",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",132,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",132,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",132,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",132,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",132,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",132,{"inputs":[{"name":"tcplistener"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",132,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",132,{"inputs":[{"name":"tcplistener"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",132,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",132,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",132,{"inputs":[{"name":"tcplistener"},{"name":"bool"}],"output":{"name":"result"}}],[11,"next","","",133,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",132,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",134,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",134,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",134,null],[11,"local_addr","","Returns the socket address that this socket was created from.",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",134,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",134,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",134,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",134,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",134,{"inputs":[{"name":"udpsocket"},{"name":"u32"}],"output":{"name":"result"}}],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",134,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",134,{"inputs":[{"name":"udpsocket"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",134,{"inputs":[{"name":"udpsocket"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",134,{"inputs":[{"name":"udpsocket"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",134,{"inputs":[{"name":"udpsocket"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",134,{"inputs":[{"name":"udpsocket"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",134,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"send","","Sends data on the socket to the remote address to which it is connected.",134,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",134,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",134,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"fmt","","",134,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",124,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",126,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",127,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",129,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",130,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",128,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",135,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",135,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",135,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",135,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",136,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",136,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",137,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",138,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::fs","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"st_dev","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_ino","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_mode","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_nlink","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_uid","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_gid","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_rdev","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_size","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_atime","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_atime_nsec","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime_nsec","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime_nsec","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_blksize","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_blocks","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"as_raw_fd","","",97,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",97,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",97,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",132,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",131,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",132,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",134,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",131,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",132,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",134,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",89,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",89,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",90,null],[11,"as_bytes","","",90,null],[11,"mode","std::fs","",95,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",95,null],[11,"from_mode","","",95,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",94,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"custom_flags","","",94,{"inputs":[{"name":"openoptions"},{"name":"i32"}],"output":{"name":"openoptions"}}],[11,"dev","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"atime","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"blocks","","",93,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"is_block_device","","",96,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",96,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",96,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",96,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",99,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",100,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",139,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",139,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",139,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"before_exec","","",139,{"inputs":[{"name":"command"},{"name":"f"}],"output":{"name":"command"}}],[11,"exec","","",139,{"inputs":[{"name":"command"}],"output":{"name":"error"}}],[11,"signal","","",140,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",141,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",142,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",143,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",144,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",142,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",143,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",144,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"as_pthread_t","std::thread","",40,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"into_pthread_t","","",40,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"clone","std::sys::ext::net","",145,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"is_unnamed","","Returns true iff the address is unnamed.",145,{"inputs":[{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",145,{"inputs":[{"name":"socketaddr"}],"output":{"name":"option"}}],[11,"fmt","","",145,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"unixstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"connect","","Connects to the socket named by `path`.",146,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",146,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",146,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this connection.",146,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",146,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout for the socket.",146,{"inputs":[{"name":"unixstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout for the socket.",146,{"inputs":[{"name":"unixstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",146,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",146,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",146,{"inputs":[{"name":"unixstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"take_error","","Returns the value of the `SO_ERROR` option.",146,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",146,{"inputs":[{"name":"unixstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"read","","",146,null],[11,"read_to_end","","",146,{"inputs":[{"name":"unixstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",146,null],[11,"flush","","",146,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",146,{"inputs":[{"name":"unixstream"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",146,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",146,{"inputs":[{"name":"unixstream"}],"output":{"name":"i32"}}],[11,"fmt","","",147,{"inputs":[{"name":"unixlistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",147,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",147,{"inputs":[{"name":"unixlistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",147,{"inputs":[{"name":"unixlistener"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",147,{"inputs":[{"name":"unixlistener"}],"output":{"name":"result"}}],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",147,{"inputs":[{"name":"unixlistener"},{"name":"bool"}],"output":{"name":"result"}}],[11,"take_error","","Returns the value of the `SO_ERROR` option.",147,{"inputs":[{"name":"unixlistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over incoming connections.",147,{"inputs":[{"name":"unixlistener"}],"output":{"name":"incoming"}}],[11,"as_raw_fd","","",147,{"inputs":[{"name":"unixlistener"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",147,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",147,{"inputs":[{"name":"unixlistener"}],"output":{"name":"i32"}}],[11,"fmt","","",148,{"inputs":[{"name":"incoming"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",148,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"size_hint","","",148,null],[11,"fmt","","",149,{"inputs":[{"name":"unixdatagram"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a Unix datagram socket bound to the given path.",149,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",149,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",149,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",149,{"inputs":[{"name":"unixdatagram"},{"name":"p"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",149,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the address of this socket.",149,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",149,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket.",149,null],[11,"recv","","Receives data from the socket.",149,null],[11,"send_to","","Sends data on the socket to the specified address.",149,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",149,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",149,{"inputs":[{"name":"unixdatagram"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout for the socket.",149,{"inputs":[{"name":"unixdatagram"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",149,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",149,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",149,{"inputs":[{"name":"unixdatagram"},{"name":"bool"}],"output":{"name":"result"}}],[11,"take_error","","Returns the value of the `SO_ERROR` option.",149,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",149,{"inputs":[{"name":"unixdatagram"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",149,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",149,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",149,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"i32"}}],[11,"deref","std::panic","",150,{"inputs":[{"name":"assertunwindsafe"}],"output":{"name":"t"}}],[11,"deref_mut","","",150,{"inputs":[{"name":"assertunwindsafe"}],"output":{"name":"t"}}],[11,"call_once","","",150,null],[11,"new","","Creates a new `AssertRecoverSafe` wrapper around the provided type.",151,{"inputs":[{"name":"t"}],"output":{"name":"assertrecoversafe"}}],[11,"into_inner","","Consumes the `AssertRecoverSafe`, returning the wrapped value.",151,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref","","",151,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref_mut","","",151,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"call_once","","",151,null],[11,"eq","std::path","",152,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",152,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",152,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",152,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",152,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",152,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",152,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",152,null],[11,"fmt","","",152,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",152,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",152,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",153,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",153,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",153,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"hash","","",153,null],[11,"fmt","","",154,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",154,null],[11,"cmp","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",154,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",154,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",155,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",155,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",155,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",155,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",156,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",156,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",155,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",155,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",155,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",155,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",155,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"clone","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",157,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",157,null],[11,"pop","","Truncate `self` to `self.parent()`.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",157,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",157,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",157,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",157,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",157,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",157,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",157,null],[11,"fmt","","",157,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",158,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",158,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",158,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",158,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",158,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",158,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",158,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",158,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",158,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",158,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",158,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"result"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",158,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",158,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",158,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",158,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",158,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",158,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",158,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",158,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",158,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",158,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Query the file system to get information about a file, directory, etc.",158,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",158,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",158,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",158,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Returns an iterator over the entries within a directory.",158,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Returns whether the path points at an existing entity.",158,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether the path is pointing at a regular file.",158,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Returns whether the path is pointing at a directory.",158,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"from","collections::borrow","",91,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",91,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",158,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",157,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"hash","","",157,null],[11,"partial_cmp","","",157,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",157,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"eq","","",159,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"clone","","",159,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"stripprefixerror"}}],[11,"fmt","","",159,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",158,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",158,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",158,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",158,null],[11,"partial_cmp","","",158,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",158,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",158,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",90,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","collections::borrow","",91,{"inputs":[{"name":"cow"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",92,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",157,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"eq","","",157,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","","",158,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"option"}}],[11,"partial_cmp","","",158,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","","",157,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","std::path","",158,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"partial_cmp","std::path","",158,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",91,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","","",91,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"eq","std::path","",157,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"partial_cmp","std::path","",157,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","","",157,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",90,{"inputs":[{"name":"osstr"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",157,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",90,{"inputs":[{"name":"osstr"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",157,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",157,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",157,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",157,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"option"}}],[11,"partial_cmp","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",157,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",157,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",158,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",90,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",158,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",90,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::path","",158,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",158,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",158,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",158,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"option"}}],[11,"partial_cmp","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::path","",158,{"inputs":[{"name":"path"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",158,{"inputs":[{"name":"path"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","","",90,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",91,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",90,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",90,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",91,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",91,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",89,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","std::path","",159,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",159,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"str"}}],[11,"write","std::process","",142,null],[11,"flush","","",142,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",143,null],[11,"read_to_end","","",143,{"inputs":[{"name":"childstdout"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read","","",144,null],[11,"read_to_end","","",144,{"inputs":[{"name":"childstderr"},{"name":"vec"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",139,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",139,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",139,null],[11,"env","","Inserts or updates an environment variable mapping.",139,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",139,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",139,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",139,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",139,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",139,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",139,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",139,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",139,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",139,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",139,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",161,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",161,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"fmt","","",161,{"inputs":[{"name":"output"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",141,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",141,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",141,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",140,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",140,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",140,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",140,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",140,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",162,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",162,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",162,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",162,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",163,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",163,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",163,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",164,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",164,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",164,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",164,null],[11,"drop","","",163,null],[11,"drop","","",164,null],[11,"fmt","","",163,{"inputs":[{"name":"select"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",164,{"inputs":[{"name":"handle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc","",165,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",165,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",166,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",166,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",166,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",167,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",167,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",168,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",168,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",169,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",169,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",169,null],[11,"fmt","","",169,{"inputs":[{"name":"sender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value on this synchronous channel.",170,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",170,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",170,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",170,null],[11,"fmt","","",170,{"inputs":[{"name":"syncsender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",171,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",171,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",171,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",172,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",173,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",171,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",171,null],[11,"fmt","","",171,{"inputs":[{"name":"receiver"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",165,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",165,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",165,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",165,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",168,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",168,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",168,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",168,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",166,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",166,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",166,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",167,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",167,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",167,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",174,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",174,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",175,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",176,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",176,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",176,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",176,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",177,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",177,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",177,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",177,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",177,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",177,null],[11,"default","","",177,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",177,null],[11,"new","","Creates a new condition variable",178,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",178,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",178,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",178,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",178,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",178,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",178,null],[11,"drop","std::sync::mutex","",20,null],[11,"default","","",20,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",20,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",179,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",179,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",179,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",179,null],[11,"deref","","",180,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",180,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",180,null],[11,"new","std::sync::once","Creates a new `Once` value.",181,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",181,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",181,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",182,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",182,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",182,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",182,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",182,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",182,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",182,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",182,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",182,null],[11,"fmt","","",182,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",182,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",183,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",183,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",183,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",183,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",183,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",183,null],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",184,{"inputs":[{"name":"rwlockreadguard"},{"name":"f"}],"output":{"name":"rwlockreadguard"}}],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",185,{"inputs":[{"name":"rwlockwriteguard"},{"name":"f"}],"output":{"name":"rwlockwriteguard"}}],[11,"deref","","",184,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",185,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",185,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",184,null],[11,"drop","","",185,null],[11,"default","core::sync::atomic","",186,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",187,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"default","","",188,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"default","","",189,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",190,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",190,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",186,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",186,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",186,null],[11,"swap","","Stores a value into the bool, returning the old value.",186,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",186,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",186,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",186,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",186,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",186,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",186,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",186,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",187,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",187,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",187,null],[11,"swap","","Stores a value into the isize, returning the old value.",187,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",187,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange","","Stores a value into the `isize` if the current value is the same as the `current` value.",187,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"compare_exchange_weak","","Stores a value into the `isize` if the current value is the same as the `current` value.",187,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",187,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",187,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",187,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",187,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",187,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",188,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",188,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",188,null],[11,"swap","","Stores a value into the usize, returning the old value.",188,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",188,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange","","Stores a value into the `usize` if the current value is the same as the `current` value.",188,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"compare_exchange_weak","","Stores a value into the `usize` if the current value is the same as the `current` value.",188,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",188,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",188,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",188,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",188,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",188,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",189,null],[11,"load","","Loads a value from the pointer.",189,null],[11,"store","","Stores a value into the pointer.",189,null],[11,"swap","","Stores a value into the pointer, returning the old value.",189,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",189,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",189,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",189,null],[11,"fmt","","",188,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",187,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",186,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",189,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","std::time::duration","",191,null],[11,"fmt","","",191,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",191,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",191,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",191,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",191,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",191,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",191,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",191,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",191,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",191,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",191,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",191,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",191,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",191,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",191,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"add_assign","","",191,null],[11,"sub","","",191,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub_assign","","",191,null],[11,"mul","","",191,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"mul_assign","","",191,null],[11,"div","","",191,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div_assign","","",191,null],[11,"cmp","std::time","",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",192,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",193,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",193,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",193,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",193,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",193,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",193,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",193,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",193,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",193,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"fmt","","",194,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",194,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"systemtimeerror"}}],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",192,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",192,{"inputs":[{"name":"instant"}],"output":{"name":"duration"}}],[11,"add","","",192,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"add_assign","","",192,null],[11,"sub","","",192,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub_assign","","",192,null],[11,"sub","","",192,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"fmt","","",192,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",193,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",193,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",193,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",193,{"inputs":[{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add","","",193,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"add_assign","","",193,null],[11,"sub","","",193,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub_assign","","",193,null],[11,"fmt","","",193,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",194,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"duration"}}],[11,"description","","",194,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"str"}}],[11,"fmt","","",194,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::sys_common::poison","",195,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",195,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",195,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",195,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",195,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",195,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",195,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",196,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",196,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",196,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",196,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",196,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"clone","libc::unix","",197,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",198,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",199,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",200,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",201,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",202,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",203,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",204,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",205,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",206,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",207,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",208,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","","",209,{"inputs":[{"name":"winsize"}],"output":{"name":"winsize"}}],[11,"clone","libc::unix::notbsd","",210,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",211,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",212,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",213,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",214,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",215,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",216,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",217,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",218,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",219,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",220,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",221,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",222,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",223,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",224,{"inputs":[{"name":"lconv"}],"output":{"name":"lconv"}}],[11,"clone","libc::unix::notbsd::linux","",225,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",226,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",227,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",228,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",229,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",230,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",231,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",232,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",233,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",234,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",235,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",236,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",237,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",238,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",239,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",240,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",241,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",242,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",243,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",244,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",245,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",246,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",247,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",248,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",249,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",250,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",251,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","libc::unix::notbsd::linux::other::b64","",252,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",253,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",254,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",255,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",256,{"inputs":[{"name":"mcontext_t"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",257,{"inputs":[{"name":"ucontext_t"}],"output":{"name":"ucontext_t"}}],[11,"payload","std::panicking","Returns the payload associated with the panic.",258,{"inputs":[{"name":"panicinfo"}],"output":{"name":"any"}}],[11,"location","","Returns information about the location from which the panic originated,\nif available.",258,{"inputs":[{"name":"panicinfo"}],"output":{"name":"option"}}],[11,"file","","Returns the name of the source file from which the panic originated.",259,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"line","","Returns the line number from which the panic originated.",259,{"inputs":[{"name":"location"}],"output":{"name":"u32"}}],[11,"cmp","collections::string","",92,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",92,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",92,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",92,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",92,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",92,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new empty `String`.",92,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",92,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",92,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",92,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",92,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",92,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",92,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",92,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",92,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",92,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_mut_str","","Extracts a string slice containing the entire string.",92,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Appends a given string slice onto the end of this `String`.",92,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",92,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",92,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",92,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",92,null],[11,"push","","Appends the given `char` to the end of this `String`.",92,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",92,null],[11,"truncate","","Shortens this `String` to the specified length.",92,null],[11,"pop","","Removes the last character from the string buffer and returns it.",92,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",92,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into this `String` at a byte position.",92,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",92,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of this `String`, in bytes.",92,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",92,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates this `String`, removing all contents.",92,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",92,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",92,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",26,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",26,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",26,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",92,null],[11,"from_iter","","",92,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",92,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",92,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",92,null],[11,"extend","","",92,null],[11,"extend","","",92,null],[11,"extend","","",92,null],[11,"eq","","",92,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",92,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",92,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",91,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",91,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",91,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",92,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"default","","",92,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",92,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",92,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",92,null],[11,"add","","",92,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",92,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",92,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",92,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",92,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index","","",92,{"inputs":[{"name":"string"},{"name":"rangeinclusive"}],"output":{"name":"str"}}],[11,"index","","",92,{"inputs":[{"name":"string"},{"name":"rangetoinclusive"}],"output":{"name":"str"}}],[11,"index_mut","","",92,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",92,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",92,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",92,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",92,{"inputs":[{"name":"string"},{"name":"rangeinclusive"}],"output":{"name":"str"}}],[11,"index_mut","","",92,{"inputs":[{"name":"string"},{"name":"rangetoinclusive"}],"output":{"name":"str"}}],[11,"deref","","",92,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",92,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",92,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",28,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",92,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",92,null],[11,"from","","",92,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",91,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",91,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",92,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"write_str","","",92,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",92,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",260,null],[11,"next","","",260,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",260,null],[11,"next_back","","",260,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"clone","core::raw","",261,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",262,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"next","rustc_unicode::char","",263,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",264,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"clone","","",265,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"eq","","",29,{"inputs":[{"name":"decodeutf16error"},{"name":"decodeutf16error"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"decodeutf16error"},{"name":"decodeutf16error"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"decodeutf16error"}],"output":{"name":"decodeutf16error"}}],[11,"fmt","","",29,{"inputs":[{"name":"decodeutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",265,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",265,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",29,{"inputs":[{"name":"decodeutf16error"}],"output":{"name":"u16"}}],[11,"fmt","","",29,{"inputs":[{"name":"decodeutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::cmp","",266,null],[11,"fmt","","",266,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",266,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",266,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",266,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",266,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",266,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",267,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",268,null],[11,"make_place","","",268,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",268,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",21,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",267,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",268,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",21,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",21,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",21,null],[11,"default","","",21,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",21,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",21,null],[11,"clone","","",21,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",21,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",21,null],[11,"from","","",21,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",21,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",21,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",21,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",21,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",21,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",21,null],[11,"next_back","","",21,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",21,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",21,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",21,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",21,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",21,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",21,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",21,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"fmt","vulkano::command_buffer","",269,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",269,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",269,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",269,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",269,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",269,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",269,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",269,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",270,null],[11,"fmt","","",270,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",270,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",270,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",270,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",270,{"inputs":[],"output":{"name":"typeid"}}],[11,"new","core::ptr","Creates a new `Unique`.",271,null],[11,"get","","Dereferences the content.",271,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",271,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",271,null],[11,"fmt","","",271,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",272,null],[11,"clone","","",272,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",272,null],[11,"fmt","","",272,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","collections::str","",273,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"encodeutf16"}}],[11,"next","","",273,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",273,null],[11,"borrow","collections::string","",92,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",274,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",274,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",274,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",274,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"fmt","","",275,{"inputs":[{"name":"charsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",275,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",275,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",275,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",275,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",275,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",275,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",275,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",275,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",276,{"inputs":[{"name":"charslicesearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",276,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",276,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",276,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",276,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",276,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",276,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",276,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",276,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",277,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"fmt","","",277,{"inputs":[{"name":"charpredicatesearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"haystack","","",277,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",277,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",277,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",277,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",277,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",277,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",277,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",278,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",278,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"haystack","","",278,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",278,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",278,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",278,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",278,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"eq","core::ops","",279,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",279,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",279,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",280,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",280,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",280,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",280,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",280,{"inputs":[{"name":"range"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",281,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",281,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",281,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",281,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",281,{"inputs":[{"name":"rangefrom"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",282,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",282,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",282,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",282,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",282,{"inputs":[{"name":"rangeto"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",283,{"inputs":[{"name":"rangeinclusive"},{"name":"rangeinclusive"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"rangeinclusive"},{"name":"rangeinclusive"}],"output":{"name":"bool"}}],[11,"clone","","",283,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"fmt","","",283,{"inputs":[{"name":"rangeinclusive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",283,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",283,{"inputs":[{"name":"rangeinclusive"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",284,{"inputs":[{"name":"rangetoinclusive"},{"name":"rangetoinclusive"}],"output":{"name":"bool"}}],[11,"ne","","",284,{"inputs":[{"name":"rangetoinclusive"},{"name":"rangetoinclusive"}],"output":{"name":"bool"}}],[11,"clone","","",284,{"inputs":[{"name":"rangetoinclusive"}],"output":{"name":"rangetoinclusive"}}],[11,"fmt","","",284,{"inputs":[{"name":"rangetoinclusive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",284,{"inputs":[{"name":"rangetoinclusive"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"fmt","core::hash::sip","",285,{"inputs":[{"name":"siphasher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",285,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",285,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",285,null],[11,"finish","","",285,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",285,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",285,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",286,{"inputs":[{"name":"buildhasherdefault"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"build_hasher","","",286,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",286,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",286,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",71,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",71,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",71,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",71,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",71,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",71,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",71,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",71,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",71,null],[11,"as_slice","","Extracts a slice containing the entire vector.",71,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",71,null],[11,"set_len","","Sets the length of a vector.",71,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",71,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",71,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",71,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",71,null],[11,"push","","Appends an element to the back of a collection.",71,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",71,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",71,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",71,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",71,null],[11,"len","","Returns the number of elements in the vector.",71,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",71,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",71,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",71,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",71,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",71,null],[11,"clone","","",71,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",71,null],[11,"hash","","",71,null],[11,"index","","",71,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",71,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",71,null],[11,"index","","",71,null],[11,"index","","",71,null],[11,"index","","",71,null],[11,"index","","",71,null],[11,"index","","",71,null],[11,"index_mut","","",71,null],[11,"index_mut","","",71,null],[11,"index_mut","","",71,null],[11,"index_mut","","",71,null],[11,"index_mut","","",71,null],[11,"index_mut","","",71,null],[11,"deref","","",71,null],[11,"deref_mut","","",71,null],[11,"from_iter","","",71,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",71,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",71,null],[11,"extend","","",71,null],[11,"eq","","",71,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","collections::borrow","",91,null],[11,"ne","","",91,null],[11,"eq","","",91,null],[11,"ne","","",91,null],[11,"eq","","",91,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"partial_cmp","","",71,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",71,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",71,null],[11,"default","","",71,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",71,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",71,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",71,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",71,null],[11,"as_mut","","",71,null],[11,"from","","",71,null],[11,"from","","",71,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",91,null],[11,"from","","",91,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",91,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",287,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",287,null],[11,"count","","",287,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",287,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",287,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"drop","","",287,null],[11,"next","","",288,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",288,null],[11,"next_back","","",288,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",288,null],[11,"fmt","core::iter::range","",289,{"inputs":[{"name":"stepby"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",289,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",281,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",280,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",283,{"inputs":[{"name":"rangeinclusive"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter::range","",289,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",289,null],[11,"next","","",289,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",289,null],[11,"next","","",289,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",289,null],[11,"next","core::ops","",280,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",280,null],[11,"next_back","","",280,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",281,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"next","","",283,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",283,null],[11,"next_back","","",283,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"fmt","core::iter::sources","",290,{"inputs":[{"name":"repeat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",290,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",290,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",290,null],[11,"next_back","","",290,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"fmt","","",291,{"inputs":[{"name":"empty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",291,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",291,null],[11,"next_back","","",291,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",291,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",291,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",291,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",292,{"inputs":[{"name":"once"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",292,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",292,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",292,null],[11,"next_back","","",292,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",292,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"fmt","core::iter","",293,{"inputs":[{"name":"rev"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",293,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",293,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",293,null],[11,"next_back","","",293,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"fmt","","",294,{"inputs":[{"name":"cloned"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",294,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",294,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",294,null],[11,"next_back","","",294,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"fmt","","",295,{"inputs":[{"name":"cycle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",295,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",295,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",295,null],[11,"fmt","","",296,{"inputs":[{"name":"chain"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",296,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",296,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",296,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",296,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"find","","",296,{"inputs":[{"name":"chain"},{"name":"p"}],"output":{"name":"option"}}],[11,"last","","",296,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",296,null],[11,"next_back","","",296,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"fmt","","",297,{"inputs":[{"name":"zip"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",297,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",297,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",297,null],[11,"next_back","","",297,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",298,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"fmt","","",298,{"inputs":[{"name":"map"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",298,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",298,null],[11,"next_back","","",298,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",299,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"fmt","","",299,{"inputs":[{"name":"filter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",299,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",299,null],[11,"next_back","","",299,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",300,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"fmt","","",300,{"inputs":[{"name":"filtermap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",300,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",300,null],[11,"next_back","","",300,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"fmt","","",301,{"inputs":[{"name":"enumerate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",301,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",301,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",301,null],[11,"nth","","",301,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",301,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",301,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"fmt","","",302,{"inputs":[{"name":"peekable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",302,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",302,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",302,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",302,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",302,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",302,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",302,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",302,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",303,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"fmt","","",303,{"inputs":[{"name":"skipwhile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",303,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",303,null],[11,"clone","","",304,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"fmt","","",304,{"inputs":[{"name":"takewhile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",304,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",304,null],[11,"fmt","","",305,{"inputs":[{"name":"skip"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",305,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",305,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",305,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",305,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",305,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",305,null],[11,"next_back","","",305,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"fmt","","",306,{"inputs":[{"name":"take"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",306,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",306,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",306,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",306,null],[11,"clone","","",307,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"fmt","","",307,{"inputs":[{"name":"scan"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",307,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",307,null],[11,"clone","","",308,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"fmt","","",308,{"inputs":[{"name":"flatmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",308,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",308,null],[11,"next_back","","",308,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"fmt","","",309,{"inputs":[{"name":"fuse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",309,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",309,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",309,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",309,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",309,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",309,null],[11,"next_back","","",309,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",310,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"fmt","","",310,{"inputs":[{"name":"inspect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",310,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",310,null],[11,"next_back","","",310,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"hash","core::option","",311,null],[11,"fmt","","",311,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",311,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",311,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",311,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",311,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",311,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",311,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",311,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",311,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",311,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",311,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",311,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",311,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",311,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",311,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",311,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",311,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",311,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",311,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",311,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",311,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",311,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",311,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",311,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",311,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",311,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",311,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",311,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",311,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",311,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",311,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",311,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",311,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",311,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"fmt","","",312,{"inputs":[{"name":"iter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",312,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",312,null],[11,"next_back","","",312,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",312,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"fmt","","",313,{"inputs":[{"name":"itermut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",313,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",313,null],[11,"next_back","","",313,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"fmt","","",314,{"inputs":[{"name":"intoiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",314,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",314,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",314,null],[11,"next_back","","",314,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",311,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"hash","core::marker","",315,null],[11,"eq","","",315,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",315,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",315,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",315,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",315,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"borrow","collections::vec","",71,null],[11,"borrow_mut","","",71,null],[11,"borrow","collections::borrow","",91,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",91,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",91,null],[11,"into_owned","","Extracts the owned data.",91,null],[11,"deref","","",91,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",91,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",91,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",91,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",91,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",91,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",91,null],[11,"as_ref","","",91,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",316,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",316,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",316,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",316,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",316,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"clone","","",316,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",316,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",316,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",317,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",317,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",317,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",318,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",318,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",318,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",318,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",318,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",318,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",318,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"clone","","",318,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",318,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",318,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"deref","","",319,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",319,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",319,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",319,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",320,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",320,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"deref","","",320,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",320,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",321,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",321,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",321,null],[11,"default","","",321,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",322,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",322,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",322,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",322,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",322,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",322,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",322,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",322,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",322,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",322,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc&lt;T&gt;`.",322,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",322,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",322,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",322,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",322,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",322,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",322,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",322,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",322,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",322,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",322,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",322,null],[11,"fmt","","",322,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",322,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",323,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",323,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",323,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",323,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",323,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",322,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",322,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"hash","core::result","",324,null],[11,"fmt","","",324,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",324,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",324,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",324,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",324,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",324,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",324,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",324,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",324,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",324,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",324,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",324,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",324,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",324,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",324,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",324,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",324,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",324,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",324,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",324,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",324,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",324,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",324,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",324,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",324,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",324,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",324,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",324,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",324,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",324,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"fmt","","",325,{"inputs":[{"name":"iter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",325,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",325,null],[11,"next_back","","",325,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",325,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"fmt","","",326,{"inputs":[{"name":"itermut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",326,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",326,null],[11,"next_back","","",326,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"fmt","","",327,{"inputs":[{"name":"intoiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",327,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",327,null],[11,"next_back","","",327,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",324,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","vulkano::command_buffer","",328,{"inputs":[{"name":"submission"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"destroying_would_block","","Returns `true` if destroying this `Submission` object would block the CPU for some time.",328,{"inputs":[{"name":"submission"}],"output":{"name":"bool"}}],[11,"finished","","Returns `true` if the GPU has finished executing this submission.",328,{"inputs":[{"name":"submission"}],"output":{"name":"bool"}}],[11,"wait","","Waits until the submission has finished being executed by the device.",328,{"inputs":[{"name":"submission"},{"name":"duration"}],"output":{"name":"result"}}],[11,"queue","","Returns the `queue` the command buffers were submitted to.",328,{"inputs":[{"name":"submission"}],"output":{"name":"arc"}}],[11,"drop","","",328,{"inputs":[{"name":"submission"}],"output":null}],[11,"raw","","See the docs of new().",329,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"new","","Builds a new primary command buffer and start recording commands in it.",329,{"inputs":[{"name":"arc"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"update_buffer","","Writes data to a buffer.",329,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"b"},{"name":"t"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"fill_buffer","","Fills a buffer with data.",329,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"},{"name":"usize"},{"name":"usize"},{"name":"u32"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"copy_buffer","","",329,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"},{"name":"arc"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"copy_buffer_to_color_image","","",329,null],[11,"copy_color_image_to_buffer","","",329,null],[11,"blit","","",329,null],[11,"clear_color_image","","",329,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"},{"name":"v"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"execute_commands","","Executes secondary compute command buffers within this primary command buffer.",329,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"dispatch","","Executes a compute pipeline.",329,null],[11,"draw_inline","","Start drawing on a framebuffer.\nThis function returns an object that can be used to submit draw commands on the first\nsubpass of the renderpass.",329,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"},{"name":"arc"},{"name":"c"}],"output":{"name":"primarycommandbufferbuilderinlinedraw"}}],[11,"draw_secondary","","Start drawing on a framebuffer.\nThis function returns an object that can be used to submit secondary graphics command\nbuffers that will operate on the first subpass of the renderpass.",329,{"inputs":[{"name":"primarycommandbufferbuilder"},{"name":"arc"},{"name":"arc"},{"name":"c"}],"output":{"name":"primarycommandbufferbuildersecondarydraw"}}],[11,"build_raw","","See the docs of build().",329,{"inputs":[{"name":"primarycommandbufferbuilder"}],"output":{"name":"result"}}],[11,"build","","Finish recording commands and build the command buffer.",329,{"inputs":[{"name":"primarycommandbufferbuilder"}],"output":{"name":"arc"}}],[11,"draw","","Calls `vkCmdDraw`.",330,{"inputs":[{"name":"primarycommandbufferbuilderinlinedraw"},{"name":"arc"},{"name":"v"},{"name":"dynamicstate"},{"name":"l"},{"name":"pc"}],"output":{"name":"primarycommandbufferbuilderinlinedraw"}}],[11,"draw_indexed","","Calls `vkCmdDrawIndexed`.",330,{"inputs":[{"name":"primarycommandbufferbuilderinlinedraw"},{"name":"arc"},{"name":"v"},{"name":"ib"},{"name":"dynamicstate"},{"name":"l"},{"name":"pc"}],"output":{"name":"primarycommandbufferbuilderinlinedraw"}}],[11,"next_subpass_inline","","Switches to the next subpass of the current renderpass.",330,{"inputs":[{"name":"primarycommandbufferbuilderinlinedraw"}],"output":{"name":"primarycommandbufferbuilderinlinedraw"}}],[11,"next_subpass_secondary","","Switches to the next subpass of the current renderpass.",330,{"inputs":[{"name":"primarycommandbufferbuilderinlinedraw"}],"output":{"name":"primarycommandbufferbuildersecondarydraw"}}],[11,"draw_end","","Finish drawing this renderpass and get back the builder.",330,{"inputs":[{"name":"primarycommandbufferbuilderinlinedraw"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"next_subpass_inline","","Switches to the next subpass of the current renderpass.",331,{"inputs":[{"name":"primarycommandbufferbuildersecondarydraw"}],"output":{"name":"primarycommandbufferbuilderinlinedraw"}}],[11,"next_subpass_secondary","","Switches to the next subpass of the current renderpass.",331,{"inputs":[{"name":"primarycommandbufferbuildersecondarydraw"}],"output":{"name":"primarycommandbufferbuildersecondarydraw"}}],[11,"execute_commands","","Executes secondary graphics command buffers within this primary command buffer.",331,{"inputs":[{"name":"primarycommandbufferbuildersecondarydraw"},{"name":"arc"}],"output":{"name":"primarycommandbufferbuildersecondarydraw"}}],[11,"draw_end","","Finish drawing this renderpass and get back the builder.",331,{"inputs":[{"name":"primarycommandbufferbuildersecondarydraw"}],"output":{"name":"primarycommandbufferbuilder"}}],[11,"raw","","See the docs of new().",332,{"inputs":[{"name":"arc"},{"name":"subpass"},{"name":"option"}],"output":{"name":"result"}}],[11,"new","","Builds a new secondary command buffer and start recording commands in it.",332,{"inputs":[{"name":"arc"},{"name":"subpass"},{"name":"option"}],"output":{"name":"secondarygraphicscommandbufferbuilder"}}],[11,"draw","","Calls `vkCmdDraw`.",332,{"inputs":[{"name":"secondarygraphicscommandbufferbuilder"},{"name":"arc"},{"name":"v"},{"name":"dynamicstate"},{"name":"l"},{"name":"pc"}],"output":{"name":"secondarygraphicscommandbufferbuilder"}}],[11,"draw_indexed","","Calls `vkCmdDrawIndexed`.",332,{"inputs":[{"name":"secondarygraphicscommandbufferbuilder"},{"name":"arc"},{"name":"v"},{"name":"ib"},{"name":"dynamicstate"},{"name":"l"},{"name":"pc"}],"output":{"name":"secondarygraphicscommandbufferbuilder"}}],[11,"draw_indirect","","Calls `vkCmdDrawIndirect`.",332,{"inputs":[{"name":"secondarygraphicscommandbufferbuilder"},{"name":"arc"},{"name":"arc"},{"name":"v"},{"name":"dynamicstate"},{"name":"l"},{"name":"pc"}],"output":{"name":"secondarygraphicscommandbufferbuilder"}}],[11,"build_raw","","See the docs of build().",332,{"inputs":[{"name":"secondarygraphicscommandbufferbuilder"}],"output":{"name":"result"}}],[11,"build","","Finish recording commands and build the command buffer.",332,{"inputs":[{"name":"secondarygraphicscommandbufferbuilder"}],"output":{"name":"arc"}}],[11,"raw","","See the docs of new().",333,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"new","","Builds a new secondary command buffer and start recording commands in it.",333,{"inputs":[{"name":"arc"}],"output":{"name":"secondarycomputecommandbufferbuilder"}}],[11,"update_buffer","","Writes data to a buffer.",333,{"inputs":[{"name":"secondarycomputecommandbufferbuilder"},{"name":"b"},{"name":"t"}],"output":{"name":"secondarycomputecommandbufferbuilder"}}],[11,"fill_buffer","","Fills a buffer with data.",333,{"inputs":[{"name":"secondarycomputecommandbufferbuilder"},{"name":"arc"},{"name":"usize"},{"name":"usize"},{"name":"u32"}],"output":{"name":"secondarycomputecommandbufferbuilder"}}],[11,"build_raw","","See the docs of build().",333,{"inputs":[{"name":"secondarycomputecommandbufferbuilder"}],"output":{"name":"result"}}],[11,"build","","Finish recording commands and build the command buffer.",333,{"inputs":[{"name":"secondarycomputecommandbufferbuilder"}],"output":{"name":"arc"}}],[11,"clone","","",17,{"inputs":[{"name":"dynamicstate"}],"output":{"name":"dynamicstate"}}],[11,"fmt","","",17,{"inputs":[{"name":"dynamicstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"none","","",17,{"inputs":[],"output":{"name":"dynamicstate"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"dynamicstate"}}],[11,"raw","","See the docs of new().",334,{"inputs":[{"name":"arc"},{"name":"queuefamily"}],"output":{"name":"result"}}],[11,"new","","Creates a new pool.",334,{"inputs":[{"name":"arc"},{"name":"queuefamily"}],"output":{"name":"arc"}}],[11,"device","","Returns the device this command pool was created with.",334,{"inputs":[{"name":"commandbufferpool"}],"output":{"name":"arc"}}],[11,"queue_family","","Returns the queue family on which command buffers of this pool can be executed.",334,{"inputs":[{"name":"commandbufferpool"}],"output":{"name":"queuefamily"}}],[11,"internal_object_guard","","",334,{"inputs":[{"name":"commandbufferpool"}],"output":{"name":"mutexguard"}}],[11,"drop","","",334,{"inputs":[{"name":"commandbufferpool"}],"output":null}],[11,"eq","","",18,{"inputs":[{"name":"drawindirectcommand"},{"name":"drawindirectcommand"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"drawindirectcommand"},{"name":"drawindirectcommand"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"drawindirectcommand"}],"output":{"name":"drawindirectcommand"}}],[11,"fmt","","",18,{"inputs":[{"name":"drawindirectcommand"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"drawindexedindirectcommand"},{"name":"drawindexedindirectcommand"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"drawindexedindirectcommand"},{"name":"drawindexedindirectcommand"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"drawindexedindirectcommand"}],"output":{"name":"drawindexedindirectcommand"}}],[11,"fmt","","",19,{"inputs":[{"name":"drawindexedindirectcommand"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"descriptor","vulkano","Collection of data and resources accessed by the shaders.",null,null],[0,"descriptor","vulkano::descriptor","",null,null],[3,"DescriptorDesc","vulkano::descriptor::descriptor","Describes a single descriptor.",null,null],[12,"binding","","Offset of the binding within the descriptor.",335,null],[12,"ty","","What kind of resource can later be bound to this descriptor.",335,null],[12,"array_count","","How many array elements this descriptor is made of.",335,null],[12,"stages","","Which shader stages are going to access this descriptor.",335,null],[12,"readonly","","True if the attachment is only ever read by the shader. False if it is also written.",335,null],[3,"ShaderStages","","Describes which shader stages have access to a descriptor.",null,null],[12,"vertex","","`True` means that the descriptor will be used by the vertex shader.",336,null],[12,"tessellation_control","","`True` means that the descriptor will be used by the tessellation control shader.",336,null],[12,"tessellation_evaluation","","`True` means that the descriptor will be used by the tessellation evaluation shader.",336,null],[12,"geometry","","`True` means that the descriptor will be used by the geometry shader.",336,null],[12,"fragment","","`True` means that the descriptor will be used by the fragment shader.",336,null],[12,"compute","","`True` means that the descriptor will be used by the compute shader.",336,null],[4,"DescriptorType","","Describes what kind of resource may later be bound to a descriptor.",null,null],[13,"Sampler","","",337,null],[13,"CombinedImageSampler","","",337,null],[13,"SampledImage","","",337,null],[13,"StorageImage","","",337,null],[13,"UniformTexelBuffer","","",337,null],[13,"StorageTexelBuffer","","",337,null],[13,"UniformBuffer","","",337,null],[13,"StorageBuffer","","",337,null],[13,"UniformBufferDynamic","","",337,null],[13,"StorageBufferDynamic","","",337,null],[13,"InputAttachment","","",337,null],[11,"clone","","",335,{"inputs":[{"name":"descriptordesc"}],"output":{"name":"descriptordesc"}}],[11,"fmt","","",335,{"inputs":[{"name":"descriptordesc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_superset_of","","Checks whether we are a superset of another descriptor.",335,{"inputs":[{"name":"descriptordesc"},{"name":"descriptordesc"}],"output":{"name":"bool"}}],[11,"eq","","",337,{"inputs":[{"name":"descriptortype"},{"name":"descriptortype"}],"output":{"name":"bool"}}],[11,"clone","","",337,{"inputs":[{"name":"descriptortype"}],"output":{"name":"descriptortype"}}],[11,"fmt","","",337,{"inputs":[{"name":"descriptortype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",336,{"inputs":[{"name":"shaderstages"},{"name":"shaderstages"}],"output":{"name":"bool"}}],[11,"ne","","",336,{"inputs":[{"name":"shaderstages"},{"name":"shaderstages"}],"output":{"name":"bool"}}],[11,"clone","","",336,{"inputs":[{"name":"shaderstages"}],"output":{"name":"shaderstages"}}],[11,"fmt","","",336,{"inputs":[{"name":"shaderstages"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"all","","Creates a `ShaderStages` struct will all stages set to `true`.",336,{"inputs":[],"output":{"name":"shaderstages"}}],[11,"none","","Creates a `ShaderStages` struct will all stages set to `false`.",336,{"inputs":[],"output":{"name":"shaderstages"}}],[11,"all_graphics","","Creates a `ShaderStages` struct will all graphics stages set to `true`.",336,{"inputs":[],"output":{"name":"shaderstages"}}],[11,"compute","","Creates a `ShaderStages` struct will the compute stage set to `true`.",336,{"inputs":[],"output":{"name":"shaderstages"}}],[11,"is_superset_of","","Checks whether we have more stages enabled than `other`.",336,{"inputs":[{"name":"shaderstages"},{"name":"shaderstages"}],"output":{"name":"bool"}}],[0,"descriptor_set","vulkano::descriptor","",null,null],[3,"DescriptorPool","vulkano::descriptor::descriptor_set","Pool from which descriptor sets are allocated from.",null,null],[3,"UnsafeDescriptorSet","","Low-level descriptor set.",null,null],[3,"DescriptorWrite","","Represents a single write entry to a descriptor set.",null,null],[3,"UnsafeDescriptorSetLayout","","Describes to the Vulkan implementation the layout of all descriptors within a descriptor set.",null,null],[11,"list","alloc::arc","",338,{"inputs":[{"name":"arc"}],"output":{"name":"listiter"}}],[11,"description","","",338,{"inputs":[{"name":"arc"}],"output":{"name":"setsiter"}}],[11,"raw","vulkano::descriptor::descriptor_set","See the docs of new().",339,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"new","","Initializes a new pool.",339,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"device","","Returns the device this pool was created from.",339,{"inputs":[{"name":"descriptorpool"}],"output":{"name":"arc"}}],[11,"internal_object_guard","","",339,{"inputs":[{"name":"descriptorpool"}],"output":{"name":"mutexguard"}}],[11,"drop","","",339,{"inputs":[{"name":"descriptorpool"}],"output":null}],[11,"uninitialized_raw","","See the docs of uninitialized().",340,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"result"}}],[11,"uninitialized","","Builds a new descriptor set.",340,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"unsafedescriptorset"}}],[11,"write","","Modifies a descriptor set without checking that the writes are correct.",340,{"inputs":[{"name":"unsafedescriptorset"},{"name":"vec"}],"output":null}],[11,"layout","","Returns the layout used to create this descriptor set.",340,{"inputs":[{"name":"unsafedescriptorset"}],"output":{"name":"arc"}}],[11,"internal_object","","",340,{"inputs":[{"name":"unsafedescriptorset"}],"output":{"name":"descriptorset"}}],[11,"drop","","",340,{"inputs":[{"name":"unsafedescriptorset"}],"output":null}],[11,"storage_image","","",341,{"inputs":[{"name":"u32"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"sampler","","",341,{"inputs":[{"name":"u32"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"sampled_image","","",341,{"inputs":[{"name":"u32"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"combined_image_sampler","","",341,{"inputs":[{"name":"u32"},{"name":"arc"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"uniform_buffer","","",341,{"inputs":[{"name":"u32"},{"name":"s"}],"output":{"name":"descriptorwrite"}}],[11,"unchecked_uniform_buffer","","",341,{"inputs":[{"name":"u32"},{"name":"arc"},{"name":"range"}],"output":{"name":"descriptorwrite"}}],[11,"storage_buffer","","",341,{"inputs":[{"name":"u32"},{"name":"s"}],"output":{"name":"descriptorwrite"}}],[11,"unchecked_storage_buffer","","",341,{"inputs":[{"name":"u32"},{"name":"arc"},{"name":"range"}],"output":{"name":"descriptorwrite"}}],[11,"dynamic_uniform_buffer","","",341,{"inputs":[{"name":"u32"},{"name":"s"}],"output":{"name":"descriptorwrite"}}],[11,"unchecked_dynamic_uniform_buffer","","",341,{"inputs":[{"name":"u32"},{"name":"arc"},{"name":"range"}],"output":{"name":"descriptorwrite"}}],[11,"dynamic_storage_buffer","","",341,{"inputs":[{"name":"u32"},{"name":"s"}],"output":{"name":"descriptorwrite"}}],[11,"unchecked_dynamic_storage_buffer","","",341,{"inputs":[{"name":"u32"},{"name":"arc"},{"name":"range"}],"output":{"name":"descriptorwrite"}}],[11,"input_attachment","","",341,{"inputs":[{"name":"u32"},{"name":"arc"}],"output":{"name":"descriptorwrite"}}],[11,"ty","","Returns the type corresponding to this write.",341,{"inputs":[{"name":"descriptorwrite"}],"output":{"name":"descriptortype"}}],[11,"raw","","See the docs of new().",342,{"inputs":[{"name":"arc"},{"name":"i"}],"output":{"name":"result"}}],[11,"new","","Builds a new `UnsafeDescriptorSetLayout` with the given descriptors.",342,{"inputs":[{"name":"arc"},{"name":"i"}],"output":{"name":"arc"}}],[11,"device","","Returns the device used to create this layout.",342,{"inputs":[{"name":"unsafedescriptorsetlayout"}],"output":{"name":"arc"}}],[11,"internal_object","","",342,{"inputs":[{"name":"unsafedescriptorsetlayout"}],"output":{"name":"descriptorsetlayout"}}],[11,"drop","","",342,{"inputs":[{"name":"unsafedescriptorsetlayout"}],"output":null}],[8,"DescriptorSetsCollection","","A collection of descriptor set objects.",null,null],[16,"ListIter","","An iterator that produces the list of descriptor set objects contained in this collection.",343,null],[16,"SetsIter","","An iterator that produces the description of the list of sets.",343,null],[16,"DescIter","","An iterator that produces the description of a set.",343,null],[10,"list","","Returns the list of descriptor set objects of this collection.",343,{"inputs":[{"name":"descriptorsetscollection"}],"output":{"name":"listiter"}}],[10,"description","","Produces a description of the sets, as if it was a layout.",343,{"inputs":[{"name":"descriptorsetscollection"}],"output":{"name":"setsiter"}}],[8,"DescriptorSet","","Trait for objects that contain a collection of resources that will be accessible by shaders.",null,null],[10,"inner_descriptor_set","","Returns the inner `UnsafeDescriptorSet`.",344,{"inputs":[{"name":"descriptorset"}],"output":{"name":"unsafedescriptorset"}}],[8,"DescriptorSetDesc","","Trait for objects that describe the layout of the descriptors of a set.",null,null],[16,"Iter","","Iterator that describes individual descriptors.",345,null],[10,"desc","","Describes the layout of the descriptors of the pipeline.",345,{"inputs":[{"name":"descriptorsetdesc"}],"output":{"name":"iter"}}],[0,"pipeline_layout","vulkano::descriptor","Describes the layout of descriptors and push constants used by a pipeline.",null,null],[3,"EmptyPipeline","vulkano::descriptor::pipeline_layout","Implementation of `PipelineLayout` for an empty pipeline.",null,null],[3,"UnsafePipelineLayout","","Low-level struct that represents the layout of the resources available to your shaders.",null,null],[4,"UnsafePipelineLayoutCreationError","","Error that can happen when creating an instance.",null,null],[13,"OomError","","Not enough memory.",346,null],[13,"MaxDescriptorSetsLimitExceeded","","The maximum number of descriptor sets has been exceeded.",346,null],[13,"MaxPushConstantsSizeExceeded","","The maximum size of push constants has been exceeded.",346,null],[13,"InvalidPushConstant","","One of the push constants range didn&#39;t obey the rules. The list of stages must not be\nempty, the size must not be 0, and the size must be a multiple or 4.",346,null],[0,"custom_pipeline_macro","","",null,null],[3,"UniformBuffer","vulkano::descriptor::pipeline_layout::custom_pipeline_macro","",null,null],[3,"StorageBuffer","","",null,null],[3,"CombinedImageSampler","","",null,null],[3,"SampledImage","","",null,null],[3,"InputAttachment","","",null,null],[8,"ValidParameter","","",null,null],[10,"write","","",347,{"inputs":[{"name":"validparameter"},{"name":"u32"}],"output":{"name":"descriptorwrite"}}],[8,"DescriptorMarker","","",null,null],[10,"descriptor_type","","",348,{"inputs":[],"output":{"name":"descriptortype"}}],[11,"descriptor_type","","",349,{"inputs":[],"output":{"name":"descriptortype"}}],[11,"descriptor_type","","",350,{"inputs":[],"output":{"name":"descriptortype"}}],[11,"descriptor_type","","",351,{"inputs":[],"output":{"name":"descriptortype"}}],[11,"descriptor_type","","",352,{"inputs":[],"output":{"name":"descriptortype"}}],[11,"descriptor_type","","",353,{"inputs":[],"output":{"name":"descriptortype"}}],[11,"new","vulkano::descriptor::pipeline_layout","Builds a new empty pipeline.",354,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"inner_pipeline_layout","","",354,{"inputs":[{"name":"emptypipeline"}],"output":{"name":"unsafepipelinelayout"}}],[11,"descriptors_desc","","",354,{"inputs":[{"name":"emptypipeline"}],"output":{"name":"setsiter"}}],[11,"new","","Creates a new `UnsafePipelineLayout`.",355,{"inputs":[{"name":"arc"},{"name":"i"},{"name":"p"}],"output":{"name":"result"}}],[11,"descriptor_set_layout","","Returns the `UnsafeDescriptorSetLayout` object of the specified set index.",355,{"inputs":[{"name":"unsafepipelinelayout"},{"name":"usize"}],"output":{"name":"option"}}],[11,"device","","Returns the device used to create this pipeline layout.",355,{"inputs":[{"name":"unsafepipelinelayout"}],"output":{"name":"arc"}}],[11,"internal_object","","",355,{"inputs":[{"name":"unsafepipelinelayout"}],"output":{"name":"pipelinelayout"}}],[11,"drop","","",355,{"inputs":[{"name":"unsafepipelinelayout"}],"output":null}],[11,"eq","","",346,{"inputs":[{"name":"unsafepipelinelayoutcreationerror"},{"name":"unsafepipelinelayoutcreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",346,{"inputs":[{"name":"unsafepipelinelayoutcreationerror"},{"name":"unsafepipelinelayoutcreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",346,{"inputs":[{"name":"unsafepipelinelayoutcreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",346,{"inputs":[{"name":"unsafepipelinelayoutcreationerror"}],"output":{"name":"unsafepipelinelayoutcreationerror"}}],[11,"description","","",346,{"inputs":[{"name":"unsafepipelinelayoutcreationerror"}],"output":{"name":"str"}}],[11,"cause","","",346,{"inputs":[{"name":"unsafepipelinelayoutcreationerror"}],"output":{"name":"option"}}],[11,"fmt","","",346,{"inputs":[{"name":"unsafepipelinelayoutcreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",346,{"inputs":[{"name":"oomerror"}],"output":{"name":"unsafepipelinelayoutcreationerror"}}],[11,"from","","",346,{"inputs":[{"name":"error"}],"output":{"name":"unsafepipelinelayoutcreationerror"}}],[8,"PipelineLayout","","Trait for objects that describe the layout of the descriptors and push constants of a pipeline.",null,null],[10,"inner_pipeline_layout","","Returns the inner `UnsafePipelineLayout`.",356,{"inputs":[{"name":"pipelinelayout"}],"output":{"name":"unsafepipelinelayout"}}],[8,"PipelineLayoutDesc","","Trait for objects that describe the layout of the descriptors and push constants of a pipeline.",null,null],[16,"SetsIter","","Iterator that describes descriptor sets.",357,null],[16,"DescIter","","Iterator that describes individual descriptors.",357,null],[10,"descriptors_desc","","Describes the layout of the descriptors of the pipeline.",357,{"inputs":[{"name":"pipelinelayoutdesc"}],"output":{"name":"setsiter"}}],[8,"PipelineLayoutSuperset","","Traits that allow determining whether a pipeline layout is a superset of another one.",null,null],[10,"is_superset_of","","Returns true if `self` is a superset of `Other`.",358,{"inputs":[{"name":"pipelinelayoutsuperset"},{"name":"other"}],"output":{"name":"bool"}}],[8,"PipelineLayoutSetsCompatible","","Traits that allow determining whether",null,null],[10,"is_compatible","","Returns true if `Other` can be used with a pipeline that uses `self` as layout.",359,{"inputs":[{"name":"pipelinelayoutsetscompatible"},{"name":"other"}],"output":{"name":"bool"}}],[8,"PipelineLayoutPushConstantsCompatible","","Traits that allow determining whether",null,null],[10,"is_compatible","","Returns true if `Pc` can be used with a pipeline that uses `self` as layout.",360,{"inputs":[{"name":"pipelinelayoutpushconstantscompatible"},{"name":"pc"}],"output":{"name":"bool"}}],[8,"PipelineLayout","vulkano::descriptor","Trait for objects that describe the layout of the descriptors and push constants of a pipeline.",null,null],[10,"inner_pipeline_layout","","Returns the inner `UnsafePipelineLayout`.",356,{"inputs":[{"name":"pipelinelayout"}],"output":{"name":"unsafepipelinelayout"}}],[0,"device","vulkano","Communication channel with a physical device.",null,null],[3,"DeviceExtensions","vulkano::device","List of extensions that are enabled or available.",null,null],[12,"khr_swapchain","","",361,null],[12,"khr_display_swapchain","","",361,null],[3,"Device","","Represents a Vulkan context.",null,null],[3,"Queue","","Represents a queue where commands can be submitted.",null,null],[4,"DeviceCreationError","","Error that can be returned when creating a device.",null,null],[13,"OutOfHostMemory","","There is no memory available on the host (ie. the CPU, RAM, etc.).",362,null],[13,"OutOfDeviceMemory","","There is no memory available on the device (ie. video memory).",362,null],[11,"new","","Builds a new Vulkan device for the given physical device.",363,{"inputs":[{"name":"physicaldevice"},{"name":"features"},{"name":"deviceextensions"},{"name":"l"},{"name":"i"}],"output":{"name":"result"}}],[11,"wait_raw","","See the docs of wait().",363,{"inputs":[{"name":"device"}],"output":{"name":"result"}}],[11,"wait","","Waits until all work on this device has finished. You should never need to call\nthis function, but it can be useful for debugging or benchmarking purposes.",363,{"inputs":[{"name":"device"}],"output":null}],[11,"instance","","Returns the instance used to create this device.",363,{"inputs":[{"name":"device"}],"output":{"name":"arc"}}],[11,"physical_device","","Returns the physical device that was used to create this device.",363,{"inputs":[{"name":"device"}],"output":{"name":"physicaldevice"}}],[11,"enabled_features","","Returns the features that are enabled in the device.",363,{"inputs":[{"name":"device"}],"output":{"name":"features"}}],[11,"loaded_extensions","","Returns the list of extensions that have been loaded.",363,{"inputs":[{"name":"device"}],"output":{"name":"deviceextensions"}}],[11,"standard_pool","","Returns the standard memory pool used by default if you don&#39;t provide any other pool.",363,{"inputs":[{"name":"device"}],"output":{"name":"arc"}}],[11,"fmt","","",363,{"inputs":[{"name":"device"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"internal_object","","",363,{"inputs":[{"name":"device"}],"output":{"name":"device"}}],[11,"drop","","",363,{"inputs":[{"name":"device"}],"output":null}],[11,"eq","","",362,{"inputs":[{"name":"devicecreationerror"},{"name":"devicecreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",362,{"inputs":[{"name":"devicecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",362,{"inputs":[{"name":"devicecreationerror"}],"output":{"name":"devicecreationerror"}}],[11,"description","","",362,{"inputs":[{"name":"devicecreationerror"}],"output":{"name":"str"}}],[11,"fmt","","",362,{"inputs":[{"name":"devicecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",362,{"inputs":[{"name":"error"}],"output":{"name":"devicecreationerror"}}],[11,"fmt","","",364,{"inputs":[{"name":"queue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"device","","Returns the device this queue belongs to.",364,{"inputs":[{"name":"queue"}],"output":{"name":"arc"}}],[11,"family","","Returns the family this queue belongs to.",364,{"inputs":[{"name":"queue"}],"output":{"name":"queuefamily"}}],[11,"id_within_family","","Returns the index of this queue within its family.",364,{"inputs":[{"name":"queue"}],"output":{"name":"u32"}}],[11,"wait_raw","","See the docs of wait().",364,{"inputs":[{"name":"queue"}],"output":{"name":"result"}}],[11,"wait","","Waits until all work on this queue has finished.",364,{"inputs":[{"name":"queue"}],"output":null}],[11,"internal_object_guard","","",364,{"inputs":[{"name":"queue"}],"output":{"name":"mutexguard"}}],[0,"format","vulkano","Declares all the formats of data and images supported by Vulkan.",null,null],[3,"R4G4UnormPack8","vulkano::format","",null,null],[3,"R4G4B4A4UnormPack16","","",null,null],[3,"B4G4R4A4UnormPack16","","",null,null],[3,"R5G6B5UnormPack16","","",null,null],[3,"B5G6R5UnormPack16","","",null,null],[3,"R5G5B5A1UnormPack16","","",null,null],[3,"B5G5R5A1UnormPack16","","",null,null],[3,"A1R5G5B5UnormPack16","","",null,null],[3,"R8Unorm","","",null,null],[3,"R8Snorm","","",null,null],[3,"R8Uscaled","","",null,null],[3,"R8Sscaled","","",null,null],[3,"R8Uint","","",null,null],[3,"R8Sint","","",null,null],[3,"R8Srgb","","",null,null],[3,"R8G8Unorm","","",null,null],[3,"R8G8Snorm","","",null,null],[3,"R8G8Uscaled","","",null,null],[3,"R8G8Sscaled","","",null,null],[3,"R8G8Uint","","",null,null],[3,"R8G8Sint","","",null,null],[3,"R8G8Srgb","","",null,null],[3,"R8G8B8Unorm","","",null,null],[3,"R8G8B8Snorm","","",null,null],[3,"R8G8B8Uscaled","","",null,null],[3,"R8G8B8Sscaled","","",null,null],[3,"R8G8B8Uint","","",null,null],[3,"R8G8B8Sint","","",null,null],[3,"R8G8B8Srgb","","",null,null],[3,"B8G8R8Unorm","","",null,null],[3,"B8G8R8Snorm","","",null,null],[3,"B8G8R8Uscaled","","",null,null],[3,"B8G8R8Sscaled","","",null,null],[3,"B8G8R8Uint","","",null,null],[3,"B8G8R8Sint","","",null,null],[3,"B8G8R8Srgb","","",null,null],[3,"R8G8B8A8Unorm","","",null,null],[3,"R8G8B8A8Snorm","","",null,null],[3,"R8G8B8A8Uscaled","","",null,null],[3,"R8G8B8A8Sscaled","","",null,null],[3,"R8G8B8A8Uint","","",null,null],[3,"R8G8B8A8Sint","","",null,null],[3,"R8G8B8A8Srgb","","",null,null],[3,"B8G8R8A8Unorm","","",null,null],[3,"B8G8R8A8Snorm","","",null,null],[3,"B8G8R8A8Uscaled","","",null,null],[3,"B8G8R8A8Sscaled","","",null,null],[3,"B8G8R8A8Uint","","",null,null],[3,"B8G8R8A8Sint","","",null,null],[3,"B8G8R8A8Srgb","","",null,null],[3,"A8B8G8R8UnormPack32","","",null,null],[3,"A8B8G8R8SnormPack32","","",null,null],[3,"A8B8G8R8UscaledPack32","","",null,null],[3,"A8B8G8R8SscaledPack32","","",null,null],[3,"A8B8G8R8UintPack32","","",null,null],[3,"A8B8G8R8SintPack32","","",null,null],[3,"A8B8G8R8SrgbPack32","","",null,null],[3,"A2R10G10B10UnormPack32","","",null,null],[3,"A2R10G10B10SnormPack32","","",null,null],[3,"A2R10G10B10UscaledPack32","","",null,null],[3,"A2R10G10B10SscaledPack32","","",null,null],[3,"A2R10G10B10UintPack32","","",null,null],[3,"A2R10G10B10SintPack32","","",null,null],[3,"A2B10G10R10UnormPack32","","",null,null],[3,"A2B10G10R10SnormPack32","","",null,null],[3,"A2B10G10R10UscaledPack32","","",null,null],[3,"A2B10G10R10SscaledPack32","","",null,null],[3,"A2B10G10R10UintPack32","","",null,null],[3,"A2B10G10R10SintPack32","","",null,null],[3,"R16Unorm","","",null,null],[3,"R16Snorm","","",null,null],[3,"R16Uscaled","","",null,null],[3,"R16Sscaled","","",null,null],[3,"R16Uint","","",null,null],[3,"R16Sint","","",null,null],[3,"R16Sfloat","","",null,null],[3,"R16G16Unorm","","",null,null],[3,"R16G16Snorm","","",null,null],[3,"R16G16Uscaled","","",null,null],[3,"R16G16Sscaled","","",null,null],[3,"R16G16Uint","","",null,null],[3,"R16G16Sint","","",null,null],[3,"R16G16Sfloat","","",null,null],[3,"R16G16B16Unorm","","",null,null],[3,"R16G16B16Snorm","","",null,null],[3,"R16G16B16Uscaled","","",null,null],[3,"R16G16B16Sscaled","","",null,null],[3,"R16G16B16Uint","","",null,null],[3,"R16G16B16Sint","","",null,null],[3,"R16G16B16Sfloat","","",null,null],[3,"R16G16B16A16Unorm","","",null,null],[3,"R16G16B16A16Snorm","","",null,null],[3,"R16G16B16A16Uscaled","","",null,null],[3,"R16G16B16A16Sscaled","","",null,null],[3,"R16G16B16A16Uint","","",null,null],[3,"R16G16B16A16Sint","","",null,null],[3,"R16G16B16A16Sfloat","","",null,null],[3,"R32Uint","","",null,null],[3,"R32Sint","","",null,null],[3,"R32Sfloat","","",null,null],[3,"R32G32Uint","","",null,null],[3,"R32G32Sint","","",null,null],[3,"R32G32Sfloat","","",null,null],[3,"R32G32B32Uint","","",null,null],[3,"R32G32B32Sint","","",null,null],[3,"R32G32B32Sfloat","","",null,null],[3,"R32G32B32A32Uint","","",null,null],[3,"R32G32B32A32Sint","","",null,null],[3,"R32G32B32A32Sfloat","","",null,null],[3,"R64Uint","","",null,null],[3,"R64Sint","","",null,null],[3,"R64Sfloat","","",null,null],[3,"R64G64Uint","","",null,null],[3,"R64G64Sint","","",null,null],[3,"R64G64Sfloat","","",null,null],[3,"R64G64B64Uint","","",null,null],[3,"R64G64B64Sint","","",null,null],[3,"R64G64B64Sfloat","","",null,null],[3,"R64G64B64A64Uint","","",null,null],[3,"R64G64B64A64Sint","","",null,null],[3,"R64G64B64A64Sfloat","","",null,null],[3,"B10G11R11UfloatPack32","","",null,null],[3,"E5B9G9R9UfloatPack32","","",null,null],[3,"D16Unorm","","",null,null],[3,"X8_D24UnormPack32","","",null,null],[3,"D32Sfloat","","",null,null],[3,"S8Uint","","",null,null],[3,"D16Unorm_S8Uint","","",null,null],[3,"D24Unorm_S8Uint","","",null,null],[3,"D32Sfloat_S8Uint","","",null,null],[3,"BC1_RGBUnormBlock","","",null,null],[3,"BC1_RGBSrgbBlock","","",null,null],[3,"BC1_RGBAUnormBlock","","",null,null],[3,"BC1_RGBASrgbBlock","","",null,null],[3,"BC2UnormBlock","","",null,null],[3,"BC2SrgbBlock","","",null,null],[3,"BC3UnormBlock","","",null,null],[3,"BC3SrgbBlock","","",null,null],[3,"BC4UnormBlock","","",null,null],[3,"BC4SnormBlock","","",null,null],[3,"BC5UnormBlock","","",null,null],[3,"BC5SnormBlock","","",null,null],[3,"BC6HUfloatBlock","","",null,null],[3,"BC6HSfloatBlock","","",null,null],[3,"BC7UnormBlock","","",null,null],[3,"BC7SrgbBlock","","",null,null],[3,"ETC2_R8G8B8UnormBlock","","",null,null],[3,"ETC2_R8G8B8SrgbBlock","","",null,null],[3,"ETC2_R8G8B8A1UnormBlock","","",null,null],[3,"ETC2_R8G8B8A1SrgbBlock","","",null,null],[3,"ETC2_R8G8B8A8UnormBlock","","",null,null],[3,"ETC2_R8G8B8A8SrgbBlock","","",null,null],[3,"EAC_R11UnormBlock","","",null,null],[3,"EAC_R11SnormBlock","","",null,null],[3,"EAC_R11G11UnormBlock","","",null,null],[3,"EAC_R11G11SnormBlock","","",null,null],[3,"ASTC_4x4UnormBlock","","",null,null],[3,"ASTC_4x4SrgbBlock","","",null,null],[3,"ASTC_5x4UnormBlock","","",null,null],[3,"ASTC_5x4SrgbBlock","","",null,null],[3,"ASTC_5x5UnormBlock","","",null,null],[3,"ASTC_5x5SrgbBlock","","",null,null],[3,"ASTC_6x5UnormBlock","","",null,null],[3,"ASTC_6x5SrgbBlock","","",null,null],[3,"ASTC_6x6UnormBlock","","",null,null],[3,"ASTC_6x6SrgbBlock","","",null,null],[3,"ASTC_8x5UnormBlock","","",null,null],[3,"ASTC_8x5SrgbBlock","","",null,null],[3,"ASTC_8x6UnormBlock","","",null,null],[3,"ASTC_8x6SrgbBlock","","",null,null],[3,"ASTC_8x8UnormBlock","","",null,null],[3,"ASTC_8x8SrgbBlock","","",null,null],[3,"ASTC_10x5UnormBlock","","",null,null],[3,"ASTC_10x5SrgbBlock","","",null,null],[3,"ASTC_10x6UnormBlock","","",null,null],[3,"ASTC_10x6SrgbBlock","","",null,null],[3,"ASTC_10x8UnormBlock","","",null,null],[3,"ASTC_10x8SrgbBlock","","",null,null],[3,"ASTC_10x10UnormBlock","","",null,null],[3,"ASTC_10x10SrgbBlock","","",null,null],[3,"ASTC_12x10UnormBlock","","",null,null],[3,"ASTC_12x10SrgbBlock","","",null,null],[3,"ASTC_12x12UnormBlock","","",null,null],[3,"ASTC_12x12SrgbBlock","","",null,null],[4,"Format","","An enumeration of all the possible formats.",null,null],[13,"R4G4UnormPack8","","",365,null],[13,"R4G4B4A4UnormPack16","","",365,null],[13,"B4G4R4A4UnormPack16","","",365,null],[13,"R5G6B5UnormPack16","","",365,null],[13,"B5G6R5UnormPack16","","",365,null],[13,"R5G5B5A1UnormPack16","","",365,null],[13,"B5G5R5A1UnormPack16","","",365,null],[13,"A1R5G5B5UnormPack16","","",365,null],[13,"R8Unorm","","",365,null],[13,"R8Snorm","","",365,null],[13,"R8Uscaled","","",365,null],[13,"R8Sscaled","","",365,null],[13,"R8Uint","","",365,null],[13,"R8Sint","","",365,null],[13,"R8Srgb","","",365,null],[13,"R8G8Unorm","","",365,null],[13,"R8G8Snorm","","",365,null],[13,"R8G8Uscaled","","",365,null],[13,"R8G8Sscaled","","",365,null],[13,"R8G8Uint","","",365,null],[13,"R8G8Sint","","",365,null],[13,"R8G8Srgb","","",365,null],[13,"R8G8B8Unorm","","",365,null],[13,"R8G8B8Snorm","","",365,null],[13,"R8G8B8Uscaled","","",365,null],[13,"R8G8B8Sscaled","","",365,null],[13,"R8G8B8Uint","","",365,null],[13,"R8G8B8Sint","","",365,null],[13,"R8G8B8Srgb","","",365,null],[13,"B8G8R8Unorm","","",365,null],[13,"B8G8R8Snorm","","",365,null],[13,"B8G8R8Uscaled","","",365,null],[13,"B8G8R8Sscaled","","",365,null],[13,"B8G8R8Uint","","",365,null],[13,"B8G8R8Sint","","",365,null],[13,"B8G8R8Srgb","","",365,null],[13,"R8G8B8A8Unorm","","",365,null],[13,"R8G8B8A8Snorm","","",365,null],[13,"R8G8B8A8Uscaled","","",365,null],[13,"R8G8B8A8Sscaled","","",365,null],[13,"R8G8B8A8Uint","","",365,null],[13,"R8G8B8A8Sint","","",365,null],[13,"R8G8B8A8Srgb","","",365,null],[13,"B8G8R8A8Unorm","","",365,null],[13,"B8G8R8A8Snorm","","",365,null],[13,"B8G8R8A8Uscaled","","",365,null],[13,"B8G8R8A8Sscaled","","",365,null],[13,"B8G8R8A8Uint","","",365,null],[13,"B8G8R8A8Sint","","",365,null],[13,"B8G8R8A8Srgb","","",365,null],[13,"A8B8G8R8UnormPack32","","",365,null],[13,"A8B8G8R8SnormPack32","","",365,null],[13,"A8B8G8R8UscaledPack32","","",365,null],[13,"A8B8G8R8SscaledPack32","","",365,null],[13,"A8B8G8R8UintPack32","","",365,null],[13,"A8B8G8R8SintPack32","","",365,null],[13,"A8B8G8R8SrgbPack32","","",365,null],[13,"A2R10G10B10UnormPack32","","",365,null],[13,"A2R10G10B10SnormPack32","","",365,null],[13,"A2R10G10B10UscaledPack32","","",365,null],[13,"A2R10G10B10SscaledPack32","","",365,null],[13,"A2R10G10B10UintPack32","","",365,null],[13,"A2R10G10B10SintPack32","","",365,null],[13,"A2B10G10R10UnormPack32","","",365,null],[13,"A2B10G10R10SnormPack32","","",365,null],[13,"A2B10G10R10UscaledPack32","","",365,null],[13,"A2B10G10R10SscaledPack32","","",365,null],[13,"A2B10G10R10UintPack32","","",365,null],[13,"A2B10G10R10SintPack32","","",365,null],[13,"R16Unorm","","",365,null],[13,"R16Snorm","","",365,null],[13,"R16Uscaled","","",365,null],[13,"R16Sscaled","","",365,null],[13,"R16Uint","","",365,null],[13,"R16Sint","","",365,null],[13,"R16Sfloat","","",365,null],[13,"R16G16Unorm","","",365,null],[13,"R16G16Snorm","","",365,null],[13,"R16G16Uscaled","","",365,null],[13,"R16G16Sscaled","","",365,null],[13,"R16G16Uint","","",365,null],[13,"R16G16Sint","","",365,null],[13,"R16G16Sfloat","","",365,null],[13,"R16G16B16Unorm","","",365,null],[13,"R16G16B16Snorm","","",365,null],[13,"R16G16B16Uscaled","","",365,null],[13,"R16G16B16Sscaled","","",365,null],[13,"R16G16B16Uint","","",365,null],[13,"R16G16B16Sint","","",365,null],[13,"R16G16B16Sfloat","","",365,null],[13,"R16G16B16A16Unorm","","",365,null],[13,"R16G16B16A16Snorm","","",365,null],[13,"R16G16B16A16Uscaled","","",365,null],[13,"R16G16B16A16Sscaled","","",365,null],[13,"R16G16B16A16Uint","","",365,null],[13,"R16G16B16A16Sint","","",365,null],[13,"R16G16B16A16Sfloat","","",365,null],[13,"R32Uint","","",365,null],[13,"R32Sint","","",365,null],[13,"R32Sfloat","","",365,null],[13,"R32G32Uint","","",365,null],[13,"R32G32Sint","","",365,null],[13,"R32G32Sfloat","","",365,null],[13,"R32G32B32Uint","","",365,null],[13,"R32G32B32Sint","","",365,null],[13,"R32G32B32Sfloat","","",365,null],[13,"R32G32B32A32Uint","","",365,null],[13,"R32G32B32A32Sint","","",365,null],[13,"R32G32B32A32Sfloat","","",365,null],[13,"R64Uint","","",365,null],[13,"R64Sint","","",365,null],[13,"R64Sfloat","","",365,null],[13,"R64G64Uint","","",365,null],[13,"R64G64Sint","","",365,null],[13,"R64G64Sfloat","","",365,null],[13,"R64G64B64Uint","","",365,null],[13,"R64G64B64Sint","","",365,null],[13,"R64G64B64Sfloat","","",365,null],[13,"R64G64B64A64Uint","","",365,null],[13,"R64G64B64A64Sint","","",365,null],[13,"R64G64B64A64Sfloat","","",365,null],[13,"B10G11R11UfloatPack32","","",365,null],[13,"E5B9G9R9UfloatPack32","","",365,null],[13,"D16Unorm","","",365,null],[13,"X8_D24UnormPack32","","",365,null],[13,"D32Sfloat","","",365,null],[13,"S8Uint","","",365,null],[13,"D16Unorm_S8Uint","","",365,null],[13,"D24Unorm_S8Uint","","",365,null],[13,"D32Sfloat_S8Uint","","",365,null],[13,"BC1_RGBUnormBlock","","",365,null],[13,"BC1_RGBSrgbBlock","","",365,null],[13,"BC1_RGBAUnormBlock","","",365,null],[13,"BC1_RGBASrgbBlock","","",365,null],[13,"BC2UnormBlock","","",365,null],[13,"BC2SrgbBlock","","",365,null],[13,"BC3UnormBlock","","",365,null],[13,"BC3SrgbBlock","","",365,null],[13,"BC4UnormBlock","","",365,null],[13,"BC4SnormBlock","","",365,null],[13,"BC5UnormBlock","","",365,null],[13,"BC5SnormBlock","","",365,null],[13,"BC6HUfloatBlock","","",365,null],[13,"BC6HSfloatBlock","","",365,null],[13,"BC7UnormBlock","","",365,null],[13,"BC7SrgbBlock","","",365,null],[13,"ETC2_R8G8B8UnormBlock","","",365,null],[13,"ETC2_R8G8B8SrgbBlock","","",365,null],[13,"ETC2_R8G8B8A1UnormBlock","","",365,null],[13,"ETC2_R8G8B8A1SrgbBlock","","",365,null],[13,"ETC2_R8G8B8A8UnormBlock","","",365,null],[13,"ETC2_R8G8B8A8SrgbBlock","","",365,null],[13,"EAC_R11UnormBlock","","",365,null],[13,"EAC_R11SnormBlock","","",365,null],[13,"EAC_R11G11UnormBlock","","",365,null],[13,"EAC_R11G11SnormBlock","","",365,null],[13,"ASTC_4x4UnormBlock","","",365,null],[13,"ASTC_4x4SrgbBlock","","",365,null],[13,"ASTC_5x4UnormBlock","","",365,null],[13,"ASTC_5x4SrgbBlock","","",365,null],[13,"ASTC_5x5UnormBlock","","",365,null],[13,"ASTC_5x5SrgbBlock","","",365,null],[13,"ASTC_6x5UnormBlock","","",365,null],[13,"ASTC_6x5SrgbBlock","","",365,null],[13,"ASTC_6x6UnormBlock","","",365,null],[13,"ASTC_6x6SrgbBlock","","",365,null],[13,"ASTC_8x5UnormBlock","","",365,null],[13,"ASTC_8x5SrgbBlock","","",365,null],[13,"ASTC_8x6UnormBlock","","",365,null],[13,"ASTC_8x6SrgbBlock","","",365,null],[13,"ASTC_8x8UnormBlock","","",365,null],[13,"ASTC_8x8SrgbBlock","","",365,null],[13,"ASTC_10x5UnormBlock","","",365,null],[13,"ASTC_10x5SrgbBlock","","",365,null],[13,"ASTC_10x6UnormBlock","","",365,null],[13,"ASTC_10x6SrgbBlock","","",365,null],[13,"ASTC_10x8UnormBlock","","",365,null],[13,"ASTC_10x8SrgbBlock","","",365,null],[13,"ASTC_10x10UnormBlock","","",365,null],[13,"ASTC_10x10SrgbBlock","","",365,null],[13,"ASTC_12x10UnormBlock","","",365,null],[13,"ASTC_12x10SrgbBlock","","",365,null],[13,"ASTC_12x12UnormBlock","","",365,null],[13,"ASTC_12x12SrgbBlock","","",365,null],[4,"FormatTy","","",null,null],[13,"Float","","",366,null],[13,"Uint","","",366,null],[13,"Sint","","",366,null],[13,"Depth","","",366,null],[13,"Stencil","","",366,null],[13,"DepthStencil","","",366,null],[13,"Compressed","","",366,null],[4,"ClearValue","","Describes a uniform value that will be used to fill an image.",null,null],[13,"None","","Entry for attachments that aren&#39;t cleared.",367,null],[13,"Float","","Value for floating-point attachments, including `Unorm`, `Snorm`, `Sfloat`.",367,null],[13,"Int","","Value for integer attachments, including `Int`.",367,null],[13,"Uint","","Value for unsigned integer attachments, including `Uint`.",367,null],[13,"Depth","","Value for depth attachments.",367,null],[13,"Stencil","","Value for stencil attachments.",367,null],[13,"DepthStencil","","Value for depth and stencil attachments.",367,null],[8,"Data","","Some data whose type must be known by the library.",null,null],[10,"ty","","Returns the type of the data from an enum.",368,{"inputs":[],"output":{"name":"format"}}],[8,"FormatDesc","","",null,null],[16,"ClearValue","","",369,null],[10,"format","","",369,{"inputs":[{"name":"formatdesc"}],"output":{"name":"format"}}],[10,"decode_clear_value","","",369,{"inputs":[{"name":"formatdesc"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[8,"PossibleFloatFormatDesc","","Trait for types that can possibly describe a float attachment.",null,null],[10,"is_float","","Returns true if the format is a float format.",370,{"inputs":[{"name":"possiblefloatformatdesc"}],"output":{"name":"bool"}}],[8,"PossibleUintFormatDesc","","",null,null],[10,"is_uint","","",371,{"inputs":[{"name":"possibleuintformatdesc"}],"output":{"name":"bool"}}],[8,"PossibleSintFormatDesc","","",null,null],[10,"is_sint","","",372,{"inputs":[{"name":"possiblesintformatdesc"}],"output":{"name":"bool"}}],[8,"PossibleDepthFormatDesc","","",null,null],[10,"is_depth","","",373,{"inputs":[{"name":"possibledepthformatdesc"}],"output":{"name":"bool"}}],[8,"PossibleStencilFormatDesc","","",null,null],[10,"is_stencil","","",374,{"inputs":[{"name":"possiblestencilformatdesc"}],"output":{"name":"bool"}}],[8,"PossibleDepthStencilFormatDesc","","",null,null],[10,"is_depth_stencil","","",375,{"inputs":[{"name":"possibledepthstencilformatdesc"}],"output":{"name":"bool"}}],[8,"PossibleCompressedFormatDesc","","",null,null],[10,"is_compressed","","",376,{"inputs":[{"name":"possiblecompressedformatdesc"}],"output":{"name":"bool"}}],[8,"PossibleFloatOrCompressedFormatDesc","","Trait for types that can possibly describe a float or compressed attachment.",null,null],[10,"is_float_or_compressed","","Returns true if the format is a float or compressed format.",377,{"inputs":[{"name":"possiblefloatorcompressedformatdesc"}],"output":{"name":"bool"}}],[8,"StrongStorage","","",null,null],[16,"Pixel","","",378,null],[8,"ClearValuesTuple","","",null,null],[16,"Iter","","",379,null],[10,"iter","","",379,{"inputs":[{"name":"clearvaluestuple"}],"output":{"name":"iter"}}],[11,"eq","","",365,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"fmt","","",365,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",365,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"size","","Returns the size in bytes of an element of this format. Returns `None` if the\nsize is irrelevant (for example for compressed formats).",365,{"inputs":[{"name":"format"}],"output":{"name":"option"}}],[11,"ty","","",365,{"inputs":[{"name":"format"}],"output":{"name":"formatty"}}],[11,"default","","",380,{"inputs":[],"output":{"name":"r4g4unormpack8"}}],[11,"clone","","",380,{"inputs":[{"name":"r4g4unormpack8"}],"output":{"name":"r4g4unormpack8"}}],[11,"fmt","","",380,{"inputs":[{"name":"r4g4unormpack8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",380,{"inputs":[{"name":"r4g4unormpack8"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",380,{"inputs":[{"name":"r4g4unormpack8"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",380,{"inputs":[{"name":"r4g4unormpack8"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",380,{"inputs":[{"name":"r4g4unormpack8"}],"output":{"name":"bool"}}],[11,"default","","",381,{"inputs":[],"output":{"name":"r4g4b4a4unormpack16"}}],[11,"clone","","",381,{"inputs":[{"name":"r4g4b4a4unormpack16"}],"output":{"name":"r4g4b4a4unormpack16"}}],[11,"fmt","","",381,{"inputs":[{"name":"r4g4b4a4unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",381,{"inputs":[{"name":"r4g4b4a4unormpack16"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",381,{"inputs":[{"name":"r4g4b4a4unormpack16"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",381,{"inputs":[{"name":"r4g4b4a4unormpack16"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",381,{"inputs":[{"name":"r4g4b4a4unormpack16"}],"output":{"name":"bool"}}],[11,"default","","",382,{"inputs":[],"output":{"name":"b4g4r4a4unormpack16"}}],[11,"clone","","",382,{"inputs":[{"name":"b4g4r4a4unormpack16"}],"output":{"name":"b4g4r4a4unormpack16"}}],[11,"fmt","","",382,{"inputs":[{"name":"b4g4r4a4unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",382,{"inputs":[{"name":"b4g4r4a4unormpack16"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",382,{"inputs":[{"name":"b4g4r4a4unormpack16"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",382,{"inputs":[{"name":"b4g4r4a4unormpack16"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",382,{"inputs":[{"name":"b4g4r4a4unormpack16"}],"output":{"name":"bool"}}],[11,"default","","",383,{"inputs":[],"output":{"name":"r5g6b5unormpack16"}}],[11,"clone","","",383,{"inputs":[{"name":"r5g6b5unormpack16"}],"output":{"name":"r5g6b5unormpack16"}}],[11,"fmt","","",383,{"inputs":[{"name":"r5g6b5unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",383,{"inputs":[{"name":"r5g6b5unormpack16"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",383,{"inputs":[{"name":"r5g6b5unormpack16"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",383,{"inputs":[{"name":"r5g6b5unormpack16"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",383,{"inputs":[{"name":"r5g6b5unormpack16"}],"output":{"name":"bool"}}],[11,"default","","",384,{"inputs":[],"output":{"name":"b5g6r5unormpack16"}}],[11,"clone","","",384,{"inputs":[{"name":"b5g6r5unormpack16"}],"output":{"name":"b5g6r5unormpack16"}}],[11,"fmt","","",384,{"inputs":[{"name":"b5g6r5unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",384,{"inputs":[{"name":"b5g6r5unormpack16"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",384,{"inputs":[{"name":"b5g6r5unormpack16"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",384,{"inputs":[{"name":"b5g6r5unormpack16"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",384,{"inputs":[{"name":"b5g6r5unormpack16"}],"output":{"name":"bool"}}],[11,"default","","",385,{"inputs":[],"output":{"name":"r5g5b5a1unormpack16"}}],[11,"clone","","",385,{"inputs":[{"name":"r5g5b5a1unormpack16"}],"output":{"name":"r5g5b5a1unormpack16"}}],[11,"fmt","","",385,{"inputs":[{"name":"r5g5b5a1unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",385,{"inputs":[{"name":"r5g5b5a1unormpack16"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",385,{"inputs":[{"name":"r5g5b5a1unormpack16"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",385,{"inputs":[{"name":"r5g5b5a1unormpack16"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",385,{"inputs":[{"name":"r5g5b5a1unormpack16"}],"output":{"name":"bool"}}],[11,"default","","",386,{"inputs":[],"output":{"name":"b5g5r5a1unormpack16"}}],[11,"clone","","",386,{"inputs":[{"name":"b5g5r5a1unormpack16"}],"output":{"name":"b5g5r5a1unormpack16"}}],[11,"fmt","","",386,{"inputs":[{"name":"b5g5r5a1unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",386,{"inputs":[{"name":"b5g5r5a1unormpack16"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",386,{"inputs":[{"name":"b5g5r5a1unormpack16"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",386,{"inputs":[{"name":"b5g5r5a1unormpack16"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",386,{"inputs":[{"name":"b5g5r5a1unormpack16"}],"output":{"name":"bool"}}],[11,"default","","",387,{"inputs":[],"output":{"name":"a1r5g5b5unormpack16"}}],[11,"clone","","",387,{"inputs":[{"name":"a1r5g5b5unormpack16"}],"output":{"name":"a1r5g5b5unormpack16"}}],[11,"fmt","","",387,{"inputs":[{"name":"a1r5g5b5unormpack16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",387,{"inputs":[{"name":"a1r5g5b5unormpack16"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",387,{"inputs":[{"name":"a1r5g5b5unormpack16"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",387,{"inputs":[{"name":"a1r5g5b5unormpack16"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",387,{"inputs":[{"name":"a1r5g5b5unormpack16"}],"output":{"name":"bool"}}],[11,"default","","",388,{"inputs":[],"output":{"name":"r8unorm"}}],[11,"clone","","",388,{"inputs":[{"name":"r8unorm"}],"output":{"name":"r8unorm"}}],[11,"fmt","","",388,{"inputs":[{"name":"r8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",388,{"inputs":[{"name":"r8unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",388,{"inputs":[{"name":"r8unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",388,{"inputs":[{"name":"r8unorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",388,{"inputs":[{"name":"r8unorm"}],"output":{"name":"bool"}}],[11,"default","","",389,{"inputs":[],"output":{"name":"r8snorm"}}],[11,"clone","","",389,{"inputs":[{"name":"r8snorm"}],"output":{"name":"r8snorm"}}],[11,"fmt","","",389,{"inputs":[{"name":"r8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",389,{"inputs":[{"name":"r8snorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",389,{"inputs":[{"name":"r8snorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",389,{"inputs":[{"name":"r8snorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",389,{"inputs":[{"name":"r8snorm"}],"output":{"name":"bool"}}],[11,"default","","",390,{"inputs":[],"output":{"name":"r8uscaled"}}],[11,"clone","","",390,{"inputs":[{"name":"r8uscaled"}],"output":{"name":"r8uscaled"}}],[11,"fmt","","",390,{"inputs":[{"name":"r8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",390,{"inputs":[{"name":"r8uscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",390,{"inputs":[{"name":"r8uscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",390,{"inputs":[{"name":"r8uscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",390,{"inputs":[{"name":"r8uscaled"}],"output":{"name":"bool"}}],[11,"default","","",391,{"inputs":[],"output":{"name":"r8sscaled"}}],[11,"clone","","",391,{"inputs":[{"name":"r8sscaled"}],"output":{"name":"r8sscaled"}}],[11,"fmt","","",391,{"inputs":[{"name":"r8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",391,{"inputs":[{"name":"r8sscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",391,{"inputs":[{"name":"r8sscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",391,{"inputs":[{"name":"r8sscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",391,{"inputs":[{"name":"r8sscaled"}],"output":{"name":"bool"}}],[11,"default","","",392,{"inputs":[],"output":{"name":"r8uint"}}],[11,"clone","","",392,{"inputs":[{"name":"r8uint"}],"output":{"name":"r8uint"}}],[11,"fmt","","",392,{"inputs":[{"name":"r8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",392,{"inputs":[{"name":"r8uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",392,{"inputs":[{"name":"r8uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",392,{"inputs":[{"name":"r8uint"}],"output":{"name":"bool"}}],[11,"default","","",393,{"inputs":[],"output":{"name":"r8sint"}}],[11,"clone","","",393,{"inputs":[{"name":"r8sint"}],"output":{"name":"r8sint"}}],[11,"fmt","","",393,{"inputs":[{"name":"r8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",393,{"inputs":[{"name":"r8sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",393,{"inputs":[{"name":"r8sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",393,{"inputs":[{"name":"r8sint"}],"output":{"name":"bool"}}],[11,"default","","",394,{"inputs":[],"output":{"name":"r8srgb"}}],[11,"clone","","",394,{"inputs":[{"name":"r8srgb"}],"output":{"name":"r8srgb"}}],[11,"fmt","","",394,{"inputs":[{"name":"r8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",394,{"inputs":[{"name":"r8srgb"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",394,{"inputs":[{"name":"r8srgb"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",394,{"inputs":[{"name":"r8srgb"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",394,{"inputs":[{"name":"r8srgb"}],"output":{"name":"bool"}}],[11,"default","","",395,{"inputs":[],"output":{"name":"r8g8unorm"}}],[11,"clone","","",395,{"inputs":[{"name":"r8g8unorm"}],"output":{"name":"r8g8unorm"}}],[11,"fmt","","",395,{"inputs":[{"name":"r8g8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",395,{"inputs":[{"name":"r8g8unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",395,{"inputs":[{"name":"r8g8unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",395,{"inputs":[{"name":"r8g8unorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",395,{"inputs":[{"name":"r8g8unorm"}],"output":{"name":"bool"}}],[11,"default","","",396,{"inputs":[],"output":{"name":"r8g8snorm"}}],[11,"clone","","",396,{"inputs":[{"name":"r8g8snorm"}],"output":{"name":"r8g8snorm"}}],[11,"fmt","","",396,{"inputs":[{"name":"r8g8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",396,{"inputs":[{"name":"r8g8snorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",396,{"inputs":[{"name":"r8g8snorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",396,{"inputs":[{"name":"r8g8snorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",396,{"inputs":[{"name":"r8g8snorm"}],"output":{"name":"bool"}}],[11,"default","","",397,{"inputs":[],"output":{"name":"r8g8uscaled"}}],[11,"clone","","",397,{"inputs":[{"name":"r8g8uscaled"}],"output":{"name":"r8g8uscaled"}}],[11,"fmt","","",397,{"inputs":[{"name":"r8g8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",397,{"inputs":[{"name":"r8g8uscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",397,{"inputs":[{"name":"r8g8uscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",397,{"inputs":[{"name":"r8g8uscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",397,{"inputs":[{"name":"r8g8uscaled"}],"output":{"name":"bool"}}],[11,"default","","",398,{"inputs":[],"output":{"name":"r8g8sscaled"}}],[11,"clone","","",398,{"inputs":[{"name":"r8g8sscaled"}],"output":{"name":"r8g8sscaled"}}],[11,"fmt","","",398,{"inputs":[{"name":"r8g8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",398,{"inputs":[{"name":"r8g8sscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",398,{"inputs":[{"name":"r8g8sscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",398,{"inputs":[{"name":"r8g8sscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",398,{"inputs":[{"name":"r8g8sscaled"}],"output":{"name":"bool"}}],[11,"default","","",399,{"inputs":[],"output":{"name":"r8g8uint"}}],[11,"clone","","",399,{"inputs":[{"name":"r8g8uint"}],"output":{"name":"r8g8uint"}}],[11,"fmt","","",399,{"inputs":[{"name":"r8g8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",399,{"inputs":[{"name":"r8g8uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",399,{"inputs":[{"name":"r8g8uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",399,{"inputs":[{"name":"r8g8uint"}],"output":{"name":"bool"}}],[11,"default","","",400,{"inputs":[],"output":{"name":"r8g8sint"}}],[11,"clone","","",400,{"inputs":[{"name":"r8g8sint"}],"output":{"name":"r8g8sint"}}],[11,"fmt","","",400,{"inputs":[{"name":"r8g8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",400,{"inputs":[{"name":"r8g8sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",400,{"inputs":[{"name":"r8g8sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",400,{"inputs":[{"name":"r8g8sint"}],"output":{"name":"bool"}}],[11,"default","","",401,{"inputs":[],"output":{"name":"r8g8srgb"}}],[11,"clone","","",401,{"inputs":[{"name":"r8g8srgb"}],"output":{"name":"r8g8srgb"}}],[11,"fmt","","",401,{"inputs":[{"name":"r8g8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",401,{"inputs":[{"name":"r8g8srgb"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",401,{"inputs":[{"name":"r8g8srgb"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",401,{"inputs":[{"name":"r8g8srgb"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",401,{"inputs":[{"name":"r8g8srgb"}],"output":{"name":"bool"}}],[11,"default","","",402,{"inputs":[],"output":{"name":"r8g8b8unorm"}}],[11,"clone","","",402,{"inputs":[{"name":"r8g8b8unorm"}],"output":{"name":"r8g8b8unorm"}}],[11,"fmt","","",402,{"inputs":[{"name":"r8g8b8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",402,{"inputs":[{"name":"r8g8b8unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",402,{"inputs":[{"name":"r8g8b8unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",402,{"inputs":[{"name":"r8g8b8unorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",402,{"inputs":[{"name":"r8g8b8unorm"}],"output":{"name":"bool"}}],[11,"default","","",403,{"inputs":[],"output":{"name":"r8g8b8snorm"}}],[11,"clone","","",403,{"inputs":[{"name":"r8g8b8snorm"}],"output":{"name":"r8g8b8snorm"}}],[11,"fmt","","",403,{"inputs":[{"name":"r8g8b8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",403,{"inputs":[{"name":"r8g8b8snorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",403,{"inputs":[{"name":"r8g8b8snorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",403,{"inputs":[{"name":"r8g8b8snorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",403,{"inputs":[{"name":"r8g8b8snorm"}],"output":{"name":"bool"}}],[11,"default","","",404,{"inputs":[],"output":{"name":"r8g8b8uscaled"}}],[11,"clone","","",404,{"inputs":[{"name":"r8g8b8uscaled"}],"output":{"name":"r8g8b8uscaled"}}],[11,"fmt","","",404,{"inputs":[{"name":"r8g8b8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",404,{"inputs":[{"name":"r8g8b8uscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",404,{"inputs":[{"name":"r8g8b8uscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",404,{"inputs":[{"name":"r8g8b8uscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",404,{"inputs":[{"name":"r8g8b8uscaled"}],"output":{"name":"bool"}}],[11,"default","","",405,{"inputs":[],"output":{"name":"r8g8b8sscaled"}}],[11,"clone","","",405,{"inputs":[{"name":"r8g8b8sscaled"}],"output":{"name":"r8g8b8sscaled"}}],[11,"fmt","","",405,{"inputs":[{"name":"r8g8b8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",405,{"inputs":[{"name":"r8g8b8sscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",405,{"inputs":[{"name":"r8g8b8sscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",405,{"inputs":[{"name":"r8g8b8sscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",405,{"inputs":[{"name":"r8g8b8sscaled"}],"output":{"name":"bool"}}],[11,"default","","",406,{"inputs":[],"output":{"name":"r8g8b8uint"}}],[11,"clone","","",406,{"inputs":[{"name":"r8g8b8uint"}],"output":{"name":"r8g8b8uint"}}],[11,"fmt","","",406,{"inputs":[{"name":"r8g8b8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",406,{"inputs":[{"name":"r8g8b8uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",406,{"inputs":[{"name":"r8g8b8uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",406,{"inputs":[{"name":"r8g8b8uint"}],"output":{"name":"bool"}}],[11,"default","","",407,{"inputs":[],"output":{"name":"r8g8b8sint"}}],[11,"clone","","",407,{"inputs":[{"name":"r8g8b8sint"}],"output":{"name":"r8g8b8sint"}}],[11,"fmt","","",407,{"inputs":[{"name":"r8g8b8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",407,{"inputs":[{"name":"r8g8b8sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",407,{"inputs":[{"name":"r8g8b8sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",407,{"inputs":[{"name":"r8g8b8sint"}],"output":{"name":"bool"}}],[11,"default","","",408,{"inputs":[],"output":{"name":"r8g8b8srgb"}}],[11,"clone","","",408,{"inputs":[{"name":"r8g8b8srgb"}],"output":{"name":"r8g8b8srgb"}}],[11,"fmt","","",408,{"inputs":[{"name":"r8g8b8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",408,{"inputs":[{"name":"r8g8b8srgb"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",408,{"inputs":[{"name":"r8g8b8srgb"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",408,{"inputs":[{"name":"r8g8b8srgb"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",408,{"inputs":[{"name":"r8g8b8srgb"}],"output":{"name":"bool"}}],[11,"default","","",409,{"inputs":[],"output":{"name":"b8g8r8unorm"}}],[11,"clone","","",409,{"inputs":[{"name":"b8g8r8unorm"}],"output":{"name":"b8g8r8unorm"}}],[11,"fmt","","",409,{"inputs":[{"name":"b8g8r8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",409,{"inputs":[{"name":"b8g8r8unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",409,{"inputs":[{"name":"b8g8r8unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",409,{"inputs":[{"name":"b8g8r8unorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",409,{"inputs":[{"name":"b8g8r8unorm"}],"output":{"name":"bool"}}],[11,"default","","",410,{"inputs":[],"output":{"name":"b8g8r8snorm"}}],[11,"clone","","",410,{"inputs":[{"name":"b8g8r8snorm"}],"output":{"name":"b8g8r8snorm"}}],[11,"fmt","","",410,{"inputs":[{"name":"b8g8r8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",410,{"inputs":[{"name":"b8g8r8snorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",410,{"inputs":[{"name":"b8g8r8snorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",410,{"inputs":[{"name":"b8g8r8snorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",410,{"inputs":[{"name":"b8g8r8snorm"}],"output":{"name":"bool"}}],[11,"default","","",411,{"inputs":[],"output":{"name":"b8g8r8uscaled"}}],[11,"clone","","",411,{"inputs":[{"name":"b8g8r8uscaled"}],"output":{"name":"b8g8r8uscaled"}}],[11,"fmt","","",411,{"inputs":[{"name":"b8g8r8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",411,{"inputs":[{"name":"b8g8r8uscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",411,{"inputs":[{"name":"b8g8r8uscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",411,{"inputs":[{"name":"b8g8r8uscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",411,{"inputs":[{"name":"b8g8r8uscaled"}],"output":{"name":"bool"}}],[11,"default","","",412,{"inputs":[],"output":{"name":"b8g8r8sscaled"}}],[11,"clone","","",412,{"inputs":[{"name":"b8g8r8sscaled"}],"output":{"name":"b8g8r8sscaled"}}],[11,"fmt","","",412,{"inputs":[{"name":"b8g8r8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",412,{"inputs":[{"name":"b8g8r8sscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",412,{"inputs":[{"name":"b8g8r8sscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",412,{"inputs":[{"name":"b8g8r8sscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",412,{"inputs":[{"name":"b8g8r8sscaled"}],"output":{"name":"bool"}}],[11,"default","","",413,{"inputs":[],"output":{"name":"b8g8r8uint"}}],[11,"clone","","",413,{"inputs":[{"name":"b8g8r8uint"}],"output":{"name":"b8g8r8uint"}}],[11,"fmt","","",413,{"inputs":[{"name":"b8g8r8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",413,{"inputs":[{"name":"b8g8r8uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",413,{"inputs":[{"name":"b8g8r8uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",413,{"inputs":[{"name":"b8g8r8uint"}],"output":{"name":"bool"}}],[11,"default","","",414,{"inputs":[],"output":{"name":"b8g8r8sint"}}],[11,"clone","","",414,{"inputs":[{"name":"b8g8r8sint"}],"output":{"name":"b8g8r8sint"}}],[11,"fmt","","",414,{"inputs":[{"name":"b8g8r8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",414,{"inputs":[{"name":"b8g8r8sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",414,{"inputs":[{"name":"b8g8r8sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",414,{"inputs":[{"name":"b8g8r8sint"}],"output":{"name":"bool"}}],[11,"default","","",415,{"inputs":[],"output":{"name":"b8g8r8srgb"}}],[11,"clone","","",415,{"inputs":[{"name":"b8g8r8srgb"}],"output":{"name":"b8g8r8srgb"}}],[11,"fmt","","",415,{"inputs":[{"name":"b8g8r8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",415,{"inputs":[{"name":"b8g8r8srgb"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",415,{"inputs":[{"name":"b8g8r8srgb"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",415,{"inputs":[{"name":"b8g8r8srgb"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",415,{"inputs":[{"name":"b8g8r8srgb"}],"output":{"name":"bool"}}],[11,"default","","",416,{"inputs":[],"output":{"name":"r8g8b8a8unorm"}}],[11,"clone","","",416,{"inputs":[{"name":"r8g8b8a8unorm"}],"output":{"name":"r8g8b8a8unorm"}}],[11,"fmt","","",416,{"inputs":[{"name":"r8g8b8a8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",416,{"inputs":[{"name":"r8g8b8a8unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",416,{"inputs":[{"name":"r8g8b8a8unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",416,{"inputs":[{"name":"r8g8b8a8unorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",416,{"inputs":[{"name":"r8g8b8a8unorm"}],"output":{"name":"bool"}}],[11,"default","","",417,{"inputs":[],"output":{"name":"r8g8b8a8snorm"}}],[11,"clone","","",417,{"inputs":[{"name":"r8g8b8a8snorm"}],"output":{"name":"r8g8b8a8snorm"}}],[11,"fmt","","",417,{"inputs":[{"name":"r8g8b8a8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",417,{"inputs":[{"name":"r8g8b8a8snorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",417,{"inputs":[{"name":"r8g8b8a8snorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",417,{"inputs":[{"name":"r8g8b8a8snorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",417,{"inputs":[{"name":"r8g8b8a8snorm"}],"output":{"name":"bool"}}],[11,"default","","",418,{"inputs":[],"output":{"name":"r8g8b8a8uscaled"}}],[11,"clone","","",418,{"inputs":[{"name":"r8g8b8a8uscaled"}],"output":{"name":"r8g8b8a8uscaled"}}],[11,"fmt","","",418,{"inputs":[{"name":"r8g8b8a8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",418,{"inputs":[{"name":"r8g8b8a8uscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",418,{"inputs":[{"name":"r8g8b8a8uscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",418,{"inputs":[{"name":"r8g8b8a8uscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",418,{"inputs":[{"name":"r8g8b8a8uscaled"}],"output":{"name":"bool"}}],[11,"default","","",419,{"inputs":[],"output":{"name":"r8g8b8a8sscaled"}}],[11,"clone","","",419,{"inputs":[{"name":"r8g8b8a8sscaled"}],"output":{"name":"r8g8b8a8sscaled"}}],[11,"fmt","","",419,{"inputs":[{"name":"r8g8b8a8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",419,{"inputs":[{"name":"r8g8b8a8sscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",419,{"inputs":[{"name":"r8g8b8a8sscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",419,{"inputs":[{"name":"r8g8b8a8sscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",419,{"inputs":[{"name":"r8g8b8a8sscaled"}],"output":{"name":"bool"}}],[11,"default","","",420,{"inputs":[],"output":{"name":"r8g8b8a8uint"}}],[11,"clone","","",420,{"inputs":[{"name":"r8g8b8a8uint"}],"output":{"name":"r8g8b8a8uint"}}],[11,"fmt","","",420,{"inputs":[{"name":"r8g8b8a8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",420,{"inputs":[{"name":"r8g8b8a8uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",420,{"inputs":[{"name":"r8g8b8a8uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",420,{"inputs":[{"name":"r8g8b8a8uint"}],"output":{"name":"bool"}}],[11,"default","","",421,{"inputs":[],"output":{"name":"r8g8b8a8sint"}}],[11,"clone","","",421,{"inputs":[{"name":"r8g8b8a8sint"}],"output":{"name":"r8g8b8a8sint"}}],[11,"fmt","","",421,{"inputs":[{"name":"r8g8b8a8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",421,{"inputs":[{"name":"r8g8b8a8sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",421,{"inputs":[{"name":"r8g8b8a8sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",421,{"inputs":[{"name":"r8g8b8a8sint"}],"output":{"name":"bool"}}],[11,"default","","",422,{"inputs":[],"output":{"name":"r8g8b8a8srgb"}}],[11,"clone","","",422,{"inputs":[{"name":"r8g8b8a8srgb"}],"output":{"name":"r8g8b8a8srgb"}}],[11,"fmt","","",422,{"inputs":[{"name":"r8g8b8a8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",422,{"inputs":[{"name":"r8g8b8a8srgb"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",422,{"inputs":[{"name":"r8g8b8a8srgb"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",422,{"inputs":[{"name":"r8g8b8a8srgb"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",422,{"inputs":[{"name":"r8g8b8a8srgb"}],"output":{"name":"bool"}}],[11,"default","","",423,{"inputs":[],"output":{"name":"b8g8r8a8unorm"}}],[11,"clone","","",423,{"inputs":[{"name":"b8g8r8a8unorm"}],"output":{"name":"b8g8r8a8unorm"}}],[11,"fmt","","",423,{"inputs":[{"name":"b8g8r8a8unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",423,{"inputs":[{"name":"b8g8r8a8unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",423,{"inputs":[{"name":"b8g8r8a8unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",423,{"inputs":[{"name":"b8g8r8a8unorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",423,{"inputs":[{"name":"b8g8r8a8unorm"}],"output":{"name":"bool"}}],[11,"default","","",424,{"inputs":[],"output":{"name":"b8g8r8a8snorm"}}],[11,"clone","","",424,{"inputs":[{"name":"b8g8r8a8snorm"}],"output":{"name":"b8g8r8a8snorm"}}],[11,"fmt","","",424,{"inputs":[{"name":"b8g8r8a8snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",424,{"inputs":[{"name":"b8g8r8a8snorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",424,{"inputs":[{"name":"b8g8r8a8snorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",424,{"inputs":[{"name":"b8g8r8a8snorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",424,{"inputs":[{"name":"b8g8r8a8snorm"}],"output":{"name":"bool"}}],[11,"default","","",425,{"inputs":[],"output":{"name":"b8g8r8a8uscaled"}}],[11,"clone","","",425,{"inputs":[{"name":"b8g8r8a8uscaled"}],"output":{"name":"b8g8r8a8uscaled"}}],[11,"fmt","","",425,{"inputs":[{"name":"b8g8r8a8uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",425,{"inputs":[{"name":"b8g8r8a8uscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",425,{"inputs":[{"name":"b8g8r8a8uscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",425,{"inputs":[{"name":"b8g8r8a8uscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",425,{"inputs":[{"name":"b8g8r8a8uscaled"}],"output":{"name":"bool"}}],[11,"default","","",426,{"inputs":[],"output":{"name":"b8g8r8a8sscaled"}}],[11,"clone","","",426,{"inputs":[{"name":"b8g8r8a8sscaled"}],"output":{"name":"b8g8r8a8sscaled"}}],[11,"fmt","","",426,{"inputs":[{"name":"b8g8r8a8sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",426,{"inputs":[{"name":"b8g8r8a8sscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",426,{"inputs":[{"name":"b8g8r8a8sscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",426,{"inputs":[{"name":"b8g8r8a8sscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",426,{"inputs":[{"name":"b8g8r8a8sscaled"}],"output":{"name":"bool"}}],[11,"default","","",427,{"inputs":[],"output":{"name":"b8g8r8a8uint"}}],[11,"clone","","",427,{"inputs":[{"name":"b8g8r8a8uint"}],"output":{"name":"b8g8r8a8uint"}}],[11,"fmt","","",427,{"inputs":[{"name":"b8g8r8a8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",427,{"inputs":[{"name":"b8g8r8a8uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",427,{"inputs":[{"name":"b8g8r8a8uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",427,{"inputs":[{"name":"b8g8r8a8uint"}],"output":{"name":"bool"}}],[11,"default","","",428,{"inputs":[],"output":{"name":"b8g8r8a8sint"}}],[11,"clone","","",428,{"inputs":[{"name":"b8g8r8a8sint"}],"output":{"name":"b8g8r8a8sint"}}],[11,"fmt","","",428,{"inputs":[{"name":"b8g8r8a8sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",428,{"inputs":[{"name":"b8g8r8a8sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",428,{"inputs":[{"name":"b8g8r8a8sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",428,{"inputs":[{"name":"b8g8r8a8sint"}],"output":{"name":"bool"}}],[11,"default","","",429,{"inputs":[],"output":{"name":"b8g8r8a8srgb"}}],[11,"clone","","",429,{"inputs":[{"name":"b8g8r8a8srgb"}],"output":{"name":"b8g8r8a8srgb"}}],[11,"fmt","","",429,{"inputs":[{"name":"b8g8r8a8srgb"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",429,{"inputs":[{"name":"b8g8r8a8srgb"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",429,{"inputs":[{"name":"b8g8r8a8srgb"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",429,{"inputs":[{"name":"b8g8r8a8srgb"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",429,{"inputs":[{"name":"b8g8r8a8srgb"}],"output":{"name":"bool"}}],[11,"default","","",430,{"inputs":[],"output":{"name":"a8b8g8r8unormpack32"}}],[11,"clone","","",430,{"inputs":[{"name":"a8b8g8r8unormpack32"}],"output":{"name":"a8b8g8r8unormpack32"}}],[11,"fmt","","",430,{"inputs":[{"name":"a8b8g8r8unormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",430,{"inputs":[{"name":"a8b8g8r8unormpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",430,{"inputs":[{"name":"a8b8g8r8unormpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",430,{"inputs":[{"name":"a8b8g8r8unormpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",430,{"inputs":[{"name":"a8b8g8r8unormpack32"}],"output":{"name":"bool"}}],[11,"default","","",431,{"inputs":[],"output":{"name":"a8b8g8r8snormpack32"}}],[11,"clone","","",431,{"inputs":[{"name":"a8b8g8r8snormpack32"}],"output":{"name":"a8b8g8r8snormpack32"}}],[11,"fmt","","",431,{"inputs":[{"name":"a8b8g8r8snormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",431,{"inputs":[{"name":"a8b8g8r8snormpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",431,{"inputs":[{"name":"a8b8g8r8snormpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",431,{"inputs":[{"name":"a8b8g8r8snormpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",431,{"inputs":[{"name":"a8b8g8r8snormpack32"}],"output":{"name":"bool"}}],[11,"default","","",432,{"inputs":[],"output":{"name":"a8b8g8r8uscaledpack32"}}],[11,"clone","","",432,{"inputs":[{"name":"a8b8g8r8uscaledpack32"}],"output":{"name":"a8b8g8r8uscaledpack32"}}],[11,"fmt","","",432,{"inputs":[{"name":"a8b8g8r8uscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",432,{"inputs":[{"name":"a8b8g8r8uscaledpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",432,{"inputs":[{"name":"a8b8g8r8uscaledpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",432,{"inputs":[{"name":"a8b8g8r8uscaledpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",432,{"inputs":[{"name":"a8b8g8r8uscaledpack32"}],"output":{"name":"bool"}}],[11,"default","","",433,{"inputs":[],"output":{"name":"a8b8g8r8sscaledpack32"}}],[11,"clone","","",433,{"inputs":[{"name":"a8b8g8r8sscaledpack32"}],"output":{"name":"a8b8g8r8sscaledpack32"}}],[11,"fmt","","",433,{"inputs":[{"name":"a8b8g8r8sscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",433,{"inputs":[{"name":"a8b8g8r8sscaledpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",433,{"inputs":[{"name":"a8b8g8r8sscaledpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",433,{"inputs":[{"name":"a8b8g8r8sscaledpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",433,{"inputs":[{"name":"a8b8g8r8sscaledpack32"}],"output":{"name":"bool"}}],[11,"default","","",434,{"inputs":[],"output":{"name":"a8b8g8r8uintpack32"}}],[11,"clone","","",434,{"inputs":[{"name":"a8b8g8r8uintpack32"}],"output":{"name":"a8b8g8r8uintpack32"}}],[11,"fmt","","",434,{"inputs":[{"name":"a8b8g8r8uintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",434,{"inputs":[{"name":"a8b8g8r8uintpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",434,{"inputs":[{"name":"a8b8g8r8uintpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",434,{"inputs":[{"name":"a8b8g8r8uintpack32"}],"output":{"name":"bool"}}],[11,"default","","",435,{"inputs":[],"output":{"name":"a8b8g8r8sintpack32"}}],[11,"clone","","",435,{"inputs":[{"name":"a8b8g8r8sintpack32"}],"output":{"name":"a8b8g8r8sintpack32"}}],[11,"fmt","","",435,{"inputs":[{"name":"a8b8g8r8sintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",435,{"inputs":[{"name":"a8b8g8r8sintpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",435,{"inputs":[{"name":"a8b8g8r8sintpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",435,{"inputs":[{"name":"a8b8g8r8sintpack32"}],"output":{"name":"bool"}}],[11,"default","","",436,{"inputs":[],"output":{"name":"a8b8g8r8srgbpack32"}}],[11,"clone","","",436,{"inputs":[{"name":"a8b8g8r8srgbpack32"}],"output":{"name":"a8b8g8r8srgbpack32"}}],[11,"fmt","","",436,{"inputs":[{"name":"a8b8g8r8srgbpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",436,{"inputs":[{"name":"a8b8g8r8srgbpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",436,{"inputs":[{"name":"a8b8g8r8srgbpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",436,{"inputs":[{"name":"a8b8g8r8srgbpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",436,{"inputs":[{"name":"a8b8g8r8srgbpack32"}],"output":{"name":"bool"}}],[11,"default","","",437,{"inputs":[],"output":{"name":"a2r10g10b10unormpack32"}}],[11,"clone","","",437,{"inputs":[{"name":"a2r10g10b10unormpack32"}],"output":{"name":"a2r10g10b10unormpack32"}}],[11,"fmt","","",437,{"inputs":[{"name":"a2r10g10b10unormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",437,{"inputs":[{"name":"a2r10g10b10unormpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",437,{"inputs":[{"name":"a2r10g10b10unormpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",437,{"inputs":[{"name":"a2r10g10b10unormpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",437,{"inputs":[{"name":"a2r10g10b10unormpack32"}],"output":{"name":"bool"}}],[11,"default","","",438,{"inputs":[],"output":{"name":"a2r10g10b10snormpack32"}}],[11,"clone","","",438,{"inputs":[{"name":"a2r10g10b10snormpack32"}],"output":{"name":"a2r10g10b10snormpack32"}}],[11,"fmt","","",438,{"inputs":[{"name":"a2r10g10b10snormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",438,{"inputs":[{"name":"a2r10g10b10snormpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",438,{"inputs":[{"name":"a2r10g10b10snormpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",438,{"inputs":[{"name":"a2r10g10b10snormpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",438,{"inputs":[{"name":"a2r10g10b10snormpack32"}],"output":{"name":"bool"}}],[11,"default","","",439,{"inputs":[],"output":{"name":"a2r10g10b10uscaledpack32"}}],[11,"clone","","",439,{"inputs":[{"name":"a2r10g10b10uscaledpack32"}],"output":{"name":"a2r10g10b10uscaledpack32"}}],[11,"fmt","","",439,{"inputs":[{"name":"a2r10g10b10uscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",439,{"inputs":[{"name":"a2r10g10b10uscaledpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",439,{"inputs":[{"name":"a2r10g10b10uscaledpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",439,{"inputs":[{"name":"a2r10g10b10uscaledpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",439,{"inputs":[{"name":"a2r10g10b10uscaledpack32"}],"output":{"name":"bool"}}],[11,"default","","",440,{"inputs":[],"output":{"name":"a2r10g10b10sscaledpack32"}}],[11,"clone","","",440,{"inputs":[{"name":"a2r10g10b10sscaledpack32"}],"output":{"name":"a2r10g10b10sscaledpack32"}}],[11,"fmt","","",440,{"inputs":[{"name":"a2r10g10b10sscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",440,{"inputs":[{"name":"a2r10g10b10sscaledpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",440,{"inputs":[{"name":"a2r10g10b10sscaledpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",440,{"inputs":[{"name":"a2r10g10b10sscaledpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",440,{"inputs":[{"name":"a2r10g10b10sscaledpack32"}],"output":{"name":"bool"}}],[11,"default","","",441,{"inputs":[],"output":{"name":"a2r10g10b10uintpack32"}}],[11,"clone","","",441,{"inputs":[{"name":"a2r10g10b10uintpack32"}],"output":{"name":"a2r10g10b10uintpack32"}}],[11,"fmt","","",441,{"inputs":[{"name":"a2r10g10b10uintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",441,{"inputs":[{"name":"a2r10g10b10uintpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",441,{"inputs":[{"name":"a2r10g10b10uintpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",441,{"inputs":[{"name":"a2r10g10b10uintpack32"}],"output":{"name":"bool"}}],[11,"default","","",442,{"inputs":[],"output":{"name":"a2r10g10b10sintpack32"}}],[11,"clone","","",442,{"inputs":[{"name":"a2r10g10b10sintpack32"}],"output":{"name":"a2r10g10b10sintpack32"}}],[11,"fmt","","",442,{"inputs":[{"name":"a2r10g10b10sintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",442,{"inputs":[{"name":"a2r10g10b10sintpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",442,{"inputs":[{"name":"a2r10g10b10sintpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",442,{"inputs":[{"name":"a2r10g10b10sintpack32"}],"output":{"name":"bool"}}],[11,"default","","",443,{"inputs":[],"output":{"name":"a2b10g10r10unormpack32"}}],[11,"clone","","",443,{"inputs":[{"name":"a2b10g10r10unormpack32"}],"output":{"name":"a2b10g10r10unormpack32"}}],[11,"fmt","","",443,{"inputs":[{"name":"a2b10g10r10unormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",443,{"inputs":[{"name":"a2b10g10r10unormpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",443,{"inputs":[{"name":"a2b10g10r10unormpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",443,{"inputs":[{"name":"a2b10g10r10unormpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",443,{"inputs":[{"name":"a2b10g10r10unormpack32"}],"output":{"name":"bool"}}],[11,"default","","",444,{"inputs":[],"output":{"name":"a2b10g10r10snormpack32"}}],[11,"clone","","",444,{"inputs":[{"name":"a2b10g10r10snormpack32"}],"output":{"name":"a2b10g10r10snormpack32"}}],[11,"fmt","","",444,{"inputs":[{"name":"a2b10g10r10snormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",444,{"inputs":[{"name":"a2b10g10r10snormpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",444,{"inputs":[{"name":"a2b10g10r10snormpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",444,{"inputs":[{"name":"a2b10g10r10snormpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",444,{"inputs":[{"name":"a2b10g10r10snormpack32"}],"output":{"name":"bool"}}],[11,"default","","",445,{"inputs":[],"output":{"name":"a2b10g10r10uscaledpack32"}}],[11,"clone","","",445,{"inputs":[{"name":"a2b10g10r10uscaledpack32"}],"output":{"name":"a2b10g10r10uscaledpack32"}}],[11,"fmt","","",445,{"inputs":[{"name":"a2b10g10r10uscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",445,{"inputs":[{"name":"a2b10g10r10uscaledpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",445,{"inputs":[{"name":"a2b10g10r10uscaledpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",445,{"inputs":[{"name":"a2b10g10r10uscaledpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",445,{"inputs":[{"name":"a2b10g10r10uscaledpack32"}],"output":{"name":"bool"}}],[11,"default","","",446,{"inputs":[],"output":{"name":"a2b10g10r10sscaledpack32"}}],[11,"clone","","",446,{"inputs":[{"name":"a2b10g10r10sscaledpack32"}],"output":{"name":"a2b10g10r10sscaledpack32"}}],[11,"fmt","","",446,{"inputs":[{"name":"a2b10g10r10sscaledpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",446,{"inputs":[{"name":"a2b10g10r10sscaledpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",446,{"inputs":[{"name":"a2b10g10r10sscaledpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",446,{"inputs":[{"name":"a2b10g10r10sscaledpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",446,{"inputs":[{"name":"a2b10g10r10sscaledpack32"}],"output":{"name":"bool"}}],[11,"default","","",447,{"inputs":[],"output":{"name":"a2b10g10r10uintpack32"}}],[11,"clone","","",447,{"inputs":[{"name":"a2b10g10r10uintpack32"}],"output":{"name":"a2b10g10r10uintpack32"}}],[11,"fmt","","",447,{"inputs":[{"name":"a2b10g10r10uintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",447,{"inputs":[{"name":"a2b10g10r10uintpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",447,{"inputs":[{"name":"a2b10g10r10uintpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",447,{"inputs":[{"name":"a2b10g10r10uintpack32"}],"output":{"name":"bool"}}],[11,"default","","",448,{"inputs":[],"output":{"name":"a2b10g10r10sintpack32"}}],[11,"clone","","",448,{"inputs":[{"name":"a2b10g10r10sintpack32"}],"output":{"name":"a2b10g10r10sintpack32"}}],[11,"fmt","","",448,{"inputs":[{"name":"a2b10g10r10sintpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",448,{"inputs":[{"name":"a2b10g10r10sintpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",448,{"inputs":[{"name":"a2b10g10r10sintpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",448,{"inputs":[{"name":"a2b10g10r10sintpack32"}],"output":{"name":"bool"}}],[11,"default","","",449,{"inputs":[],"output":{"name":"r16unorm"}}],[11,"clone","","",449,{"inputs":[{"name":"r16unorm"}],"output":{"name":"r16unorm"}}],[11,"fmt","","",449,{"inputs":[{"name":"r16unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",449,{"inputs":[{"name":"r16unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",449,{"inputs":[{"name":"r16unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",449,{"inputs":[{"name":"r16unorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",449,{"inputs":[{"name":"r16unorm"}],"output":{"name":"bool"}}],[11,"default","","",450,{"inputs":[],"output":{"name":"r16snorm"}}],[11,"clone","","",450,{"inputs":[{"name":"r16snorm"}],"output":{"name":"r16snorm"}}],[11,"fmt","","",450,{"inputs":[{"name":"r16snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",450,{"inputs":[{"name":"r16snorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",450,{"inputs":[{"name":"r16snorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",450,{"inputs":[{"name":"r16snorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",450,{"inputs":[{"name":"r16snorm"}],"output":{"name":"bool"}}],[11,"default","","",451,{"inputs":[],"output":{"name":"r16uscaled"}}],[11,"clone","","",451,{"inputs":[{"name":"r16uscaled"}],"output":{"name":"r16uscaled"}}],[11,"fmt","","",451,{"inputs":[{"name":"r16uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",451,{"inputs":[{"name":"r16uscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",451,{"inputs":[{"name":"r16uscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",451,{"inputs":[{"name":"r16uscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",451,{"inputs":[{"name":"r16uscaled"}],"output":{"name":"bool"}}],[11,"default","","",452,{"inputs":[],"output":{"name":"r16sscaled"}}],[11,"clone","","",452,{"inputs":[{"name":"r16sscaled"}],"output":{"name":"r16sscaled"}}],[11,"fmt","","",452,{"inputs":[{"name":"r16sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",452,{"inputs":[{"name":"r16sscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",452,{"inputs":[{"name":"r16sscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",452,{"inputs":[{"name":"r16sscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",452,{"inputs":[{"name":"r16sscaled"}],"output":{"name":"bool"}}],[11,"default","","",453,{"inputs":[],"output":{"name":"r16uint"}}],[11,"clone","","",453,{"inputs":[{"name":"r16uint"}],"output":{"name":"r16uint"}}],[11,"fmt","","",453,{"inputs":[{"name":"r16uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",453,{"inputs":[{"name":"r16uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",453,{"inputs":[{"name":"r16uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",453,{"inputs":[{"name":"r16uint"}],"output":{"name":"bool"}}],[11,"default","","",454,{"inputs":[],"output":{"name":"r16sint"}}],[11,"clone","","",454,{"inputs":[{"name":"r16sint"}],"output":{"name":"r16sint"}}],[11,"fmt","","",454,{"inputs":[{"name":"r16sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",454,{"inputs":[{"name":"r16sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",454,{"inputs":[{"name":"r16sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",454,{"inputs":[{"name":"r16sint"}],"output":{"name":"bool"}}],[11,"default","","",455,{"inputs":[],"output":{"name":"r16sfloat"}}],[11,"clone","","",455,{"inputs":[{"name":"r16sfloat"}],"output":{"name":"r16sfloat"}}],[11,"fmt","","",455,{"inputs":[{"name":"r16sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",455,{"inputs":[{"name":"r16sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",455,{"inputs":[{"name":"r16sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",455,{"inputs":[{"name":"r16sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",455,{"inputs":[{"name":"r16sfloat"}],"output":{"name":"bool"}}],[11,"default","","",456,{"inputs":[],"output":{"name":"r16g16unorm"}}],[11,"clone","","",456,{"inputs":[{"name":"r16g16unorm"}],"output":{"name":"r16g16unorm"}}],[11,"fmt","","",456,{"inputs":[{"name":"r16g16unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",456,{"inputs":[{"name":"r16g16unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",456,{"inputs":[{"name":"r16g16unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",456,{"inputs":[{"name":"r16g16unorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",456,{"inputs":[{"name":"r16g16unorm"}],"output":{"name":"bool"}}],[11,"default","","",457,{"inputs":[],"output":{"name":"r16g16snorm"}}],[11,"clone","","",457,{"inputs":[{"name":"r16g16snorm"}],"output":{"name":"r16g16snorm"}}],[11,"fmt","","",457,{"inputs":[{"name":"r16g16snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",457,{"inputs":[{"name":"r16g16snorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",457,{"inputs":[{"name":"r16g16snorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",457,{"inputs":[{"name":"r16g16snorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",457,{"inputs":[{"name":"r16g16snorm"}],"output":{"name":"bool"}}],[11,"default","","",458,{"inputs":[],"output":{"name":"r16g16uscaled"}}],[11,"clone","","",458,{"inputs":[{"name":"r16g16uscaled"}],"output":{"name":"r16g16uscaled"}}],[11,"fmt","","",458,{"inputs":[{"name":"r16g16uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",458,{"inputs":[{"name":"r16g16uscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",458,{"inputs":[{"name":"r16g16uscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",458,{"inputs":[{"name":"r16g16uscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",458,{"inputs":[{"name":"r16g16uscaled"}],"output":{"name":"bool"}}],[11,"default","","",459,{"inputs":[],"output":{"name":"r16g16sscaled"}}],[11,"clone","","",459,{"inputs":[{"name":"r16g16sscaled"}],"output":{"name":"r16g16sscaled"}}],[11,"fmt","","",459,{"inputs":[{"name":"r16g16sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",459,{"inputs":[{"name":"r16g16sscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",459,{"inputs":[{"name":"r16g16sscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",459,{"inputs":[{"name":"r16g16sscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",459,{"inputs":[{"name":"r16g16sscaled"}],"output":{"name":"bool"}}],[11,"default","","",460,{"inputs":[],"output":{"name":"r16g16uint"}}],[11,"clone","","",460,{"inputs":[{"name":"r16g16uint"}],"output":{"name":"r16g16uint"}}],[11,"fmt","","",460,{"inputs":[{"name":"r16g16uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",460,{"inputs":[{"name":"r16g16uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",460,{"inputs":[{"name":"r16g16uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",460,{"inputs":[{"name":"r16g16uint"}],"output":{"name":"bool"}}],[11,"default","","",461,{"inputs":[],"output":{"name":"r16g16sint"}}],[11,"clone","","",461,{"inputs":[{"name":"r16g16sint"}],"output":{"name":"r16g16sint"}}],[11,"fmt","","",461,{"inputs":[{"name":"r16g16sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",461,{"inputs":[{"name":"r16g16sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",461,{"inputs":[{"name":"r16g16sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",461,{"inputs":[{"name":"r16g16sint"}],"output":{"name":"bool"}}],[11,"default","","",462,{"inputs":[],"output":{"name":"r16g16sfloat"}}],[11,"clone","","",462,{"inputs":[{"name":"r16g16sfloat"}],"output":{"name":"r16g16sfloat"}}],[11,"fmt","","",462,{"inputs":[{"name":"r16g16sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",462,{"inputs":[{"name":"r16g16sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",462,{"inputs":[{"name":"r16g16sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",462,{"inputs":[{"name":"r16g16sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",462,{"inputs":[{"name":"r16g16sfloat"}],"output":{"name":"bool"}}],[11,"default","","",463,{"inputs":[],"output":{"name":"r16g16b16unorm"}}],[11,"clone","","",463,{"inputs":[{"name":"r16g16b16unorm"}],"output":{"name":"r16g16b16unorm"}}],[11,"fmt","","",463,{"inputs":[{"name":"r16g16b16unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",463,{"inputs":[{"name":"r16g16b16unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",463,{"inputs":[{"name":"r16g16b16unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",463,{"inputs":[{"name":"r16g16b16unorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",463,{"inputs":[{"name":"r16g16b16unorm"}],"output":{"name":"bool"}}],[11,"default","","",464,{"inputs":[],"output":{"name":"r16g16b16snorm"}}],[11,"clone","","",464,{"inputs":[{"name":"r16g16b16snorm"}],"output":{"name":"r16g16b16snorm"}}],[11,"fmt","","",464,{"inputs":[{"name":"r16g16b16snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",464,{"inputs":[{"name":"r16g16b16snorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",464,{"inputs":[{"name":"r16g16b16snorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",464,{"inputs":[{"name":"r16g16b16snorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",464,{"inputs":[{"name":"r16g16b16snorm"}],"output":{"name":"bool"}}],[11,"default","","",465,{"inputs":[],"output":{"name":"r16g16b16uscaled"}}],[11,"clone","","",465,{"inputs":[{"name":"r16g16b16uscaled"}],"output":{"name":"r16g16b16uscaled"}}],[11,"fmt","","",465,{"inputs":[{"name":"r16g16b16uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",465,{"inputs":[{"name":"r16g16b16uscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",465,{"inputs":[{"name":"r16g16b16uscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",465,{"inputs":[{"name":"r16g16b16uscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",465,{"inputs":[{"name":"r16g16b16uscaled"}],"output":{"name":"bool"}}],[11,"default","","",466,{"inputs":[],"output":{"name":"r16g16b16sscaled"}}],[11,"clone","","",466,{"inputs":[{"name":"r16g16b16sscaled"}],"output":{"name":"r16g16b16sscaled"}}],[11,"fmt","","",466,{"inputs":[{"name":"r16g16b16sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",466,{"inputs":[{"name":"r16g16b16sscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",466,{"inputs":[{"name":"r16g16b16sscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",466,{"inputs":[{"name":"r16g16b16sscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",466,{"inputs":[{"name":"r16g16b16sscaled"}],"output":{"name":"bool"}}],[11,"default","","",467,{"inputs":[],"output":{"name":"r16g16b16uint"}}],[11,"clone","","",467,{"inputs":[{"name":"r16g16b16uint"}],"output":{"name":"r16g16b16uint"}}],[11,"fmt","","",467,{"inputs":[{"name":"r16g16b16uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",467,{"inputs":[{"name":"r16g16b16uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",467,{"inputs":[{"name":"r16g16b16uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",467,{"inputs":[{"name":"r16g16b16uint"}],"output":{"name":"bool"}}],[11,"default","","",468,{"inputs":[],"output":{"name":"r16g16b16sint"}}],[11,"clone","","",468,{"inputs":[{"name":"r16g16b16sint"}],"output":{"name":"r16g16b16sint"}}],[11,"fmt","","",468,{"inputs":[{"name":"r16g16b16sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",468,{"inputs":[{"name":"r16g16b16sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",468,{"inputs":[{"name":"r16g16b16sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",468,{"inputs":[{"name":"r16g16b16sint"}],"output":{"name":"bool"}}],[11,"default","","",469,{"inputs":[],"output":{"name":"r16g16b16sfloat"}}],[11,"clone","","",469,{"inputs":[{"name":"r16g16b16sfloat"}],"output":{"name":"r16g16b16sfloat"}}],[11,"fmt","","",469,{"inputs":[{"name":"r16g16b16sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",469,{"inputs":[{"name":"r16g16b16sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",469,{"inputs":[{"name":"r16g16b16sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",469,{"inputs":[{"name":"r16g16b16sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",469,{"inputs":[{"name":"r16g16b16sfloat"}],"output":{"name":"bool"}}],[11,"default","","",470,{"inputs":[],"output":{"name":"r16g16b16a16unorm"}}],[11,"clone","","",470,{"inputs":[{"name":"r16g16b16a16unorm"}],"output":{"name":"r16g16b16a16unorm"}}],[11,"fmt","","",470,{"inputs":[{"name":"r16g16b16a16unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",470,{"inputs":[{"name":"r16g16b16a16unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",470,{"inputs":[{"name":"r16g16b16a16unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",470,{"inputs":[{"name":"r16g16b16a16unorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",470,{"inputs":[{"name":"r16g16b16a16unorm"}],"output":{"name":"bool"}}],[11,"default","","",471,{"inputs":[],"output":{"name":"r16g16b16a16snorm"}}],[11,"clone","","",471,{"inputs":[{"name":"r16g16b16a16snorm"}],"output":{"name":"r16g16b16a16snorm"}}],[11,"fmt","","",471,{"inputs":[{"name":"r16g16b16a16snorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",471,{"inputs":[{"name":"r16g16b16a16snorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",471,{"inputs":[{"name":"r16g16b16a16snorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",471,{"inputs":[{"name":"r16g16b16a16snorm"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",471,{"inputs":[{"name":"r16g16b16a16snorm"}],"output":{"name":"bool"}}],[11,"default","","",472,{"inputs":[],"output":{"name":"r16g16b16a16uscaled"}}],[11,"clone","","",472,{"inputs":[{"name":"r16g16b16a16uscaled"}],"output":{"name":"r16g16b16a16uscaled"}}],[11,"fmt","","",472,{"inputs":[{"name":"r16g16b16a16uscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",472,{"inputs":[{"name":"r16g16b16a16uscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",472,{"inputs":[{"name":"r16g16b16a16uscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",472,{"inputs":[{"name":"r16g16b16a16uscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",472,{"inputs":[{"name":"r16g16b16a16uscaled"}],"output":{"name":"bool"}}],[11,"default","","",473,{"inputs":[],"output":{"name":"r16g16b16a16sscaled"}}],[11,"clone","","",473,{"inputs":[{"name":"r16g16b16a16sscaled"}],"output":{"name":"r16g16b16a16sscaled"}}],[11,"fmt","","",473,{"inputs":[{"name":"r16g16b16a16sscaled"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",473,{"inputs":[{"name":"r16g16b16a16sscaled"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",473,{"inputs":[{"name":"r16g16b16a16sscaled"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",473,{"inputs":[{"name":"r16g16b16a16sscaled"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",473,{"inputs":[{"name":"r16g16b16a16sscaled"}],"output":{"name":"bool"}}],[11,"default","","",474,{"inputs":[],"output":{"name":"r16g16b16a16uint"}}],[11,"clone","","",474,{"inputs":[{"name":"r16g16b16a16uint"}],"output":{"name":"r16g16b16a16uint"}}],[11,"fmt","","",474,{"inputs":[{"name":"r16g16b16a16uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",474,{"inputs":[{"name":"r16g16b16a16uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",474,{"inputs":[{"name":"r16g16b16a16uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",474,{"inputs":[{"name":"r16g16b16a16uint"}],"output":{"name":"bool"}}],[11,"default","","",475,{"inputs":[],"output":{"name":"r16g16b16a16sint"}}],[11,"clone","","",475,{"inputs":[{"name":"r16g16b16a16sint"}],"output":{"name":"r16g16b16a16sint"}}],[11,"fmt","","",475,{"inputs":[{"name":"r16g16b16a16sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",475,{"inputs":[{"name":"r16g16b16a16sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",475,{"inputs":[{"name":"r16g16b16a16sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",475,{"inputs":[{"name":"r16g16b16a16sint"}],"output":{"name":"bool"}}],[11,"default","","",476,{"inputs":[],"output":{"name":"r16g16b16a16sfloat"}}],[11,"clone","","",476,{"inputs":[{"name":"r16g16b16a16sfloat"}],"output":{"name":"r16g16b16a16sfloat"}}],[11,"fmt","","",476,{"inputs":[{"name":"r16g16b16a16sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",476,{"inputs":[{"name":"r16g16b16a16sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",476,{"inputs":[{"name":"r16g16b16a16sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",476,{"inputs":[{"name":"r16g16b16a16sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",476,{"inputs":[{"name":"r16g16b16a16sfloat"}],"output":{"name":"bool"}}],[11,"default","","",477,{"inputs":[],"output":{"name":"r32uint"}}],[11,"clone","","",477,{"inputs":[{"name":"r32uint"}],"output":{"name":"r32uint"}}],[11,"fmt","","",477,{"inputs":[{"name":"r32uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",477,{"inputs":[{"name":"r32uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",477,{"inputs":[{"name":"r32uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",477,{"inputs":[{"name":"r32uint"}],"output":{"name":"bool"}}],[11,"default","","",478,{"inputs":[],"output":{"name":"r32sint"}}],[11,"clone","","",478,{"inputs":[{"name":"r32sint"}],"output":{"name":"r32sint"}}],[11,"fmt","","",478,{"inputs":[{"name":"r32sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",478,{"inputs":[{"name":"r32sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",478,{"inputs":[{"name":"r32sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",478,{"inputs":[{"name":"r32sint"}],"output":{"name":"bool"}}],[11,"default","","",479,{"inputs":[],"output":{"name":"r32sfloat"}}],[11,"clone","","",479,{"inputs":[{"name":"r32sfloat"}],"output":{"name":"r32sfloat"}}],[11,"fmt","","",479,{"inputs":[{"name":"r32sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",479,{"inputs":[{"name":"r32sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",479,{"inputs":[{"name":"r32sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",479,{"inputs":[{"name":"r32sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",479,{"inputs":[{"name":"r32sfloat"}],"output":{"name":"bool"}}],[11,"default","","",480,{"inputs":[],"output":{"name":"r32g32uint"}}],[11,"clone","","",480,{"inputs":[{"name":"r32g32uint"}],"output":{"name":"r32g32uint"}}],[11,"fmt","","",480,{"inputs":[{"name":"r32g32uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",480,{"inputs":[{"name":"r32g32uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",480,{"inputs":[{"name":"r32g32uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",480,{"inputs":[{"name":"r32g32uint"}],"output":{"name":"bool"}}],[11,"default","","",481,{"inputs":[],"output":{"name":"r32g32sint"}}],[11,"clone","","",481,{"inputs":[{"name":"r32g32sint"}],"output":{"name":"r32g32sint"}}],[11,"fmt","","",481,{"inputs":[{"name":"r32g32sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",481,{"inputs":[{"name":"r32g32sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",481,{"inputs":[{"name":"r32g32sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",481,{"inputs":[{"name":"r32g32sint"}],"output":{"name":"bool"}}],[11,"default","","",482,{"inputs":[],"output":{"name":"r32g32sfloat"}}],[11,"clone","","",482,{"inputs":[{"name":"r32g32sfloat"}],"output":{"name":"r32g32sfloat"}}],[11,"fmt","","",482,{"inputs":[{"name":"r32g32sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",482,{"inputs":[{"name":"r32g32sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",482,{"inputs":[{"name":"r32g32sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",482,{"inputs":[{"name":"r32g32sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",482,{"inputs":[{"name":"r32g32sfloat"}],"output":{"name":"bool"}}],[11,"default","","",483,{"inputs":[],"output":{"name":"r32g32b32uint"}}],[11,"clone","","",483,{"inputs":[{"name":"r32g32b32uint"}],"output":{"name":"r32g32b32uint"}}],[11,"fmt","","",483,{"inputs":[{"name":"r32g32b32uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",483,{"inputs":[{"name":"r32g32b32uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",483,{"inputs":[{"name":"r32g32b32uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",483,{"inputs":[{"name":"r32g32b32uint"}],"output":{"name":"bool"}}],[11,"default","","",484,{"inputs":[],"output":{"name":"r32g32b32sint"}}],[11,"clone","","",484,{"inputs":[{"name":"r32g32b32sint"}],"output":{"name":"r32g32b32sint"}}],[11,"fmt","","",484,{"inputs":[{"name":"r32g32b32sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",484,{"inputs":[{"name":"r32g32b32sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",484,{"inputs":[{"name":"r32g32b32sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",484,{"inputs":[{"name":"r32g32b32sint"}],"output":{"name":"bool"}}],[11,"default","","",485,{"inputs":[],"output":{"name":"r32g32b32sfloat"}}],[11,"clone","","",485,{"inputs":[{"name":"r32g32b32sfloat"}],"output":{"name":"r32g32b32sfloat"}}],[11,"fmt","","",485,{"inputs":[{"name":"r32g32b32sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",485,{"inputs":[{"name":"r32g32b32sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",485,{"inputs":[{"name":"r32g32b32sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",485,{"inputs":[{"name":"r32g32b32sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",485,{"inputs":[{"name":"r32g32b32sfloat"}],"output":{"name":"bool"}}],[11,"default","","",486,{"inputs":[],"output":{"name":"r32g32b32a32uint"}}],[11,"clone","","",486,{"inputs":[{"name":"r32g32b32a32uint"}],"output":{"name":"r32g32b32a32uint"}}],[11,"fmt","","",486,{"inputs":[{"name":"r32g32b32a32uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",486,{"inputs":[{"name":"r32g32b32a32uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",486,{"inputs":[{"name":"r32g32b32a32uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",486,{"inputs":[{"name":"r32g32b32a32uint"}],"output":{"name":"bool"}}],[11,"default","","",487,{"inputs":[],"output":{"name":"r32g32b32a32sint"}}],[11,"clone","","",487,{"inputs":[{"name":"r32g32b32a32sint"}],"output":{"name":"r32g32b32a32sint"}}],[11,"fmt","","",487,{"inputs":[{"name":"r32g32b32a32sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",487,{"inputs":[{"name":"r32g32b32a32sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",487,{"inputs":[{"name":"r32g32b32a32sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",487,{"inputs":[{"name":"r32g32b32a32sint"}],"output":{"name":"bool"}}],[11,"default","","",488,{"inputs":[],"output":{"name":"r32g32b32a32sfloat"}}],[11,"clone","","",488,{"inputs":[{"name":"r32g32b32a32sfloat"}],"output":{"name":"r32g32b32a32sfloat"}}],[11,"fmt","","",488,{"inputs":[{"name":"r32g32b32a32sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",488,{"inputs":[{"name":"r32g32b32a32sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",488,{"inputs":[{"name":"r32g32b32a32sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",488,{"inputs":[{"name":"r32g32b32a32sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",488,{"inputs":[{"name":"r32g32b32a32sfloat"}],"output":{"name":"bool"}}],[11,"default","","",489,{"inputs":[],"output":{"name":"r64uint"}}],[11,"clone","","",489,{"inputs":[{"name":"r64uint"}],"output":{"name":"r64uint"}}],[11,"fmt","","",489,{"inputs":[{"name":"r64uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",489,{"inputs":[{"name":"r64uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",489,{"inputs":[{"name":"r64uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",489,{"inputs":[{"name":"r64uint"}],"output":{"name":"bool"}}],[11,"default","","",490,{"inputs":[],"output":{"name":"r64sint"}}],[11,"clone","","",490,{"inputs":[{"name":"r64sint"}],"output":{"name":"r64sint"}}],[11,"fmt","","",490,{"inputs":[{"name":"r64sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",490,{"inputs":[{"name":"r64sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",490,{"inputs":[{"name":"r64sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",490,{"inputs":[{"name":"r64sint"}],"output":{"name":"bool"}}],[11,"default","","",491,{"inputs":[],"output":{"name":"r64sfloat"}}],[11,"clone","","",491,{"inputs":[{"name":"r64sfloat"}],"output":{"name":"r64sfloat"}}],[11,"fmt","","",491,{"inputs":[{"name":"r64sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",491,{"inputs":[{"name":"r64sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",491,{"inputs":[{"name":"r64sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",491,{"inputs":[{"name":"r64sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",491,{"inputs":[{"name":"r64sfloat"}],"output":{"name":"bool"}}],[11,"default","","",492,{"inputs":[],"output":{"name":"r64g64uint"}}],[11,"clone","","",492,{"inputs":[{"name":"r64g64uint"}],"output":{"name":"r64g64uint"}}],[11,"fmt","","",492,{"inputs":[{"name":"r64g64uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",492,{"inputs":[{"name":"r64g64uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",492,{"inputs":[{"name":"r64g64uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",492,{"inputs":[{"name":"r64g64uint"}],"output":{"name":"bool"}}],[11,"default","","",493,{"inputs":[],"output":{"name":"r64g64sint"}}],[11,"clone","","",493,{"inputs":[{"name":"r64g64sint"}],"output":{"name":"r64g64sint"}}],[11,"fmt","","",493,{"inputs":[{"name":"r64g64sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",493,{"inputs":[{"name":"r64g64sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",493,{"inputs":[{"name":"r64g64sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",493,{"inputs":[{"name":"r64g64sint"}],"output":{"name":"bool"}}],[11,"default","","",494,{"inputs":[],"output":{"name":"r64g64sfloat"}}],[11,"clone","","",494,{"inputs":[{"name":"r64g64sfloat"}],"output":{"name":"r64g64sfloat"}}],[11,"fmt","","",494,{"inputs":[{"name":"r64g64sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",494,{"inputs":[{"name":"r64g64sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",494,{"inputs":[{"name":"r64g64sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",494,{"inputs":[{"name":"r64g64sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",494,{"inputs":[{"name":"r64g64sfloat"}],"output":{"name":"bool"}}],[11,"default","","",495,{"inputs":[],"output":{"name":"r64g64b64uint"}}],[11,"clone","","",495,{"inputs":[{"name":"r64g64b64uint"}],"output":{"name":"r64g64b64uint"}}],[11,"fmt","","",495,{"inputs":[{"name":"r64g64b64uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",495,{"inputs":[{"name":"r64g64b64uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",495,{"inputs":[{"name":"r64g64b64uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",495,{"inputs":[{"name":"r64g64b64uint"}],"output":{"name":"bool"}}],[11,"default","","",496,{"inputs":[],"output":{"name":"r64g64b64sint"}}],[11,"clone","","",496,{"inputs":[{"name":"r64g64b64sint"}],"output":{"name":"r64g64b64sint"}}],[11,"fmt","","",496,{"inputs":[{"name":"r64g64b64sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",496,{"inputs":[{"name":"r64g64b64sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",496,{"inputs":[{"name":"r64g64b64sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",496,{"inputs":[{"name":"r64g64b64sint"}],"output":{"name":"bool"}}],[11,"default","","",497,{"inputs":[],"output":{"name":"r64g64b64sfloat"}}],[11,"clone","","",497,{"inputs":[{"name":"r64g64b64sfloat"}],"output":{"name":"r64g64b64sfloat"}}],[11,"fmt","","",497,{"inputs":[{"name":"r64g64b64sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",497,{"inputs":[{"name":"r64g64b64sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",497,{"inputs":[{"name":"r64g64b64sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",497,{"inputs":[{"name":"r64g64b64sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",497,{"inputs":[{"name":"r64g64b64sfloat"}],"output":{"name":"bool"}}],[11,"default","","",498,{"inputs":[],"output":{"name":"r64g64b64a64uint"}}],[11,"clone","","",498,{"inputs":[{"name":"r64g64b64a64uint"}],"output":{"name":"r64g64b64a64uint"}}],[11,"fmt","","",498,{"inputs":[{"name":"r64g64b64a64uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",498,{"inputs":[{"name":"r64g64b64a64uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",498,{"inputs":[{"name":"r64g64b64a64uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_uint","","",498,{"inputs":[{"name":"r64g64b64a64uint"}],"output":{"name":"bool"}}],[11,"default","","",499,{"inputs":[],"output":{"name":"r64g64b64a64sint"}}],[11,"clone","","",499,{"inputs":[{"name":"r64g64b64a64sint"}],"output":{"name":"r64g64b64a64sint"}}],[11,"fmt","","",499,{"inputs":[{"name":"r64g64b64a64sint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",499,{"inputs":[{"name":"r64g64b64a64sint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",499,{"inputs":[{"name":"r64g64b64a64sint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_sint","","",499,{"inputs":[{"name":"r64g64b64a64sint"}],"output":{"name":"bool"}}],[11,"default","","",500,{"inputs":[],"output":{"name":"r64g64b64a64sfloat"}}],[11,"clone","","",500,{"inputs":[{"name":"r64g64b64a64sfloat"}],"output":{"name":"r64g64b64a64sfloat"}}],[11,"fmt","","",500,{"inputs":[{"name":"r64g64b64a64sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",500,{"inputs":[{"name":"r64g64b64a64sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",500,{"inputs":[{"name":"r64g64b64a64sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",500,{"inputs":[{"name":"r64g64b64a64sfloat"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",500,{"inputs":[{"name":"r64g64b64a64sfloat"}],"output":{"name":"bool"}}],[11,"default","","",501,{"inputs":[],"output":{"name":"b10g11r11ufloatpack32"}}],[11,"clone","","",501,{"inputs":[{"name":"b10g11r11ufloatpack32"}],"output":{"name":"b10g11r11ufloatpack32"}}],[11,"fmt","","",501,{"inputs":[{"name":"b10g11r11ufloatpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",501,{"inputs":[{"name":"b10g11r11ufloatpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",501,{"inputs":[{"name":"b10g11r11ufloatpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",501,{"inputs":[{"name":"b10g11r11ufloatpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",501,{"inputs":[{"name":"b10g11r11ufloatpack32"}],"output":{"name":"bool"}}],[11,"default","","",502,{"inputs":[],"output":{"name":"e5b9g9r9ufloatpack32"}}],[11,"clone","","",502,{"inputs":[{"name":"e5b9g9r9ufloatpack32"}],"output":{"name":"e5b9g9r9ufloatpack32"}}],[11,"fmt","","",502,{"inputs":[{"name":"e5b9g9r9ufloatpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",502,{"inputs":[{"name":"e5b9g9r9ufloatpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",502,{"inputs":[{"name":"e5b9g9r9ufloatpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",502,{"inputs":[{"name":"e5b9g9r9ufloatpack32"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",502,{"inputs":[{"name":"e5b9g9r9ufloatpack32"}],"output":{"name":"bool"}}],[11,"default","","",503,{"inputs":[],"output":{"name":"d16unorm"}}],[11,"clone","","",503,{"inputs":[{"name":"d16unorm"}],"output":{"name":"d16unorm"}}],[11,"fmt","","",503,{"inputs":[{"name":"d16unorm"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",503,{"inputs":[{"name":"d16unorm"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",503,{"inputs":[{"name":"d16unorm"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_depth","","",503,{"inputs":[{"name":"d16unorm"}],"output":{"name":"bool"}}],[11,"default","","",504,{"inputs":[],"output":{"name":"x8_d24unormpack32"}}],[11,"clone","","",504,{"inputs":[{"name":"x8_d24unormpack32"}],"output":{"name":"x8_d24unormpack32"}}],[11,"fmt","","",504,{"inputs":[{"name":"x8_d24unormpack32"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",504,{"inputs":[{"name":"x8_d24unormpack32"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",504,{"inputs":[{"name":"x8_d24unormpack32"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_depth","","",504,{"inputs":[{"name":"x8_d24unormpack32"}],"output":{"name":"bool"}}],[11,"default","","",505,{"inputs":[],"output":{"name":"d32sfloat"}}],[11,"clone","","",505,{"inputs":[{"name":"d32sfloat"}],"output":{"name":"d32sfloat"}}],[11,"fmt","","",505,{"inputs":[{"name":"d32sfloat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",505,{"inputs":[{"name":"d32sfloat"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",505,{"inputs":[{"name":"d32sfloat"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_depth","","",505,{"inputs":[{"name":"d32sfloat"}],"output":{"name":"bool"}}],[11,"default","","",506,{"inputs":[],"output":{"name":"s8uint"}}],[11,"clone","","",506,{"inputs":[{"name":"s8uint"}],"output":{"name":"s8uint"}}],[11,"fmt","","",506,{"inputs":[{"name":"s8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",506,{"inputs":[{"name":"s8uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",506,{"inputs":[{"name":"s8uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_stencil","","",506,{"inputs":[{"name":"s8uint"}],"output":{"name":"bool"}}],[11,"default","","",507,{"inputs":[],"output":{"name":"d16unorm_s8uint"}}],[11,"clone","","",507,{"inputs":[{"name":"d16unorm_s8uint"}],"output":{"name":"d16unorm_s8uint"}}],[11,"fmt","","",507,{"inputs":[{"name":"d16unorm_s8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",507,{"inputs":[{"name":"d16unorm_s8uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",507,{"inputs":[{"name":"d16unorm_s8uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_depth_stencil","","",507,{"inputs":[{"name":"d16unorm_s8uint"}],"output":{"name":"bool"}}],[11,"default","","",508,{"inputs":[],"output":{"name":"d24unorm_s8uint"}}],[11,"clone","","",508,{"inputs":[{"name":"d24unorm_s8uint"}],"output":{"name":"d24unorm_s8uint"}}],[11,"fmt","","",508,{"inputs":[{"name":"d24unorm_s8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",508,{"inputs":[{"name":"d24unorm_s8uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",508,{"inputs":[{"name":"d24unorm_s8uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_depth_stencil","","",508,{"inputs":[{"name":"d24unorm_s8uint"}],"output":{"name":"bool"}}],[11,"default","","",509,{"inputs":[],"output":{"name":"d32sfloat_s8uint"}}],[11,"clone","","",509,{"inputs":[{"name":"d32sfloat_s8uint"}],"output":{"name":"d32sfloat_s8uint"}}],[11,"fmt","","",509,{"inputs":[{"name":"d32sfloat_s8uint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",509,{"inputs":[{"name":"d32sfloat_s8uint"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",509,{"inputs":[{"name":"d32sfloat_s8uint"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_depth_stencil","","",509,{"inputs":[{"name":"d32sfloat_s8uint"}],"output":{"name":"bool"}}],[11,"default","","",510,{"inputs":[],"output":{"name":"bc1_rgbunormblock"}}],[11,"clone","","",510,{"inputs":[{"name":"bc1_rgbunormblock"}],"output":{"name":"bc1_rgbunormblock"}}],[11,"fmt","","",510,{"inputs":[{"name":"bc1_rgbunormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",510,{"inputs":[{"name":"bc1_rgbunormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",510,{"inputs":[{"name":"bc1_rgbunormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",510,{"inputs":[{"name":"bc1_rgbunormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",510,{"inputs":[{"name":"bc1_rgbunormblock"}],"output":{"name":"bool"}}],[11,"default","","",511,{"inputs":[],"output":{"name":"bc1_rgbsrgbblock"}}],[11,"clone","","",511,{"inputs":[{"name":"bc1_rgbsrgbblock"}],"output":{"name":"bc1_rgbsrgbblock"}}],[11,"fmt","","",511,{"inputs":[{"name":"bc1_rgbsrgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",511,{"inputs":[{"name":"bc1_rgbsrgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",511,{"inputs":[{"name":"bc1_rgbsrgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",511,{"inputs":[{"name":"bc1_rgbsrgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",511,{"inputs":[{"name":"bc1_rgbsrgbblock"}],"output":{"name":"bool"}}],[11,"default","","",512,{"inputs":[],"output":{"name":"bc1_rgbaunormblock"}}],[11,"clone","","",512,{"inputs":[{"name":"bc1_rgbaunormblock"}],"output":{"name":"bc1_rgbaunormblock"}}],[11,"fmt","","",512,{"inputs":[{"name":"bc1_rgbaunormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",512,{"inputs":[{"name":"bc1_rgbaunormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",512,{"inputs":[{"name":"bc1_rgbaunormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",512,{"inputs":[{"name":"bc1_rgbaunormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",512,{"inputs":[{"name":"bc1_rgbaunormblock"}],"output":{"name":"bool"}}],[11,"default","","",513,{"inputs":[],"output":{"name":"bc1_rgbasrgbblock"}}],[11,"clone","","",513,{"inputs":[{"name":"bc1_rgbasrgbblock"}],"output":{"name":"bc1_rgbasrgbblock"}}],[11,"fmt","","",513,{"inputs":[{"name":"bc1_rgbasrgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",513,{"inputs":[{"name":"bc1_rgbasrgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",513,{"inputs":[{"name":"bc1_rgbasrgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",513,{"inputs":[{"name":"bc1_rgbasrgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",513,{"inputs":[{"name":"bc1_rgbasrgbblock"}],"output":{"name":"bool"}}],[11,"default","","",514,{"inputs":[],"output":{"name":"bc2unormblock"}}],[11,"clone","","",514,{"inputs":[{"name":"bc2unormblock"}],"output":{"name":"bc2unormblock"}}],[11,"fmt","","",514,{"inputs":[{"name":"bc2unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",514,{"inputs":[{"name":"bc2unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",514,{"inputs":[{"name":"bc2unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",514,{"inputs":[{"name":"bc2unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",514,{"inputs":[{"name":"bc2unormblock"}],"output":{"name":"bool"}}],[11,"default","","",515,{"inputs":[],"output":{"name":"bc2srgbblock"}}],[11,"clone","","",515,{"inputs":[{"name":"bc2srgbblock"}],"output":{"name":"bc2srgbblock"}}],[11,"fmt","","",515,{"inputs":[{"name":"bc2srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",515,{"inputs":[{"name":"bc2srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",515,{"inputs":[{"name":"bc2srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",515,{"inputs":[{"name":"bc2srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",515,{"inputs":[{"name":"bc2srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",516,{"inputs":[],"output":{"name":"bc3unormblock"}}],[11,"clone","","",516,{"inputs":[{"name":"bc3unormblock"}],"output":{"name":"bc3unormblock"}}],[11,"fmt","","",516,{"inputs":[{"name":"bc3unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",516,{"inputs":[{"name":"bc3unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",516,{"inputs":[{"name":"bc3unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",516,{"inputs":[{"name":"bc3unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",516,{"inputs":[{"name":"bc3unormblock"}],"output":{"name":"bool"}}],[11,"default","","",517,{"inputs":[],"output":{"name":"bc3srgbblock"}}],[11,"clone","","",517,{"inputs":[{"name":"bc3srgbblock"}],"output":{"name":"bc3srgbblock"}}],[11,"fmt","","",517,{"inputs":[{"name":"bc3srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",517,{"inputs":[{"name":"bc3srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",517,{"inputs":[{"name":"bc3srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",517,{"inputs":[{"name":"bc3srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",517,{"inputs":[{"name":"bc3srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",518,{"inputs":[],"output":{"name":"bc4unormblock"}}],[11,"clone","","",518,{"inputs":[{"name":"bc4unormblock"}],"output":{"name":"bc4unormblock"}}],[11,"fmt","","",518,{"inputs":[{"name":"bc4unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",518,{"inputs":[{"name":"bc4unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",518,{"inputs":[{"name":"bc4unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",518,{"inputs":[{"name":"bc4unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",518,{"inputs":[{"name":"bc4unormblock"}],"output":{"name":"bool"}}],[11,"default","","",519,{"inputs":[],"output":{"name":"bc4snormblock"}}],[11,"clone","","",519,{"inputs":[{"name":"bc4snormblock"}],"output":{"name":"bc4snormblock"}}],[11,"fmt","","",519,{"inputs":[{"name":"bc4snormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",519,{"inputs":[{"name":"bc4snormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",519,{"inputs":[{"name":"bc4snormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",519,{"inputs":[{"name":"bc4snormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",519,{"inputs":[{"name":"bc4snormblock"}],"output":{"name":"bool"}}],[11,"default","","",520,{"inputs":[],"output":{"name":"bc5unormblock"}}],[11,"clone","","",520,{"inputs":[{"name":"bc5unormblock"}],"output":{"name":"bc5unormblock"}}],[11,"fmt","","",520,{"inputs":[{"name":"bc5unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",520,{"inputs":[{"name":"bc5unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",520,{"inputs":[{"name":"bc5unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",520,{"inputs":[{"name":"bc5unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",520,{"inputs":[{"name":"bc5unormblock"}],"output":{"name":"bool"}}],[11,"default","","",521,{"inputs":[],"output":{"name":"bc5snormblock"}}],[11,"clone","","",521,{"inputs":[{"name":"bc5snormblock"}],"output":{"name":"bc5snormblock"}}],[11,"fmt","","",521,{"inputs":[{"name":"bc5snormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",521,{"inputs":[{"name":"bc5snormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",521,{"inputs":[{"name":"bc5snormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",521,{"inputs":[{"name":"bc5snormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",521,{"inputs":[{"name":"bc5snormblock"}],"output":{"name":"bool"}}],[11,"default","","",522,{"inputs":[],"output":{"name":"bc6hufloatblock"}}],[11,"clone","","",522,{"inputs":[{"name":"bc6hufloatblock"}],"output":{"name":"bc6hufloatblock"}}],[11,"fmt","","",522,{"inputs":[{"name":"bc6hufloatblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",522,{"inputs":[{"name":"bc6hufloatblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",522,{"inputs":[{"name":"bc6hufloatblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",522,{"inputs":[{"name":"bc6hufloatblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",522,{"inputs":[{"name":"bc6hufloatblock"}],"output":{"name":"bool"}}],[11,"default","","",523,{"inputs":[],"output":{"name":"bc6hsfloatblock"}}],[11,"clone","","",523,{"inputs":[{"name":"bc6hsfloatblock"}],"output":{"name":"bc6hsfloatblock"}}],[11,"fmt","","",523,{"inputs":[{"name":"bc6hsfloatblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",523,{"inputs":[{"name":"bc6hsfloatblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",523,{"inputs":[{"name":"bc6hsfloatblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",523,{"inputs":[{"name":"bc6hsfloatblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",523,{"inputs":[{"name":"bc6hsfloatblock"}],"output":{"name":"bool"}}],[11,"default","","",524,{"inputs":[],"output":{"name":"bc7unormblock"}}],[11,"clone","","",524,{"inputs":[{"name":"bc7unormblock"}],"output":{"name":"bc7unormblock"}}],[11,"fmt","","",524,{"inputs":[{"name":"bc7unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",524,{"inputs":[{"name":"bc7unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",524,{"inputs":[{"name":"bc7unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",524,{"inputs":[{"name":"bc7unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",524,{"inputs":[{"name":"bc7unormblock"}],"output":{"name":"bool"}}],[11,"default","","",525,{"inputs":[],"output":{"name":"bc7srgbblock"}}],[11,"clone","","",525,{"inputs":[{"name":"bc7srgbblock"}],"output":{"name":"bc7srgbblock"}}],[11,"fmt","","",525,{"inputs":[{"name":"bc7srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",525,{"inputs":[{"name":"bc7srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",525,{"inputs":[{"name":"bc7srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",525,{"inputs":[{"name":"bc7srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",525,{"inputs":[{"name":"bc7srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",526,{"inputs":[],"output":{"name":"etc2_r8g8b8unormblock"}}],[11,"clone","","",526,{"inputs":[{"name":"etc2_r8g8b8unormblock"}],"output":{"name":"etc2_r8g8b8unormblock"}}],[11,"fmt","","",526,{"inputs":[{"name":"etc2_r8g8b8unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",526,{"inputs":[{"name":"etc2_r8g8b8unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",526,{"inputs":[{"name":"etc2_r8g8b8unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",526,{"inputs":[{"name":"etc2_r8g8b8unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",526,{"inputs":[{"name":"etc2_r8g8b8unormblock"}],"output":{"name":"bool"}}],[11,"default","","",527,{"inputs":[],"output":{"name":"etc2_r8g8b8srgbblock"}}],[11,"clone","","",527,{"inputs":[{"name":"etc2_r8g8b8srgbblock"}],"output":{"name":"etc2_r8g8b8srgbblock"}}],[11,"fmt","","",527,{"inputs":[{"name":"etc2_r8g8b8srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",527,{"inputs":[{"name":"etc2_r8g8b8srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",527,{"inputs":[{"name":"etc2_r8g8b8srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",527,{"inputs":[{"name":"etc2_r8g8b8srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",527,{"inputs":[{"name":"etc2_r8g8b8srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",528,{"inputs":[],"output":{"name":"etc2_r8g8b8a1unormblock"}}],[11,"clone","","",528,{"inputs":[{"name":"etc2_r8g8b8a1unormblock"}],"output":{"name":"etc2_r8g8b8a1unormblock"}}],[11,"fmt","","",528,{"inputs":[{"name":"etc2_r8g8b8a1unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",528,{"inputs":[{"name":"etc2_r8g8b8a1unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",528,{"inputs":[{"name":"etc2_r8g8b8a1unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",528,{"inputs":[{"name":"etc2_r8g8b8a1unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",528,{"inputs":[{"name":"etc2_r8g8b8a1unormblock"}],"output":{"name":"bool"}}],[11,"default","","",529,{"inputs":[],"output":{"name":"etc2_r8g8b8a1srgbblock"}}],[11,"clone","","",529,{"inputs":[{"name":"etc2_r8g8b8a1srgbblock"}],"output":{"name":"etc2_r8g8b8a1srgbblock"}}],[11,"fmt","","",529,{"inputs":[{"name":"etc2_r8g8b8a1srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",529,{"inputs":[{"name":"etc2_r8g8b8a1srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",529,{"inputs":[{"name":"etc2_r8g8b8a1srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",529,{"inputs":[{"name":"etc2_r8g8b8a1srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",529,{"inputs":[{"name":"etc2_r8g8b8a1srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",530,{"inputs":[],"output":{"name":"etc2_r8g8b8a8unormblock"}}],[11,"clone","","",530,{"inputs":[{"name":"etc2_r8g8b8a8unormblock"}],"output":{"name":"etc2_r8g8b8a8unormblock"}}],[11,"fmt","","",530,{"inputs":[{"name":"etc2_r8g8b8a8unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",530,{"inputs":[{"name":"etc2_r8g8b8a8unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",530,{"inputs":[{"name":"etc2_r8g8b8a8unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",530,{"inputs":[{"name":"etc2_r8g8b8a8unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",530,{"inputs":[{"name":"etc2_r8g8b8a8unormblock"}],"output":{"name":"bool"}}],[11,"default","","",531,{"inputs":[],"output":{"name":"etc2_r8g8b8a8srgbblock"}}],[11,"clone","","",531,{"inputs":[{"name":"etc2_r8g8b8a8srgbblock"}],"output":{"name":"etc2_r8g8b8a8srgbblock"}}],[11,"fmt","","",531,{"inputs":[{"name":"etc2_r8g8b8a8srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",531,{"inputs":[{"name":"etc2_r8g8b8a8srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",531,{"inputs":[{"name":"etc2_r8g8b8a8srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",531,{"inputs":[{"name":"etc2_r8g8b8a8srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",531,{"inputs":[{"name":"etc2_r8g8b8a8srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",532,{"inputs":[],"output":{"name":"eac_r11unormblock"}}],[11,"clone","","",532,{"inputs":[{"name":"eac_r11unormblock"}],"output":{"name":"eac_r11unormblock"}}],[11,"fmt","","",532,{"inputs":[{"name":"eac_r11unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",532,{"inputs":[{"name":"eac_r11unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",532,{"inputs":[{"name":"eac_r11unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",532,{"inputs":[{"name":"eac_r11unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",532,{"inputs":[{"name":"eac_r11unormblock"}],"output":{"name":"bool"}}],[11,"default","","",533,{"inputs":[],"output":{"name":"eac_r11snormblock"}}],[11,"clone","","",533,{"inputs":[{"name":"eac_r11snormblock"}],"output":{"name":"eac_r11snormblock"}}],[11,"fmt","","",533,{"inputs":[{"name":"eac_r11snormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",533,{"inputs":[{"name":"eac_r11snormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",533,{"inputs":[{"name":"eac_r11snormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",533,{"inputs":[{"name":"eac_r11snormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",533,{"inputs":[{"name":"eac_r11snormblock"}],"output":{"name":"bool"}}],[11,"default","","",534,{"inputs":[],"output":{"name":"eac_r11g11unormblock"}}],[11,"clone","","",534,{"inputs":[{"name":"eac_r11g11unormblock"}],"output":{"name":"eac_r11g11unormblock"}}],[11,"fmt","","",534,{"inputs":[{"name":"eac_r11g11unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",534,{"inputs":[{"name":"eac_r11g11unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",534,{"inputs":[{"name":"eac_r11g11unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",534,{"inputs":[{"name":"eac_r11g11unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",534,{"inputs":[{"name":"eac_r11g11unormblock"}],"output":{"name":"bool"}}],[11,"default","","",535,{"inputs":[],"output":{"name":"eac_r11g11snormblock"}}],[11,"clone","","",535,{"inputs":[{"name":"eac_r11g11snormblock"}],"output":{"name":"eac_r11g11snormblock"}}],[11,"fmt","","",535,{"inputs":[{"name":"eac_r11g11snormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",535,{"inputs":[{"name":"eac_r11g11snormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",535,{"inputs":[{"name":"eac_r11g11snormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",535,{"inputs":[{"name":"eac_r11g11snormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",535,{"inputs":[{"name":"eac_r11g11snormblock"}],"output":{"name":"bool"}}],[11,"default","","",536,{"inputs":[],"output":{"name":"astc_4x4unormblock"}}],[11,"clone","","",536,{"inputs":[{"name":"astc_4x4unormblock"}],"output":{"name":"astc_4x4unormblock"}}],[11,"fmt","","",536,{"inputs":[{"name":"astc_4x4unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",536,{"inputs":[{"name":"astc_4x4unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",536,{"inputs":[{"name":"astc_4x4unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",536,{"inputs":[{"name":"astc_4x4unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",536,{"inputs":[{"name":"astc_4x4unormblock"}],"output":{"name":"bool"}}],[11,"default","","",537,{"inputs":[],"output":{"name":"astc_4x4srgbblock"}}],[11,"clone","","",537,{"inputs":[{"name":"astc_4x4srgbblock"}],"output":{"name":"astc_4x4srgbblock"}}],[11,"fmt","","",537,{"inputs":[{"name":"astc_4x4srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",537,{"inputs":[{"name":"astc_4x4srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",537,{"inputs":[{"name":"astc_4x4srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",537,{"inputs":[{"name":"astc_4x4srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",537,{"inputs":[{"name":"astc_4x4srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",538,{"inputs":[],"output":{"name":"astc_5x4unormblock"}}],[11,"clone","","",538,{"inputs":[{"name":"astc_5x4unormblock"}],"output":{"name":"astc_5x4unormblock"}}],[11,"fmt","","",538,{"inputs":[{"name":"astc_5x4unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",538,{"inputs":[{"name":"astc_5x4unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",538,{"inputs":[{"name":"astc_5x4unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",538,{"inputs":[{"name":"astc_5x4unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",538,{"inputs":[{"name":"astc_5x4unormblock"}],"output":{"name":"bool"}}],[11,"default","","",539,{"inputs":[],"output":{"name":"astc_5x4srgbblock"}}],[11,"clone","","",539,{"inputs":[{"name":"astc_5x4srgbblock"}],"output":{"name":"astc_5x4srgbblock"}}],[11,"fmt","","",539,{"inputs":[{"name":"astc_5x4srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",539,{"inputs":[{"name":"astc_5x4srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",539,{"inputs":[{"name":"astc_5x4srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",539,{"inputs":[{"name":"astc_5x4srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",539,{"inputs":[{"name":"astc_5x4srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",540,{"inputs":[],"output":{"name":"astc_5x5unormblock"}}],[11,"clone","","",540,{"inputs":[{"name":"astc_5x5unormblock"}],"output":{"name":"astc_5x5unormblock"}}],[11,"fmt","","",540,{"inputs":[{"name":"astc_5x5unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",540,{"inputs":[{"name":"astc_5x5unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",540,{"inputs":[{"name":"astc_5x5unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",540,{"inputs":[{"name":"astc_5x5unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",540,{"inputs":[{"name":"astc_5x5unormblock"}],"output":{"name":"bool"}}],[11,"default","","",541,{"inputs":[],"output":{"name":"astc_5x5srgbblock"}}],[11,"clone","","",541,{"inputs":[{"name":"astc_5x5srgbblock"}],"output":{"name":"astc_5x5srgbblock"}}],[11,"fmt","","",541,{"inputs":[{"name":"astc_5x5srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",541,{"inputs":[{"name":"astc_5x5srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",541,{"inputs":[{"name":"astc_5x5srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",541,{"inputs":[{"name":"astc_5x5srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",541,{"inputs":[{"name":"astc_5x5srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",542,{"inputs":[],"output":{"name":"astc_6x5unormblock"}}],[11,"clone","","",542,{"inputs":[{"name":"astc_6x5unormblock"}],"output":{"name":"astc_6x5unormblock"}}],[11,"fmt","","",542,{"inputs":[{"name":"astc_6x5unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",542,{"inputs":[{"name":"astc_6x5unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",542,{"inputs":[{"name":"astc_6x5unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",542,{"inputs":[{"name":"astc_6x5unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",542,{"inputs":[{"name":"astc_6x5unormblock"}],"output":{"name":"bool"}}],[11,"default","","",543,{"inputs":[],"output":{"name":"astc_6x5srgbblock"}}],[11,"clone","","",543,{"inputs":[{"name":"astc_6x5srgbblock"}],"output":{"name":"astc_6x5srgbblock"}}],[11,"fmt","","",543,{"inputs":[{"name":"astc_6x5srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",543,{"inputs":[{"name":"astc_6x5srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",543,{"inputs":[{"name":"astc_6x5srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",543,{"inputs":[{"name":"astc_6x5srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",543,{"inputs":[{"name":"astc_6x5srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",544,{"inputs":[],"output":{"name":"astc_6x6unormblock"}}],[11,"clone","","",544,{"inputs":[{"name":"astc_6x6unormblock"}],"output":{"name":"astc_6x6unormblock"}}],[11,"fmt","","",544,{"inputs":[{"name":"astc_6x6unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",544,{"inputs":[{"name":"astc_6x6unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",544,{"inputs":[{"name":"astc_6x6unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",544,{"inputs":[{"name":"astc_6x6unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",544,{"inputs":[{"name":"astc_6x6unormblock"}],"output":{"name":"bool"}}],[11,"default","","",545,{"inputs":[],"output":{"name":"astc_6x6srgbblock"}}],[11,"clone","","",545,{"inputs":[{"name":"astc_6x6srgbblock"}],"output":{"name":"astc_6x6srgbblock"}}],[11,"fmt","","",545,{"inputs":[{"name":"astc_6x6srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",545,{"inputs":[{"name":"astc_6x6srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",545,{"inputs":[{"name":"astc_6x6srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",545,{"inputs":[{"name":"astc_6x6srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",545,{"inputs":[{"name":"astc_6x6srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",546,{"inputs":[],"output":{"name":"astc_8x5unormblock"}}],[11,"clone","","",546,{"inputs":[{"name":"astc_8x5unormblock"}],"output":{"name":"astc_8x5unormblock"}}],[11,"fmt","","",546,{"inputs":[{"name":"astc_8x5unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",546,{"inputs":[{"name":"astc_8x5unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",546,{"inputs":[{"name":"astc_8x5unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",546,{"inputs":[{"name":"astc_8x5unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",546,{"inputs":[{"name":"astc_8x5unormblock"}],"output":{"name":"bool"}}],[11,"default","","",547,{"inputs":[],"output":{"name":"astc_8x5srgbblock"}}],[11,"clone","","",547,{"inputs":[{"name":"astc_8x5srgbblock"}],"output":{"name":"astc_8x5srgbblock"}}],[11,"fmt","","",547,{"inputs":[{"name":"astc_8x5srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",547,{"inputs":[{"name":"astc_8x5srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",547,{"inputs":[{"name":"astc_8x5srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",547,{"inputs":[{"name":"astc_8x5srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",547,{"inputs":[{"name":"astc_8x5srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",548,{"inputs":[],"output":{"name":"astc_8x6unormblock"}}],[11,"clone","","",548,{"inputs":[{"name":"astc_8x6unormblock"}],"output":{"name":"astc_8x6unormblock"}}],[11,"fmt","","",548,{"inputs":[{"name":"astc_8x6unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",548,{"inputs":[{"name":"astc_8x6unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",548,{"inputs":[{"name":"astc_8x6unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",548,{"inputs":[{"name":"astc_8x6unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",548,{"inputs":[{"name":"astc_8x6unormblock"}],"output":{"name":"bool"}}],[11,"default","","",549,{"inputs":[],"output":{"name":"astc_8x6srgbblock"}}],[11,"clone","","",549,{"inputs":[{"name":"astc_8x6srgbblock"}],"output":{"name":"astc_8x6srgbblock"}}],[11,"fmt","","",549,{"inputs":[{"name":"astc_8x6srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",549,{"inputs":[{"name":"astc_8x6srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",549,{"inputs":[{"name":"astc_8x6srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",549,{"inputs":[{"name":"astc_8x6srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",549,{"inputs":[{"name":"astc_8x6srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",550,{"inputs":[],"output":{"name":"astc_8x8unormblock"}}],[11,"clone","","",550,{"inputs":[{"name":"astc_8x8unormblock"}],"output":{"name":"astc_8x8unormblock"}}],[11,"fmt","","",550,{"inputs":[{"name":"astc_8x8unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",550,{"inputs":[{"name":"astc_8x8unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",550,{"inputs":[{"name":"astc_8x8unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",550,{"inputs":[{"name":"astc_8x8unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",550,{"inputs":[{"name":"astc_8x8unormblock"}],"output":{"name":"bool"}}],[11,"default","","",551,{"inputs":[],"output":{"name":"astc_8x8srgbblock"}}],[11,"clone","","",551,{"inputs":[{"name":"astc_8x8srgbblock"}],"output":{"name":"astc_8x8srgbblock"}}],[11,"fmt","","",551,{"inputs":[{"name":"astc_8x8srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",551,{"inputs":[{"name":"astc_8x8srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",551,{"inputs":[{"name":"astc_8x8srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",551,{"inputs":[{"name":"astc_8x8srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",551,{"inputs":[{"name":"astc_8x8srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",552,{"inputs":[],"output":{"name":"astc_10x5unormblock"}}],[11,"clone","","",552,{"inputs":[{"name":"astc_10x5unormblock"}],"output":{"name":"astc_10x5unormblock"}}],[11,"fmt","","",552,{"inputs":[{"name":"astc_10x5unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",552,{"inputs":[{"name":"astc_10x5unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",552,{"inputs":[{"name":"astc_10x5unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",552,{"inputs":[{"name":"astc_10x5unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",552,{"inputs":[{"name":"astc_10x5unormblock"}],"output":{"name":"bool"}}],[11,"default","","",553,{"inputs":[],"output":{"name":"astc_10x5srgbblock"}}],[11,"clone","","",553,{"inputs":[{"name":"astc_10x5srgbblock"}],"output":{"name":"astc_10x5srgbblock"}}],[11,"fmt","","",553,{"inputs":[{"name":"astc_10x5srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",553,{"inputs":[{"name":"astc_10x5srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",553,{"inputs":[{"name":"astc_10x5srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",553,{"inputs":[{"name":"astc_10x5srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",553,{"inputs":[{"name":"astc_10x5srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",554,{"inputs":[],"output":{"name":"astc_10x6unormblock"}}],[11,"clone","","",554,{"inputs":[{"name":"astc_10x6unormblock"}],"output":{"name":"astc_10x6unormblock"}}],[11,"fmt","","",554,{"inputs":[{"name":"astc_10x6unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",554,{"inputs":[{"name":"astc_10x6unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",554,{"inputs":[{"name":"astc_10x6unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",554,{"inputs":[{"name":"astc_10x6unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",554,{"inputs":[{"name":"astc_10x6unormblock"}],"output":{"name":"bool"}}],[11,"default","","",555,{"inputs":[],"output":{"name":"astc_10x6srgbblock"}}],[11,"clone","","",555,{"inputs":[{"name":"astc_10x6srgbblock"}],"output":{"name":"astc_10x6srgbblock"}}],[11,"fmt","","",555,{"inputs":[{"name":"astc_10x6srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",555,{"inputs":[{"name":"astc_10x6srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",555,{"inputs":[{"name":"astc_10x6srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",555,{"inputs":[{"name":"astc_10x6srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",555,{"inputs":[{"name":"astc_10x6srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",556,{"inputs":[],"output":{"name":"astc_10x8unormblock"}}],[11,"clone","","",556,{"inputs":[{"name":"astc_10x8unormblock"}],"output":{"name":"astc_10x8unormblock"}}],[11,"fmt","","",556,{"inputs":[{"name":"astc_10x8unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",556,{"inputs":[{"name":"astc_10x8unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",556,{"inputs":[{"name":"astc_10x8unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",556,{"inputs":[{"name":"astc_10x8unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",556,{"inputs":[{"name":"astc_10x8unormblock"}],"output":{"name":"bool"}}],[11,"default","","",557,{"inputs":[],"output":{"name":"astc_10x8srgbblock"}}],[11,"clone","","",557,{"inputs":[{"name":"astc_10x8srgbblock"}],"output":{"name":"astc_10x8srgbblock"}}],[11,"fmt","","",557,{"inputs":[{"name":"astc_10x8srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",557,{"inputs":[{"name":"astc_10x8srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",557,{"inputs":[{"name":"astc_10x8srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",557,{"inputs":[{"name":"astc_10x8srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",557,{"inputs":[{"name":"astc_10x8srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",558,{"inputs":[],"output":{"name":"astc_10x10unormblock"}}],[11,"clone","","",558,{"inputs":[{"name":"astc_10x10unormblock"}],"output":{"name":"astc_10x10unormblock"}}],[11,"fmt","","",558,{"inputs":[{"name":"astc_10x10unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",558,{"inputs":[{"name":"astc_10x10unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",558,{"inputs":[{"name":"astc_10x10unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",558,{"inputs":[{"name":"astc_10x10unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",558,{"inputs":[{"name":"astc_10x10unormblock"}],"output":{"name":"bool"}}],[11,"default","","",559,{"inputs":[],"output":{"name":"astc_10x10srgbblock"}}],[11,"clone","","",559,{"inputs":[{"name":"astc_10x10srgbblock"}],"output":{"name":"astc_10x10srgbblock"}}],[11,"fmt","","",559,{"inputs":[{"name":"astc_10x10srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",559,{"inputs":[{"name":"astc_10x10srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",559,{"inputs":[{"name":"astc_10x10srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",559,{"inputs":[{"name":"astc_10x10srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",559,{"inputs":[{"name":"astc_10x10srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",560,{"inputs":[],"output":{"name":"astc_12x10unormblock"}}],[11,"clone","","",560,{"inputs":[{"name":"astc_12x10unormblock"}],"output":{"name":"astc_12x10unormblock"}}],[11,"fmt","","",560,{"inputs":[{"name":"astc_12x10unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",560,{"inputs":[{"name":"astc_12x10unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",560,{"inputs":[{"name":"astc_12x10unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",560,{"inputs":[{"name":"astc_12x10unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",560,{"inputs":[{"name":"astc_12x10unormblock"}],"output":{"name":"bool"}}],[11,"default","","",561,{"inputs":[],"output":{"name":"astc_12x10srgbblock"}}],[11,"clone","","",561,{"inputs":[{"name":"astc_12x10srgbblock"}],"output":{"name":"astc_12x10srgbblock"}}],[11,"fmt","","",561,{"inputs":[{"name":"astc_12x10srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",561,{"inputs":[{"name":"astc_12x10srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",561,{"inputs":[{"name":"astc_12x10srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",561,{"inputs":[{"name":"astc_12x10srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",561,{"inputs":[{"name":"astc_12x10srgbblock"}],"output":{"name":"bool"}}],[11,"default","","",562,{"inputs":[],"output":{"name":"astc_12x12unormblock"}}],[11,"clone","","",562,{"inputs":[{"name":"astc_12x12unormblock"}],"output":{"name":"astc_12x12unormblock"}}],[11,"fmt","","",562,{"inputs":[{"name":"astc_12x12unormblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",562,{"inputs":[{"name":"astc_12x12unormblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",562,{"inputs":[{"name":"astc_12x12unormblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",562,{"inputs":[{"name":"astc_12x12unormblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",562,{"inputs":[{"name":"astc_12x12unormblock"}],"output":{"name":"bool"}}],[11,"default","","",563,{"inputs":[],"output":{"name":"astc_12x12srgbblock"}}],[11,"clone","","",563,{"inputs":[{"name":"astc_12x12srgbblock"}],"output":{"name":"astc_12x12srgbblock"}}],[11,"fmt","","",563,{"inputs":[{"name":"astc_12x12srgbblock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"format","","",563,{"inputs":[{"name":"astc_12x12srgbblock"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",563,{"inputs":[{"name":"astc_12x12srgbblock"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_compressed","","",563,{"inputs":[{"name":"astc_12x12srgbblock"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",563,{"inputs":[{"name":"astc_12x12srgbblock"}],"output":{"name":"bool"}}],[11,"format","","",365,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"decode_clear_value","","",365,{"inputs":[{"name":"format"},{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"is_float","","",365,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"is_uint","","",365,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"is_sint","","",365,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"is_depth","","",365,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"is_stencil","","",365,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"is_depth_stencil","","",365,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"is_compressed","","",365,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"is_float_or_compressed","","",365,{"inputs":[{"name":"format"}],"output":{"name":"bool"}}],[11,"hash","","",366,null],[11,"eq","","",366,{"inputs":[{"name":"formatty"},{"name":"formatty"}],"output":{"name":"bool"}}],[11,"clone","","",366,{"inputs":[{"name":"formatty"}],"output":{"name":"formatty"}}],[11,"fmt","","",366,{"inputs":[{"name":"formatty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",367,{"inputs":[{"name":"clearvalue"},{"name":"clearvalue"}],"output":{"name":"bool"}}],[11,"ne","","",367,{"inputs":[{"name":"clearvalue"},{"name":"clearvalue"}],"output":{"name":"bool"}}],[11,"clone","","",367,{"inputs":[{"name":"clearvalue"}],"output":{"name":"clearvalue"}}],[11,"fmt","","",367,{"inputs":[{"name":"clearvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,null],[11,"from","","",367,{"inputs":[{"name":"f32"}],"output":{"name":"clearvalue"}}],[11,"from","","",367,{"inputs":[{"name":"u32"}],"output":{"name":"clearvalue"}}],[11,"from","","",367,null],[0,"framebuffer","vulkano","Targets on which your draw commands are executed.",null,null],[3,"EmptySinglePassRenderPass","vulkano::framebuffer","Implementation of `RenderPass` with no attachment at all and a single pass.",null,null],[3,"Framebuffer","","Contains the list of images attached to a render pass.",null,null],[3,"UnsafeRenderPass","","Defines the layout of multiple subpasses.",null,null],[3,"LayoutAttachmentDescription","","Describes an attachment that will be used in a render pass.",null,null],[12,"format","","Format of the image that is going to be binded.",564,null],[12,"samples","","Number of samples of the image that is going to be binded.",564,null],[12,"load","","What the implementation should do with that attachment at the start of the renderpass.",564,null],[12,"store","","What the implementation should do with that attachment at the end of the renderpass.",564,null],[12,"initial_layout","","Layout that the image is going to be in at the start of the renderpass.",564,null],[12,"final_layout","","Layout that the image will be transitionned to at the end of the renderpass.",564,null],[3,"LayoutPassDescription","","Describes one of the passes of a render pass.",null,null],[12,"color_attachments","","Indices and layouts of attachments to use as color attachments.",565,null],[12,"depth_stencil","","Index and layout of the attachment to use as depth-stencil attachment.",565,null],[12,"input_attachments","","Indices and layouts of attachments to use as input attachments.",565,null],[12,"resolve_attachments","","If not empty, each color attachment will be resolved into each corresponding entry of\nthis list.",565,null],[12,"preserve_attachments","","Indices of attachments that will be preserved during this pass.",565,null],[3,"LayoutPassDependencyDescription","","Describes a dependency between two passes of a render pass.",null,null],[12,"source_subpass","","Index of the subpass that writes the data that `destination_subpass` is going to use.",566,null],[12,"destination_subpass","","Index of the subpass that reads the data that `source_subpass` wrote.",566,null],[12,"by_region","","",566,null],[3,"Subpass","","Represents a subpass within a `RenderPass` object.",null,null],[4,"FramebufferCreationError","","Error that can happen when creating a framebuffer object.",null,null],[13,"OomError","","Out of memory.",567,null],[13,"DimensionsTooLarge","","The requested dimensions exceed the device&#39;s limits.",567,null],[13,"AttachmentNotIdentitySwizzled","","One of the attachments has a component swizzle that is different from identity.",567,null],[13,"AttachmentTooSmall","","One of the attachments is too small compared to the requested framebuffer dimensions.",567,null],[4,"RenderPassCreationError","","Error that can happen when creating a compute pipeline.",null,null],[13,"OomError","","Not enough memory.",568,null],[13,"ColorAttachmentsLimitExceeded","","The maximum number of color attachments has been exceeded.",568,null],[4,"StoreOp","","Describes what the implementation should do with an attachment after all the subpasses have\ncompleted.",null,null],[13,"Store","","The attachment will be stored. This is what you usually want.",569,null],[13,"DontCare","","What happens is implementation-specific.",569,null],[4,"LoadOp","","Describes what the implementation should do with an attachment at the start of the subpass.",null,null],[13,"Load","","The attachment will be loaded. This is what you want if you want to draw over\nsomething existing.",570,null],[13,"Clear","","The attachment will be cleared by the implementation with a uniform value that you must\nprovide when you start drawing.",570,null],[13,"DontCare","","The attachment will have undefined content.",570,null],[11,"raw","","See the docs of new().",571,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"new","","Builds the render pass.",571,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"render_pass","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"}],"output":{"name":"unsaferenderpass"}}],[11,"attachments","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"}],"output":{"name":"attachmentsiter"}}],[11,"passes","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"}],"output":{"name":"passesiter"}}],[11,"dependencies","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"}],"output":{"name":"dependenciesiter"}}],[11,"num_subpasses","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"}],"output":{"name":"u32"}}],[11,"num_color_attachments","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_samples","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_depth_stencil_attachment","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_depth","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_writable_depth","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_stencil","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_writable_stencil","","",571,{"inputs":[{"name":"emptysinglepassrenderpass"},{"name":"u32"}],"output":{"name":"option"}}],[11,"convert_attachments_list","","",571,null],[11,"convert_clear_values","","",571,null],[11,"new","","Builds a new framebuffer.",572,null],[11,"is_compatible_with","","Returns true if this framebuffer can be used with the specified renderpass.",572,{"inputs":[{"name":"framebuffer"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"dimensions","","Returns the width, height and layers of this framebuffer.",572,null],[11,"width","","Returns the width of the framebuffer in pixels.",572,{"inputs":[{"name":"framebuffer"}],"output":{"name":"u32"}}],[11,"height","","Returns the height of the framebuffer in pixels.",572,{"inputs":[{"name":"framebuffer"}],"output":{"name":"u32"}}],[11,"layers","","Returns the number of layers (or depth) of the framebuffer.",572,{"inputs":[{"name":"framebuffer"}],"output":{"name":"u32"}}],[11,"device","","Returns the device that was used to create this framebuffer.",572,{"inputs":[{"name":"framebuffer"}],"output":{"name":"arc"}}],[11,"render_pass","","Returns the renderpass that was used to create this framebuffer.",572,{"inputs":[{"name":"framebuffer"}],"output":{"name":"arc"}}],[11,"attachments","","Returns all the resources attached to that framebuffer.",572,null],[11,"internal_object","","",572,{"inputs":[{"name":"framebuffer"}],"output":{"name":"framebuffer"}}],[11,"drop","","",572,{"inputs":[{"name":"framebuffer"}],"output":null}],[11,"eq","","",567,{"inputs":[{"name":"framebuffercreationerror"},{"name":"framebuffercreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",567,{"inputs":[{"name":"framebuffercreationerror"},{"name":"framebuffercreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",567,{"inputs":[{"name":"framebuffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",567,{"inputs":[{"name":"framebuffercreationerror"}],"output":{"name":"framebuffercreationerror"}}],[11,"from","","",567,{"inputs":[{"name":"oomerror"}],"output":{"name":"framebuffercreationerror"}}],[11,"description","","",567,{"inputs":[{"name":"framebuffercreationerror"}],"output":{"name":"str"}}],[11,"cause","","",567,{"inputs":[{"name":"framebuffercreationerror"}],"output":{"name":"option"}}],[11,"fmt","","",567,{"inputs":[{"name":"framebuffercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",567,{"inputs":[{"name":"error"}],"output":{"name":"framebuffercreationerror"}}],[11,"new","","Builds a new renderpass.",573,{"inputs":[{"name":"arc"},{"name":"ia"},{"name":"ip"},{"name":"id"}],"output":{"name":"result"}}],[11,"device","","Returns the device that was used to create this render pass.",573,{"inputs":[{"name":"unsaferenderpass"}],"output":{"name":"arc"}}],[11,"internal_object","","",573,{"inputs":[{"name":"unsaferenderpass"}],"output":{"name":"renderpass"}}],[11,"render_pass","","",573,{"inputs":[{"name":"unsaferenderpass"}],"output":{"name":"unsaferenderpass"}}],[11,"drop","","",573,{"inputs":[{"name":"unsaferenderpass"}],"output":null}],[11,"eq","","",568,{"inputs":[{"name":"renderpasscreationerror"},{"name":"renderpasscreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",568,{"inputs":[{"name":"renderpasscreationerror"},{"name":"renderpasscreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",568,{"inputs":[{"name":"renderpasscreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",568,{"inputs":[{"name":"renderpasscreationerror"}],"output":{"name":"renderpasscreationerror"}}],[11,"description","","",568,{"inputs":[{"name":"renderpasscreationerror"}],"output":{"name":"str"}}],[11,"cause","","",568,{"inputs":[{"name":"renderpasscreationerror"}],"output":{"name":"option"}}],[11,"fmt","","",568,{"inputs":[{"name":"renderpasscreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",568,{"inputs":[{"name":"oomerror"}],"output":{"name":"renderpasscreationerror"}}],[11,"from","","",568,{"inputs":[{"name":"error"}],"output":{"name":"renderpasscreationerror"}}],[11,"clone","","",564,{"inputs":[{"name":"layoutattachmentdescription"}],"output":{"name":"layoutattachmentdescription"}}],[11,"fmt","","",564,{"inputs":[{"name":"layoutattachmentdescription"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_compatible_with","","Returns true if this attachment is compatible with another attachment, as defined in the\n`Render Pass Compatibility` section of the Vulkan specs.",564,{"inputs":[{"name":"layoutattachmentdescription"},{"name":"layoutattachmentdescription"}],"output":{"name":"bool"}}],[11,"clone","","",565,{"inputs":[{"name":"layoutpassdescription"}],"output":{"name":"layoutpassdescription"}}],[11,"fmt","","",565,{"inputs":[{"name":"layoutpassdescription"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",566,{"inputs":[{"name":"layoutpassdependencydescription"}],"output":{"name":"layoutpassdependencydescription"}}],[11,"fmt","","",566,{"inputs":[{"name":"layoutpassdependencydescription"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",569,null],[11,"assert_receiver_is_total_eq","","",569,null],[11,"eq","","",569,{"inputs":[{"name":"storeop"},{"name":"storeop"}],"output":{"name":"bool"}}],[11,"clone","","",569,{"inputs":[{"name":"storeop"}],"output":{"name":"storeop"}}],[11,"fmt","","",569,{"inputs":[{"name":"storeop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",570,null],[11,"assert_receiver_is_total_eq","","",570,null],[11,"eq","","",570,{"inputs":[{"name":"loadop"},{"name":"loadop"}],"output":{"name":"bool"}}],[11,"clone","","",570,{"inputs":[{"name":"loadop"}],"output":{"name":"loadop"}}],[11,"fmt","","",570,{"inputs":[{"name":"loadop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","Returns a handle that represents a subpass of a render pass.",574,{"inputs":[{"name":"arc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_color_attachments","","Returns the number of color attachments in this subpass.",574,{"inputs":[{"name":"subpass"}],"output":{"name":"u32"}}],[11,"has_depth","","Returns true if the subpass has a depth attachment or a depth-stencil attachment.",574,{"inputs":[{"name":"subpass"}],"output":{"name":"bool"}}],[11,"has_writable_depth","","Returns true if the subpass has a depth attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",574,{"inputs":[{"name":"subpass"}],"output":{"name":"bool"}}],[11,"has_stencil","","Returns true if the subpass has a stencil attachment or a depth-stencil attachment.",574,{"inputs":[{"name":"subpass"}],"output":{"name":"bool"}}],[11,"has_writable_stencil","","Returns true if the subpass has a stencil attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",574,{"inputs":[{"name":"subpass"}],"output":{"name":"bool"}}],[11,"has_color_or_depth_stencil_attachment","","Returns true if the subpass has any color or depth/stencil attachment.",574,{"inputs":[{"name":"subpass"}],"output":{"name":"bool"}}],[11,"num_samples","","Returns the number of samples in the color and/or depth/stencil attachments. Returns `None`\nif there is no such attachment in this subpass.",574,{"inputs":[{"name":"subpass"}],"output":{"name":"option"}}],[11,"render_pass","","Returns the render pass of this subpass.",574,{"inputs":[{"name":"subpass"}],"output":{"name":"arc"}}],[11,"index","","Returns the index of this subpass within the renderpass.",574,{"inputs":[{"name":"subpass"}],"output":{"name":"u32"}}],[11,"clone","","",574,{"inputs":[{"name":"subpass"}],"output":{"name":"subpass"}}],[8,"RenderPass","","Trait for objects that describe a render pass.",null,null],[10,"render_pass","","Returns the underlying `UnsafeRenderPass`. Used by vulkano&#39;s internals.",575,{"inputs":[{"name":"renderpass"}],"output":{"name":"unsaferenderpass"}}],[8,"RenderPassDesc","","",null,null],[16,"AttachmentsIter","","Iterator returned by the `attachments` method.",576,null],[16,"PassesIter","","Iterator returned by the `passes` method.",576,null],[16,"DependenciesIter","","Iterator returned by the `dependencies` method.",576,null],[10,"attachments","","Returns an iterator that describes the list of attachments of this render pass.",576,{"inputs":[{"name":"renderpassdesc"}],"output":{"name":"attachmentsiter"}}],[10,"passes","","Returns an iterator that describes the list of passes of this render pass.",576,{"inputs":[{"name":"renderpassdesc"}],"output":{"name":"passesiter"}}],[10,"dependencies","","Returns an iterator that describes the list of inter-pass dependencies of this render pass.",576,{"inputs":[{"name":"renderpassdesc"}],"output":{"name":"dependenciesiter"}}],[11,"num_subpasses","","Returns the number of subpasses within the render pass.",576,{"inputs":[{"name":"renderpassdesc"}],"output":{"name":"u32"}}],[11,"num_color_attachments","","Returns the number of color attachments in a subpass. Returns `None` if out of range.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_samples","","Returns the number of samples of the attachments of a subpass. Returns `None` if out of\nrange or if the subpass has no attachment. TODO: return an enum instead?",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_depth_stencil_attachment","","Returns a tuple whose first element is `true` if there&#39;s a depth attachment, and whose\nsecond element is `true` if there&#39;s a stencil attachment. Returns `None` if out of range.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_depth","","Returns true if a subpass has a depth attachment or a depth-stencil attachment.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_writable_depth","","Returns true if a subpass has a depth attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_stencil","","Returns true if a subpass has a stencil attachment or a depth-stencil attachment.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_writable_stencil","","Returns true if a subpass has a stencil attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[8,"RenderPassAttachmentsList","","Extension trait for `RenderPass`. Defines which types are allowed as an attachments list.",null,null],[16,"AttachmentsIter","","A decoded `A`.",577,null],[10,"convert_attachments_list","","Decodes a `A` into a list of attachments.",577,{"inputs":[{"name":"renderpassattachmentslist"},{"name":"a"}],"output":{"name":"result"}}],[8,"RenderPassClearValues","","Extension trait for `RenderPass`. Defines which types are allowed as a list of clear values.",null,null],[16,"ClearValuesIter","","Iterator that produces one clear value per attachment.",578,null],[10,"convert_clear_values","","Decodes a `C` into a list of clear values where each element corresponds\nto an attachment. The size of the returned iterator must be the same as the number of\nattachments.",578,{"inputs":[{"name":"renderpassclearvalues"},{"name":"c"}],"output":{"name":"clearvaluesiter"}}],[8,"RenderPassCompatible","","Trait implemented on render pass objects to check whether they are compatible\nwith another render pass.",null,null],[10,"is_compatible_with","","Returns `true` if this layout is compatible with the other layout, as defined in the\n`Render Pass Compatibility` section of the Vulkan specs.",579,{"inputs":[{"name":"renderpasscompatible"},{"name":"arc"}],"output":{"name":"bool"}}],[8,"RenderPassSubpassInterface","","Extension trait for `RenderPass` that checks whether a subpass of this render pass accepts\nthe output of a fragment shader.",null,null],[10,"is_compatible_with","","Returns `true` if this subpass is compatible with the fragment output definition.\nAlso returns `false` if the subpass is out of range.",580,{"inputs":[{"name":"renderpasssubpassinterface"},{"name":"u32"},{"name":"other"}],"output":{"name":"bool"}}],[0,"image","vulkano","Images storage (1D, 2D, 3D, arrays, etc.).",null,null],[3,"Swizzle","vulkano::image","",null,null],[12,"r","","",581,null],[12,"g","","",581,null],[12,"b","","",581,null],[12,"a","","",581,null],[4,"MipmapsCount","","Specifies how many mipmaps must be allocated.",null,null],[13,"Specific","","Allocate the given number of mipmaps. May result in an error if the value is out of range.",582,null],[13,"Log2","","Allocates the number of mipmaps required to store all the mipmaps of the image where each\nmipmap is half the dimensions of the previous level. Always supported.",582,null],[13,"One","","Allocate one mipmap (ie. just the main level). Always supported.",582,null],[4,"ComponentSwizzle","","",null,null],[13,"Identity","","",583,null],[13,"Zero","","",583,null],[13,"One","","",583,null],[13,"Red","","",583,null],[13,"Green","","",583,null],[13,"Blue","","",583,null],[13,"Alpha","","",583,null],[0,"attachment","","Image whose purpose is to be used as a framebuffer attachment.",null,null],[3,"AttachmentImage","vulkano::image::attachment","Image whose purpose is to be used as a framebuffer attachment.",null,null],[11,"fmt","","",584,{"inputs":[{"name":"attachmentimage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new image with the given dimensions and format.",584,null],[11,"transient","","Same as `new`, except that the image will be transient.",584,null],[11,"dimensions","","Returns the dimensions of the image.",584,null],[11,"inner_image","","",584,{"inputs":[{"name":"attachmentimage"}],"output":{"name":"unsafeimage"}}],[11,"blocks","","",584,{"inputs":[{"name":"attachmentimage"},{"name":"range"},{"name":"range"}],"output":{"name":"vec"}}],[11,"block_mipmap_levels_range","","",584,null],[11,"block_array_layers_range","","",584,null],[11,"initial_layout","","",584,null],[11,"final_layout","","",584,null],[11,"needs_fence","","",584,{"inputs":[{"name":"attachmentimage"},{"name":"iterator"}],"output":{"name":"option"}}],[11,"gpu_access","","",584,{"inputs":[{"name":"attachmentimage"},{"name":"iterator"},{"name":"arc"}],"output":{"name":"gpuaccessresult"}}],[11,"decode","","",584,{"inputs":[{"name":"attachmentimage"},{"name":"clearvalue"}],"output":{"name":"option"}}],[11,"matches_format","","",584,{"inputs":[{"name":"attachmentimage"}],"output":{"name":"bool"}}],[11,"parent","","",584,{"inputs":[{"name":"attachmentimage"}],"output":{"name":"image"}}],[11,"parent_arc","","",584,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"blocks","","",584,{"inputs":[{"name":"attachmentimage"}],"output":{"name":"vec"}}],[11,"inner_view","","",584,{"inputs":[{"name":"attachmentimage"}],"output":{"name":"unsafeimageview"}}],[11,"descriptor_set_storage_image_layout","","",584,{"inputs":[{"name":"attachmentimage"}],"output":{"name":"layout"}}],[11,"descriptor_set_combined_image_sampler_layout","","",584,{"inputs":[{"name":"attachmentimage"}],"output":{"name":"layout"}}],[11,"descriptor_set_sampled_image_layout","","",584,{"inputs":[{"name":"attachmentimage"}],"output":{"name":"layout"}}],[11,"descriptor_set_input_attachment_layout","","",584,{"inputs":[{"name":"attachmentimage"}],"output":{"name":"layout"}}],[11,"identity_swizzle","","",584,{"inputs":[{"name":"attachmentimage"}],"output":{"name":"bool"}}],[0,"immutable","vulkano::image","",null,null],[3,"ImmutableImage","vulkano::image::immutable","Image whose purpose is to be used for read-only purposes. You can write to the image once,\nbut then you must only ever read from it. TODO: clarify because of blit operations",null,null],[11,"fmt","","",585,{"inputs":[{"name":"immutableimage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",585,{"inputs":[{"name":"arc"},{"name":"dimensions"},{"name":"f"},{"name":"i"}],"output":{"name":"result"}}],[11,"dimensions","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"dimensions"}}],[11,"inner_image","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"unsafeimage"}}],[11,"blocks","","",585,{"inputs":[{"name":"immutableimage"},{"name":"range"},{"name":"range"}],"output":{"name":"vec"}}],[11,"block_mipmap_levels_range","","",585,null],[11,"block_array_layers_range","","",585,null],[11,"initial_layout","","",585,null],[11,"final_layout","","",585,null],[11,"needs_fence","","",585,{"inputs":[{"name":"immutableimage"},{"name":"iterator"}],"output":{"name":"option"}}],[11,"gpu_access","","",585,{"inputs":[{"name":"immutableimage"},{"name":"iterator"},{"name":"arc"}],"output":{"name":"gpuaccessresult"}}],[11,"matches_format","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"bool"}}],[11,"parent","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"image"}}],[11,"parent_arc","","",585,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"blocks","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"vec"}}],[11,"inner_view","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"unsafeimageview"}}],[11,"descriptor_set_storage_image_layout","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"layout"}}],[11,"descriptor_set_combined_image_sampler_layout","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"layout"}}],[11,"descriptor_set_sampled_image_layout","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"layout"}}],[11,"descriptor_set_input_attachment_layout","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"layout"}}],[11,"identity_swizzle","","",585,{"inputs":[{"name":"immutableimage"}],"output":{"name":"bool"}}],[0,"swapchain","vulkano::image","",null,null],[3,"SwapchainImage","vulkano::image::swapchain","",null,null],[11,"from_raw","","",586,{"inputs":[{"name":"unsafeimage"},{"name":"format"},{"name":"arc"},{"name":"u32"}],"output":{"name":"result"}}],[11,"dimensions","","Returns the dimensions of the image.",586,null],[11,"format","","Returns the format of the image.",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"format"}}],[11,"inner_image","","",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"unsafeimage"}}],[11,"blocks","","",586,{"inputs":[{"name":"swapchainimage"},{"name":"range"},{"name":"range"}],"output":{"name":"vec"}}],[11,"block_mipmap_levels_range","","",586,null],[11,"block_array_layers_range","","",586,null],[11,"initial_layout","","",586,null],[11,"final_layout","","",586,null],[11,"needs_fence","","",586,{"inputs":[{"name":"swapchainimage"},{"name":"iterator"}],"output":{"name":"option"}}],[11,"gpu_access","","",586,{"inputs":[{"name":"swapchainimage"},{"name":"iterator"},{"name":"arc"}],"output":{"name":"gpuaccessresult"}}],[11,"matches_format","","",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"bool"}}],[11,"parent","","",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"image"}}],[11,"parent_arc","","",586,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"blocks","","",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"vec"}}],[11,"inner_view","","",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"unsafeimageview"}}],[11,"descriptor_set_storage_image_layout","","",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"layout"}}],[11,"descriptor_set_combined_image_sampler_layout","","",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"layout"}}],[11,"descriptor_set_sampled_image_layout","","",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"layout"}}],[11,"descriptor_set_input_attachment_layout","","",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"layout"}}],[11,"identity_swizzle","","",586,{"inputs":[{"name":"swapchainimage"}],"output":{"name":"bool"}}],[0,"sys","vulkano::image","Low-level implementation of images and images views.",null,null],[3,"UnsafeImage","vulkano::image::sys","A storage for pixels or arbitrary data.",null,null],[3,"UnsafeImageView","","",null,null],[3,"Usage","","Describes how an image is going to be used. This is **not** an optimization.",null,null],[12,"transfer_source","","Can be used a source for transfers. Includes blits.",587,null],[12,"transfer_dest","","Can be used a destination for transfers. Includes blits.",587,null],[12,"sampled","","Can be sampled from a shader.",587,null],[12,"storage","","Can be used as an image storage in a shader.",587,null],[12,"color_attachment","","Can be attached as a color attachment to a framebuffer.",587,null],[12,"depth_stencil_attachment","","Can be attached as a depth, stencil or depth-stencil attachment to a framebuffer.",587,null],[12,"transient_attachment","","Indicates that this image will only ever be used as a temporary framebuffer attachment.\nAs soon as you leave a render pass, the content of transient images becomes undefined.",587,null],[12,"input_attachment","","Can be used as an input attachment. In other words, you can draw to it in a subpass then\nread from it in a following pass.",587,null],[4,"ImageCreationError","","Error that can happen when creating an instance.",null,null],[13,"OomError","","Not enough memory.",588,null],[13,"InvalidMipmapsCount","","A wrong number of mipmaps was provided.",588,null],[12,"obtained","vulkano::image::sys::ImageCreationError","",588,null],[12,"valid_range","","",588,null],[13,"UnsupportedSamplesCount","vulkano::image::sys","The requeted number of samples is not supported, or is 0.",588,null],[12,"obtained","vulkano::image::sys::ImageCreationError","",588,null],[13,"UnsupportedDimensions","vulkano::image::sys","The dimensions are too large, or one of the dimensions is 0.",588,null],[12,"dimensions","vulkano::image::sys::ImageCreationError","",588,null],[13,"FormatNotSupported","vulkano::image::sys","The requested format is not supported by the Vulkan implementation.",588,null],[13,"UnsupportedUsage","","The format is supported, but at least one of the requested usages is not supported.",588,null],[13,"ShaderStorageImageMultisampleFeatureNotEnabled","","The `shader_storage_image_multisample` feature must be enabled to create such an image.",588,null],[4,"Dimensions","","",null,null],[13,"Dim1d","","",589,null],[12,"width","vulkano::image::sys::Dimensions","",589,null],[13,"Dim1dArray","vulkano::image::sys","",589,null],[12,"width","vulkano::image::sys::Dimensions","",589,null],[12,"array_layers","","",589,null],[13,"Dim2d","vulkano::image::sys","",589,null],[12,"width","vulkano::image::sys::Dimensions","",589,null],[12,"height","","",589,null],[13,"Dim2dArray","vulkano::image::sys","",589,null],[12,"width","vulkano::image::sys::Dimensions","",589,null],[12,"height","","",589,null],[12,"array_layers","","",589,null],[13,"Dim3d","vulkano::image::sys","",589,null],[12,"width","vulkano::image::sys::Dimensions","",589,null],[12,"height","","",589,null],[12,"depth","","",589,null],[4,"Layout","vulkano::image::sys","",null,null],[13,"Undefined","","",590,null],[13,"General","","",590,null],[13,"ColorAttachmentOptimal","","",590,null],[13,"DepthStencilAttachmentOptimal","","",590,null],[13,"DepthStencilReadOnlyOptimal","","",590,null],[13,"ShaderReadOnlyOptimal","","",590,null],[13,"TransferSrcOptimal","","",590,null],[13,"TransferDstOptimal","","",590,null],[13,"Preinitialized","","",590,null],[13,"PresentSrc","","",590,null],[11,"fmt","","",591,{"inputs":[{"name":"unsafeimage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new image and allocates memory for it.",591,{"inputs":[{"name":"arc"},{"name":"usage"},{"name":"format"},{"name":"dimensions"},{"name":"u32"},{"name":"mi"},{"name":"sharing"},{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[11,"from_raw","","Creates an image from a raw handle. The image won&#39;t be destroyed.",591,{"inputs":[{"name":"arc"},{"name":"u64"},{"name":"u32"},{"name":"format"},{"name":"dimensions"},{"name":"u32"},{"name":"u32"}],"output":{"name":"unsafeimage"}}],[11,"bind_memory","","",591,{"inputs":[{"name":"unsafeimage"},{"name":"devicememory"},{"name":"usize"}],"output":{"name":"result"}}],[11,"format","","",591,{"inputs":[{"name":"unsafeimage"}],"output":{"name":"format"}}],[11,"mipmap_levels","","",591,{"inputs":[{"name":"unsafeimage"}],"output":{"name":"u32"}}],[11,"dimensions","","",591,{"inputs":[{"name":"unsafeimage"}],"output":{"name":"dimensions"}}],[11,"samples","","",591,{"inputs":[{"name":"unsafeimage"}],"output":{"name":"u32"}}],[11,"supports_blit_source","","Returns true if the image can be used as a source for blits.",591,{"inputs":[{"name":"unsafeimage"}],"output":{"name":"bool"}}],[11,"supports_blit_destination","","Returns true if the image can be used as a destination for blits.",591,{"inputs":[{"name":"unsafeimage"}],"output":{"name":"bool"}}],[11,"internal_object","","",591,{"inputs":[{"name":"unsafeimage"}],"output":{"name":"image"}}],[11,"drop","","",591,{"inputs":[{"name":"unsafeimage"}],"output":null}],[11,"eq","","",588,{"inputs":[{"name":"imagecreationerror"},{"name":"imagecreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",588,{"inputs":[{"name":"imagecreationerror"},{"name":"imagecreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",588,{"inputs":[{"name":"imagecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",588,{"inputs":[{"name":"imagecreationerror"}],"output":{"name":"imagecreationerror"}}],[11,"description","","",588,{"inputs":[{"name":"imagecreationerror"}],"output":{"name":"str"}}],[11,"cause","","",588,{"inputs":[{"name":"imagecreationerror"}],"output":{"name":"option"}}],[11,"fmt","","",588,{"inputs":[{"name":"imagecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",588,{"inputs":[{"name":"oomerror"}],"output":{"name":"imagecreationerror"}}],[11,"from","","",588,{"inputs":[{"name":"error"}],"output":{"name":"imagecreationerror"}}],[11,"fmt","","",592,{"inputs":[{"name":"unsafeimageview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"raw","","See the docs of new().",592,{"inputs":[{"name":"unsafeimage"},{"name":"range"},{"name":"range"}],"output":{"name":"result"}}],[11,"new","","Creates a new view from an image.",592,{"inputs":[{"name":"unsafeimage"},{"name":"range"},{"name":"range"}],"output":{"name":"unsafeimageview"}}],[11,"format","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":{"name":"format"}}],[11,"usage_transfer_src","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":{"name":"bool"}}],[11,"usage_transfer_dest","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":{"name":"bool"}}],[11,"usage_sampled","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":{"name":"bool"}}],[11,"usage_storage","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":{"name":"bool"}}],[11,"usage_color_attachment","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":{"name":"bool"}}],[11,"usage_depth_stencil_attachment","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":{"name":"bool"}}],[11,"usage_transient_attachment","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":{"name":"bool"}}],[11,"usage_input_attachment","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":{"name":"bool"}}],[11,"internal_object","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":{"name":"imageview"}}],[11,"drop","","",592,{"inputs":[{"name":"unsafeimageview"}],"output":null}],[11,"eq","","",589,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"bool"}}],[11,"ne","","",589,{"inputs":[{"name":"dimensions"},{"name":"dimensions"}],"output":{"name":"bool"}}],[11,"fmt","","",589,{"inputs":[{"name":"dimensions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",589,{"inputs":[{"name":"dimensions"}],"output":{"name":"dimensions"}}],[11,"width","","",589,{"inputs":[{"name":"dimensions"}],"output":{"name":"u32"}}],[11,"height","","",589,{"inputs":[{"name":"dimensions"}],"output":{"name":"u32"}}],[11,"width_height","","",589,null],[11,"depth","","",589,{"inputs":[{"name":"dimensions"}],"output":{"name":"u32"}}],[11,"array_layers","","",589,{"inputs":[{"name":"dimensions"}],"output":{"name":"u32"}}],[11,"hash","","",587,null],[11,"eq","","",587,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"ne","","",587,{"inputs":[{"name":"usage"},{"name":"usage"}],"output":{"name":"bool"}}],[11,"clone","","",587,{"inputs":[{"name":"usage"}],"output":{"name":"usage"}}],[11,"fmt","","",587,{"inputs":[{"name":"usage"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"all","","Builds a `Usage` with all values set to true. Note that using the returned value will\nproduce an error because of `transient_attachment` being true.",587,{"inputs":[],"output":{"name":"usage"}}],[11,"none","","Builds a `Usage` with all values set to false. Useful as a default value.",587,{"inputs":[],"output":{"name":"usage"}}],[11,"eq","","",590,{"inputs":[{"name":"layout"},{"name":"layout"}],"output":{"name":"bool"}}],[11,"clone","","",590,{"inputs":[{"name":"layout"}],"output":{"name":"layout"}}],[11,"fmt","","",590,{"inputs":[{"name":"layout"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"traits","vulkano::image","",null,null],[3,"AccessRange","vulkano::image::traits","",null,null],[12,"block","","",593,null],[12,"write","","",593,null],[12,"initial_layout","","",593,null],[12,"final_layout","","",593,null],[3,"GpuAccessResult","","",null,null],[12,"dependencies","","",594,null],[12,"additional_wait_semaphore","","",594,null],[12,"additional_signal_semaphore","","",594,null],[12,"before_transitions","","",594,null],[12,"after_transitions","","",594,null],[3,"Transition","","",null,null],[12,"block","","",595,null],[12,"from","","",595,null],[12,"to","","",595,null],[8,"Image","","",null,null],[10,"inner_image","","Returns the inner unsafe image object used by this image.",596,{"inputs":[{"name":"image"}],"output":{"name":"unsafeimage"}}],[11,"format","","Returns the format of this image.",596,{"inputs":[{"name":"image"}],"output":{"name":"format"}}],[11,"samples","","",596,{"inputs":[{"name":"image"}],"output":{"name":"u32"}}],[11,"dimensions","","Returns the dimensions of the image.",596,{"inputs":[{"name":"image"}],"output":{"name":"dimensions"}}],[10,"blocks","","Given a range, returns the list of blocks which each range is contained in.",596,{"inputs":[{"name":"image"},{"name":"range"},{"name":"range"}],"output":{"name":"vec"}}],[10,"block_mipmap_levels_range","","",596,null],[10,"block_array_layers_range","","",596,null],[10,"initial_layout","","Called when a command buffer that uses this image is being built. Given a block, this\nfunction should return the layout that the block will have when the command buffer is\nsubmitted.",596,null],[10,"final_layout","","Called when a command buffer that uses this image is being built. Given a block, this\nfunction should return the layout that the block must have when the command buffer is\nend.",596,null],[10,"needs_fence","","Returns whether accessing a subresource of that image should signal a fence.",596,{"inputs":[{"name":"image"},{"name":"iterator"}],"output":{"name":"option"}}],[10,"gpu_access","","",596,{"inputs":[{"name":"image"},{"name":"iterator"},{"name":"arc"}],"output":{"name":"gpuaccessresult"}}],[11,"supports_blit_source","","Returns true if the image can be used as a source for blits.",596,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[11,"supports_blit_destination","","Returns true if the image can be used as a destination for blits.",596,{"inputs":[{"name":"image"}],"output":{"name":"bool"}}],[8,"ImageClearValue","","",null,null],[10,"decode","","",597,{"inputs":[{"name":"imageclearvalue"},{"name":"t"}],"output":{"name":"option"}}],[8,"ImageContent","","",null,null],[10,"matches_format","","Checks whether pixels of type `P` match the format of the image.",598,{"inputs":[{"name":"imagecontent"}],"output":{"name":"bool"}}],[8,"ImageView","","",null,null],[10,"parent","","",599,{"inputs":[{"name":"imageview"}],"output":{"name":"image"}}],[10,"parent_arc","","",599,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[10,"inner_view","","Returns the inner unsafe image view object used by this image view.",599,{"inputs":[{"name":"imageview"}],"output":{"name":"unsafeimageview"}}],[10,"blocks","","Returns the blocks of the parent image this image view overlaps.",599,{"inputs":[{"name":"imageview"}],"output":{"name":"vec"}}],[11,"format","","Returns the format of this view. This can be different from the parent&#39;s format.",599,{"inputs":[{"name":"imageview"}],"output":{"name":"format"}}],[11,"samples","","",599,{"inputs":[{"name":"imageview"}],"output":{"name":"u32"}}],[10,"descriptor_set_storage_image_layout","","Returns the image layout to use in a descriptor with the given subresource.",599,{"inputs":[{"name":"imageview"}],"output":{"name":"layout"}}],[10,"descriptor_set_combined_image_sampler_layout","","Returns the image layout to use in a descriptor with the given subresource.",599,{"inputs":[{"name":"imageview"}],"output":{"name":"layout"}}],[10,"descriptor_set_sampled_image_layout","","Returns the image layout to use in a descriptor with the given subresource.",599,{"inputs":[{"name":"imageview"}],"output":{"name":"layout"}}],[10,"descriptor_set_input_attachment_layout","","Returns the image layout to use in a descriptor with the given subresource.",599,{"inputs":[{"name":"imageview"}],"output":{"name":"layout"}}],[10,"identity_swizzle","","Returns true if the view doesn&#39;t use components swizzling.",599,{"inputs":[{"name":"imageview"}],"output":{"name":"bool"}}],[11,"can_be_sampled","","Returns true if the given sampler can be used with this image view.",599,{"inputs":[{"name":"imageview"},{"name":"sampler"}],"output":{"name":"bool"}}],[8,"AttachmentImageView","","",null,null],[10,"accept","","",600,{"inputs":[{"name":"attachmentimageview"},{"name":"layout"},{"name":"layout"}],"output":{"name":"bool"}}],[11,"clone","","",593,{"inputs":[{"name":"accessrange"}],"output":{"name":"accessrange"}}],[11,"fmt","","",593,{"inputs":[{"name":"accessrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","vulkano::image","",582,{"inputs":[{"name":"mipmapscount"}],"output":{"name":"mipmapscount"}}],[11,"fmt","","",582,{"inputs":[{"name":"mipmapscount"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",582,{"inputs":[{"name":"u32"}],"output":{"name":"mipmapscount"}}],[11,"eq","","",581,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"ne","","",581,{"inputs":[{"name":"swizzle"},{"name":"swizzle"}],"output":{"name":"bool"}}],[11,"default","","",581,{"inputs":[],"output":{"name":"swizzle"}}],[11,"fmt","","",581,{"inputs":[{"name":"swizzle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",581,{"inputs":[{"name":"swizzle"}],"output":{"name":"swizzle"}}],[11,"eq","","",583,{"inputs":[{"name":"componentswizzle"},{"name":"componentswizzle"}],"output":{"name":"bool"}}],[11,"fmt","","",583,{"inputs":[{"name":"componentswizzle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",583,{"inputs":[{"name":"componentswizzle"}],"output":{"name":"componentswizzle"}}],[11,"default","","",583,{"inputs":[],"output":{"name":"componentswizzle"}}],[0,"instance","vulkano","API entry point.",null,null],[3,"Features","vulkano::instance","Represents all the features that are available on a physical device or enabled on\na logical device.",null,null],[12,"robust_buffer_access","","",601,null],[12,"full_draw_index_uint32","","",601,null],[12,"image_cube_array","","",601,null],[12,"independent_blend","","",601,null],[12,"geometry_shader","","",601,null],[12,"tessellation_shader","","",601,null],[12,"sample_rate_shading","","",601,null],[12,"dual_src_blend","","",601,null],[12,"logic_op","","",601,null],[12,"multi_draw_indirect","","",601,null],[12,"draw_indirect_first_instance","","",601,null],[12,"depth_clamp","","",601,null],[12,"depth_bias_clamp","","",601,null],[12,"fill_mode_non_solid","","",601,null],[12,"depth_bounds","","",601,null],[12,"wide_lines","","",601,null],[12,"large_points","","",601,null],[12,"alpha_to_one","","",601,null],[12,"multi_viewport","","",601,null],[12,"sampler_anisotropy","","",601,null],[12,"texture_compression_etc2","","",601,null],[12,"texture_compression_astc_ldr","","",601,null],[12,"texture_compression_bc","","",601,null],[12,"occlusion_query_precise","","",601,null],[12,"pipeline_statistics_query","","",601,null],[12,"vertex_pipeline_stores_and_atomics","","",601,null],[12,"fragment_stores_and_atomics","","",601,null],[12,"shader_tessellation_and_geometry_point_size","","",601,null],[12,"shader_image_gather_extended","","",601,null],[12,"shader_storage_image_extended_formats","","",601,null],[12,"shader_storage_image_multisample","","",601,null],[12,"shader_storage_image_read_without_format","","",601,null],[12,"shader_storage_image_write_without_format","","",601,null],[12,"shader_uniform_buffer_array_dynamic_indexing","","",601,null],[12,"shader_sampled_image_array_dynamic_indexing","","",601,null],[12,"shader_storage_buffer_array_dynamic_indexing","","",601,null],[12,"shader_storage_image_array_dynamic_indexing","","",601,null],[12,"shader_clip_distance","","",601,null],[12,"shader_cull_distance","","",601,null],[12,"shader_f3264","","",601,null],[12,"shader_int64","","",601,null],[12,"shader_int16","","",601,null],[12,"shader_resource_residency","","",601,null],[12,"shader_resource_min_lod","","",601,null],[12,"sparse_binding","","",601,null],[12,"sparse_residency_buffer","","",601,null],[12,"sparse_residency_image2d","","",601,null],[12,"sparse_residency_image3d","","",601,null],[12,"sparse_residency2_samples","","",601,null],[12,"sparse_residency4_samples","","",601,null],[12,"sparse_residency8_samples","","",601,null],[12,"sparse_residency16_samples","","",601,null],[12,"sparse_residency_aliased","","",601,null],[12,"variable_multisample_rate","","",601,null],[12,"inherited_queries","","",601,null],[3,"DeviceExtensions","","List of extensions that are enabled or available.",null,null],[12,"khr_swapchain","","",361,null],[12,"khr_display_swapchain","","",361,null],[3,"InstanceExtensions","","List of extensions that are enabled or available.",null,null],[12,"khr_surface","","",602,null],[12,"khr_display","","",602,null],[12,"khr_xlib_surface","","",602,null],[12,"khr_xcb_surface","","",602,null],[12,"khr_wayland_surface","","",602,null],[12,"khr_mir_surface","","",602,null],[12,"khr_android_surface","","",602,null],[12,"khr_win32_surface","","",602,null],[12,"ext_debug_report","","",602,null],[3,"Instance","","An instance of a Vulkan context. This is the main object that should be created by an\napplication before everything else.",null,null],[3,"ApplicationInfo","","Information that can be given to the Vulkan driver so that it can identify your application.",null,null],[12,"application_name","","Name of the application.",603,null],[12,"application_version","","An opaque number that contains the version number of the application.",603,null],[12,"engine_name","","Name of the engine used to power the application.",603,null],[12,"engine_version","","An opaque number that contains the version number of the engine.",603,null],[3,"PhysicalDevice","","Represents one of the available devices on this machine.",null,null],[3,"PhysicalDevicesIter","","Iterator for all the physical devices available on hardware.",null,null],[3,"QueueFamiliesIter","","Iterator for all the queue families available on a physical device.",null,null],[3,"QueueFamily","","Represents a queue family in a physical device.",null,null],[3,"MemoryTypesIter","","Iterator for all the memory types available on a physical device.",null,null],[3,"MemoryType","","Represents a memory type in a physical device.",null,null],[3,"MemoryHeapsIter","","Iterator for all the memory heaps available on a physical device.",null,null],[3,"MemoryHeap","","Represents a memory heap in a physical device.",null,null],[3,"Limits","","Limits of a physical device.",null,null],[3,"LayerProperties","","Properties of an available layer.",null,null],[3,"LayersIterator","","Iterator that produces the list of layers that are available.",null,null],[4,"InstanceCreationError","","Error that can happen when creating an instance.",null,null],[13,"OomError","","Not enough memory.",604,null],[13,"InitializationFailed","","Failed to initialize for an implementation-specific reason.",604,null],[13,"LayerNotPresent","","One of the requested layers is missing.",604,null],[13,"ExtensionNotPresent","","One of the requested extensions is missing.",604,null],[13,"IncompatibleDriver","","The version requested is not supported by the implementation.",604,null],[4,"PhysicalDeviceType","","Type of a physical device.",null,null],[13,"IntegratedGpu","","The device is an integrated GPU.",605,null],[13,"DiscreteGpu","","The device is a discrete GPU.",605,null],[13,"VirtualGpu","","The device is a virtual GPU.",605,null],[13,"Cpu","","The device is a CPU.",605,null],[13,"Other","","The device is something else.",605,null],[4,"LoadingError","","Error that can happen when loading the Vulkan loader.",null,null],[13,"LibraryLoadFailure","","Failed to load the Vulkan shared library.",606,null],[13,"MissingEntryPoint","","One of the entry points required to be supported by the Vulkan implementation is missing.",606,null],[5,"layers_list","","Queries the list of layers that are available when creating an instance.",null,{"inputs":[],"output":{"name":"result"}}],[0,"debug","","Debug callback called by validation layers.",null,null],[3,"DebugCallback","vulkano::instance::debug","Registration of a callback called by validation layers.",null,null],[3,"Message","","A message received by the callback.",null,null],[12,"ty","","Type of message.",607,null],[12,"layer_prefix","","Prefix of the layer that reported this message.",607,null],[12,"description","","Description of the message.",607,null],[3,"MessageTypes","","Type of message.",null,null],[12,"error","","An error that may cause undefined results, including an application crash.",608,null],[12,"warning","","An unexpected use.",608,null],[12,"performance_warning","","A potential non-optimal use.",608,null],[12,"information","","An informational message that may be handy when debugging an application.",608,null],[12,"debug","","Diagnostic information from the loader and layers.",608,null],[4,"DebugCallbackCreationError","","Error that can happen when creating a debug callback.",null,null],[13,"MissingExtension","","The `EXT_debug_report` extension was not enabled.",609,null],[11,"new","","Initializes a debug callback.",610,{"inputs":[{"name":"arc"},{"name":"messagetypes"},{"name":"f"}],"output":{"name":"result"}}],[11,"errors_and_warnings","","Initializes a debug callback with errors and warnings.",610,{"inputs":[{"name":"arc"},{"name":"f"}],"output":{"name":"result"}}],[11,"drop","","",610,{"inputs":[{"name":"debugcallback"}],"output":null}],[11,"hash","","",608,null],[11,"eq","","",608,{"inputs":[{"name":"messagetypes"},{"name":"messagetypes"}],"output":{"name":"bool"}}],[11,"ne","","",608,{"inputs":[{"name":"messagetypes"},{"name":"messagetypes"}],"output":{"name":"bool"}}],[11,"clone","","",608,{"inputs":[{"name":"messagetypes"}],"output":{"name":"messagetypes"}}],[11,"fmt","","",608,{"inputs":[{"name":"messagetypes"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"errors","","Builds a `MessageTypes` with all fields set to `false` expect `error`.",608,{"inputs":[],"output":{"name":"messagetypes"}}],[11,"errors_and_warnings","","Builds a `MessageTypes` with all fields set to `false` expect `error`, `warning`\nand `performance_warning`.",608,{"inputs":[],"output":{"name":"messagetypes"}}],[11,"none","","Builds a `MessageTypes` with all fields set to `false`.",608,{"inputs":[],"output":{"name":"messagetypes"}}],[11,"eq","","",609,{"inputs":[{"name":"debugcallbackcreationerror"},{"name":"debugcallbackcreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",609,{"inputs":[{"name":"debugcallbackcreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",609,{"inputs":[{"name":"debugcallbackcreationerror"}],"output":{"name":"debugcallbackcreationerror"}}],[11,"description","","",609,{"inputs":[{"name":"debugcallbackcreationerror"}],"output":{"name":"str"}}],[11,"fmt","","",609,{"inputs":[{"name":"debugcallbackcreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",609,{"inputs":[{"name":"error"}],"output":{"name":"debugcallbackcreationerror"}}],[11,"eq","vulkano::instance","",602,{"inputs":[{"name":"instanceextensions"},{"name":"instanceextensions"}],"output":{"name":"bool"}}],[11,"ne","","",602,{"inputs":[{"name":"instanceextensions"},{"name":"instanceextensions"}],"output":{"name":"bool"}}],[11,"clone","","",602,{"inputs":[{"name":"instanceextensions"}],"output":{"name":"instanceextensions"}}],[11,"fmt","","",602,{"inputs":[{"name":"instanceextensions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"none","","Returns an `Extensions` object with all members set to `false`.",602,{"inputs":[],"output":{"name":"instanceextensions"}}],[11,"build_extensions_list","","Builds a Vec containing the list of extensions.",602,{"inputs":[{"name":"instanceextensions"}],"output":{"name":"vec"}}],[11,"intersection","","Returns the intersection of this list and another list.",602,{"inputs":[{"name":"instanceextensions"},{"name":"instanceextensions"}],"output":{"name":"instanceextensions"}}],[11,"supported_by_core_raw","","See the docs of supported_by_core().",602,{"inputs":[],"output":{"name":"result"}}],[11,"supported_by_core","","Returns an `Extensions` object with extensions supported by the core driver.",602,{"inputs":[],"output":{"name":"instanceextensions"}}],[11,"eq","vulkano::device","",361,{"inputs":[{"name":"deviceextensions"},{"name":"deviceextensions"}],"output":{"name":"bool"}}],[11,"ne","","",361,{"inputs":[{"name":"deviceextensions"},{"name":"deviceextensions"}],"output":{"name":"bool"}}],[11,"clone","","",361,{"inputs":[{"name":"deviceextensions"}],"output":{"name":"deviceextensions"}}],[11,"fmt","","",361,{"inputs":[{"name":"deviceextensions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"none","","Returns an `Extensions` object with all members set to `false`.",361,{"inputs":[],"output":{"name":"deviceextensions"}}],[11,"build_extensions_list","","Builds a Vec containing the list of extensions.",361,{"inputs":[{"name":"deviceextensions"}],"output":{"name":"vec"}}],[11,"intersection","","Returns the intersection of this list and another list.",361,{"inputs":[{"name":"deviceextensions"},{"name":"deviceextensions"}],"output":{"name":"deviceextensions"}}],[11,"new","vulkano::instance","Initializes a new instance of Vulkan.",611,{"inputs":[{"name":"option"},{"name":"instanceextensions"},{"name":"l"}],"output":{"name":"result"}}],[11,"loaded_extensions","","Returns the list of extensions that have been loaded.",611,{"inputs":[{"name":"instance"}],"output":{"name":"instanceextensions"}}],[11,"fmt","","",611,{"inputs":[{"name":"instance"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"internal_object","","",611,{"inputs":[{"name":"instance"}],"output":{"name":"instance"}}],[11,"drop","","",611,{"inputs":[{"name":"instance"}],"output":null}],[11,"eq","","",604,{"inputs":[{"name":"instancecreationerror"},{"name":"instancecreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",604,{"inputs":[{"name":"instancecreationerror"},{"name":"instancecreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",604,{"inputs":[{"name":"instancecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",604,{"inputs":[{"name":"instancecreationerror"}],"output":{"name":"instancecreationerror"}}],[11,"description","","",604,{"inputs":[{"name":"instancecreationerror"}],"output":{"name":"str"}}],[11,"cause","","",604,{"inputs":[{"name":"instancecreationerror"}],"output":{"name":"option"}}],[11,"fmt","","",604,{"inputs":[{"name":"instancecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",604,{"inputs":[{"name":"oomerror"}],"output":{"name":"instancecreationerror"}}],[11,"from","","",604,{"inputs":[{"name":"error"}],"output":{"name":"instancecreationerror"}}],[11,"clone","","",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"physicaldevice"}}],[11,"fmt","","",612,{"inputs":[{"name":"physicaldevice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"enumerate","","Returns an iterator that enumerates the physical devices available.",612,{"inputs":[{"name":"arc"}],"output":{"name":"physicaldevicesiter"}}],[11,"from_index","","Returns a physical device from its index. Returns `None` if out of range.",612,{"inputs":[{"name":"arc"},{"name":"usize"}],"output":{"name":"option"}}],[11,"instance","","Returns the instance corresponding to this physical device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"arc"}}],[11,"index","","Returns the index of the physical device in the physical devices list.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"usize"}}],[11,"name","","Returns the human-readable name of the device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"string"}}],[11,"ty","","Returns the type of the device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"physicaldevicetype"}}],[11,"api_version","","Returns the version of Vulkan supported by this device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"version"}}],[11,"supported_features","","Returns the Vulkan features that are supported by this physical device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"features"}}],[11,"queue_families","","Builds an iterator that enumerates all the queue families on this physical device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"queuefamiliesiter"}}],[11,"queue_family_by_id","","Returns the queue family with the given index, or `None` if out of range.",612,{"inputs":[{"name":"physicaldevice"},{"name":"u32"}],"output":{"name":"option"}}],[11,"memory_types","","Builds an iterator that enumerates all the memory types on this physical device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"memorytypesiter"}}],[11,"memory_type_by_id","","Returns the memory type with the given index, or `None` if out of range.",612,{"inputs":[{"name":"physicaldevice"},{"name":"u32"}],"output":{"name":"option"}}],[11,"memory_heaps","","Builds an iterator that enumerates all the memory heaps on this physical device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"memoryheapsiter"}}],[11,"memory_heap_by_id","","Returns the memory heap with the given index, or `None` if out of range.",612,{"inputs":[{"name":"physicaldevice"},{"name":"u32"}],"output":{"name":"option"}}],[11,"limits","","Gives access to the limits of the physical device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"limits"}}],[11,"driver_version","","Returns an opaque number representing the version of the driver of this device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"u32"}}],[11,"pci_device_id","","Returns the PCI ID of the device.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"u32"}}],[11,"pci_vendor_id","","Returns the PCI ID of the vendor.",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"u32"}}],[11,"uuid","","Returns a unique identifier for the device.",612,null],[11,"internal_object","","",612,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"physicaldevice"}}],[11,"clone","","",613,{"inputs":[{"name":"physicaldevicesiter"}],"output":{"name":"physicaldevicesiter"}}],[11,"fmt","","",613,{"inputs":[{"name":"physicaldevicesiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",613,{"inputs":[{"name":"physicaldevicesiter"}],"output":{"name":"option"}}],[11,"hash","","",605,null],[11,"eq","","",605,{"inputs":[{"name":"physicaldevicetype"},{"name":"physicaldevicetype"}],"output":{"name":"bool"}}],[11,"clone","","",605,{"inputs":[{"name":"physicaldevicetype"}],"output":{"name":"physicaldevicetype"}}],[11,"fmt","","",605,{"inputs":[{"name":"physicaldevicetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",614,{"inputs":[{"name":"queuefamily"}],"output":{"name":"queuefamily"}}],[11,"fmt","","",614,{"inputs":[{"name":"queuefamily"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"physical_device","","Returns the physical device associated to this queue family.",614,{"inputs":[{"name":"queuefamily"}],"output":{"name":"physicaldevice"}}],[11,"id","","Returns the identifier of this queue family within the physical device.",614,{"inputs":[{"name":"queuefamily"}],"output":{"name":"u32"}}],[11,"queues_count","","Returns the number of queues that belong to this family.",614,{"inputs":[{"name":"queuefamily"}],"output":{"name":"usize"}}],[11,"supports_graphics","","Returns true if queues of this family can execute graphics operations.",614,{"inputs":[{"name":"queuefamily"}],"output":{"name":"bool"}}],[11,"supports_compute","","Returns true if queues of this family can execute compute operations.",614,{"inputs":[{"name":"queuefamily"}],"output":{"name":"bool"}}],[11,"supports_transfers","","Returns true if queues of this family can execute transfer operations.",614,{"inputs":[{"name":"queuefamily"}],"output":{"name":"bool"}}],[11,"supports_sparse_binding","","Returns true if queues of this family can execute sparse resources binding operations.",614,{"inputs":[{"name":"queuefamily"}],"output":{"name":"bool"}}],[11,"clone","","",615,{"inputs":[{"name":"queuefamiliesiter"}],"output":{"name":"queuefamiliesiter"}}],[11,"fmt","","",615,{"inputs":[{"name":"queuefamiliesiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",615,{"inputs":[{"name":"queuefamiliesiter"}],"output":{"name":"option"}}],[11,"size_hint","","",615,null],[11,"clone","","",616,{"inputs":[{"name":"memorytype"}],"output":{"name":"memorytype"}}],[11,"fmt","","",616,{"inputs":[{"name":"memorytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"physical_device","","Returns the physical device associated to this memory type.",616,{"inputs":[{"name":"memorytype"}],"output":{"name":"physicaldevice"}}],[11,"id","","Returns the identifier of this memory type within the physical device.",616,{"inputs":[{"name":"memorytype"}],"output":{"name":"u32"}}],[11,"heap","","Returns the heap that corresponds to this memory type.",616,{"inputs":[{"name":"memorytype"}],"output":{"name":"memoryheap"}}],[11,"is_device_local","","Returns true if the memory type is located on the device, which means that it&#39;s the most\nefficient for GPU accesses.",616,{"inputs":[{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"is_host_visible","","Returns true if the memory type can be accessed by the host.",616,{"inputs":[{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"is_host_coherent","","Returns true if modifications made by the host or the GPU on this memory type are\ninstantaneously visible to the other party. False means that changes have to be flushed.",616,{"inputs":[{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"is_host_cached","","Returns true if memory of this memory type is cached by the host. Host memory accesses to\ncached memory is faster than for uncached memory. However you are not guaranteed that it\nis coherent.",616,{"inputs":[{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"is_lazily_allocated","","Returns true if allocations made to this memory type is lazy.",616,{"inputs":[{"name":"memorytype"}],"output":{"name":"bool"}}],[11,"clone","","",617,{"inputs":[{"name":"memorytypesiter"}],"output":{"name":"memorytypesiter"}}],[11,"fmt","","",617,{"inputs":[{"name":"memorytypesiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",617,{"inputs":[{"name":"memorytypesiter"}],"output":{"name":"option"}}],[11,"size_hint","","",617,null],[11,"clone","","",618,{"inputs":[{"name":"memoryheap"}],"output":{"name":"memoryheap"}}],[11,"fmt","","",618,{"inputs":[{"name":"memoryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"physical_device","","Returns the physical device associated to this memory heap.",618,{"inputs":[{"name":"memoryheap"}],"output":{"name":"physicaldevice"}}],[11,"id","","Returns the identifier of this memory heap within the physical device.",618,{"inputs":[{"name":"memoryheap"}],"output":{"name":"u32"}}],[11,"size","","Returns the size in bytes on this heap.",618,{"inputs":[{"name":"memoryheap"}],"output":{"name":"usize"}}],[11,"is_device_local","","Returns true if the heap is local to the GPU.",618,{"inputs":[{"name":"memoryheap"}],"output":{"name":"bool"}}],[11,"clone","","",619,{"inputs":[{"name":"memoryheapsiter"}],"output":{"name":"memoryheapsiter"}}],[11,"fmt","","",619,{"inputs":[{"name":"memoryheapsiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",619,{"inputs":[{"name":"memoryheapsiter"}],"output":{"name":"option"}}],[11,"size_hint","","",619,null],[11,"max_image_dimension_1d","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_image_dimension_2d","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_image_dimension_3d","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_image_dimension_cube","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_image_array_layers","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_texel_buffer_elements","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_uniform_buffer_range","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_storage_buffer_range","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_push_constants_size","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_memory_allocation_count","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_sampler_allocation_count","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"buffer_image_granularity","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u64"}}],[11,"sparse_address_space_size","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u64"}}],[11,"max_bound_descriptor_sets","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_per_stage_descriptor_samplers","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_per_stage_descriptor_uniform_buffers","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_per_stage_descriptor_storage_buffers","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_per_stage_descriptor_sampled_images","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_per_stage_descriptor_storage_images","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_per_stage_descriptor_input_attachments","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_per_stage_resources","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_descriptor_set_samplers","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_descriptor_set_uniform_buffers","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_descriptor_set_uniform_buffers_dynamic","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_descriptor_set_storage_buffers","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_descriptor_set_storage_buffers_dynamic","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_descriptor_set_sampled_images","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_descriptor_set_storage_images","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_descriptor_set_input_attachments","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_vertex_input_attributes","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_vertex_input_bindings","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_vertex_input_attribute_offset","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_vertex_input_binding_stride","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_vertex_output_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_tessellation_generation_level","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_tessellation_patch_size","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_tessellation_control_per_vertex_input_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_tessellation_control_per_vertex_output_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_tessellation_control_per_patch_output_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_tessellation_control_total_output_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_tessellation_evaluation_input_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_tessellation_evaluation_output_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_geometry_shader_invocations","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_geometry_input_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_geometry_output_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_geometry_output_vertices","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_geometry_total_output_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_fragment_input_components","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_fragment_output_attachments","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_fragment_dual_src_attachments","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_fragment_combined_output_resources","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_compute_shared_memory_size","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_compute_work_group_count","","",620,null],[11,"max_compute_work_group_invocations","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_compute_work_group_size","","",620,null],[11,"sub_pixel_precision_bits","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"sub_texel_precision_bits","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"mipmap_precision_bits","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_draw_indexed_index_value","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_draw_indirect_count","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_sampler_lod_bias","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"f32"}}],[11,"max_sampler_anisotropy","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"f32"}}],[11,"max_viewports","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_viewport_dimensions","","",620,null],[11,"viewport_bounds_range","","",620,null],[11,"viewport_sub_pixel_bits","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"min_memory_map_alignment","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"usize"}}],[11,"min_texel_buffer_offset_alignment","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u64"}}],[11,"min_uniform_buffer_offset_alignment","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u64"}}],[11,"min_storage_buffer_offset_alignment","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u64"}}],[11,"min_texel_offset","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"i32"}}],[11,"max_texel_offset","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"min_texel_gather_offset","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"i32"}}],[11,"max_texel_gather_offset","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"min_interpolation_offset","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"f32"}}],[11,"max_interpolation_offset","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"f32"}}],[11,"sub_pixel_interpolation_offset_bits","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_framebuffer_width","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_framebuffer_height","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_framebuffer_layers","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"framebuffer_color_sample_counts","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"framebuffer_depth_sample_counts","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"framebuffer_stencil_sample_counts","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"framebuffer_no_attachments_sample_counts","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_color_attachments","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"sampled_image_color_sample_counts","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"sampled_image_integer_sample_counts","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"sampled_image_depth_sample_counts","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"sampled_image_stencil_sample_counts","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"storage_image_sample_counts","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_sample_mask_words","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"timestamp_compute_and_graphics","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"timestamp_period","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"f32"}}],[11,"max_clip_distances","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_cull_distances","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"max_combined_clip_and_cull_distances","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"discrete_queue_priorities","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"point_size_range","","",620,null],[11,"line_width_range","","",620,null],[11,"point_size_granularity","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"f32"}}],[11,"line_width_granularity","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"f32"}}],[11,"strict_lines","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"standard_sample_locations","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u32"}}],[11,"optimal_buffer_copy_offset_alignment","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u64"}}],[11,"optimal_buffer_copy_row_pitch_alignment","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u64"}}],[11,"non_coherent_atom_size","","",620,{"inputs":[{"name":"limits"}],"output":{"name":"u64"}}],[11,"name","","Returns the name of the layer.",621,{"inputs":[{"name":"layerproperties"}],"output":{"name":"str"}}],[11,"description","","Returns a description of the layer.",621,{"inputs":[{"name":"layerproperties"}],"output":{"name":"str"}}],[11,"vulkan_version","","Returns the version of Vulkan supported by this layer.",621,{"inputs":[{"name":"layerproperties"}],"output":{"name":"version"}}],[11,"implementation_version","","Returns an implementation-specific version number for this layer.",621,{"inputs":[{"name":"layerproperties"}],"output":{"name":"u32"}}],[11,"next","","",622,{"inputs":[{"name":"layersiterator"}],"output":{"name":"option"}}],[11,"size_hint","","",622,null],[11,"hash","core::num","",623,null],[11,"default","","",623,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"fmt","","",623,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",623,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"shl","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",623,null],[11,"shr","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",623,null],[11,"shl","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",623,null],[11,"shr","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",623,null],[11,"shl","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",623,null],[11,"shr","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",623,null],[11,"shl","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",623,null],[11,"shr","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",623,null],[11,"shl","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",623,null],[11,"shr","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",623,null],[11,"shl","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",623,null],[11,"shr","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",623,null],[11,"shl","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",623,null],[11,"shr","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",623,null],[11,"shl","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",623,null],[11,"shr","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",623,null],[11,"shl","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",623,null],[11,"shr","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",623,null],[11,"shl","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",623,null],[11,"shr","","",623,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",623,null],[11,"add","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",623,null],[11,"sub","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",623,null],[11,"mul","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",623,null],[11,"div","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",623,null],[11,"rem","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",623,null],[11,"not","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",623,null],[11,"bitor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",623,null],[11,"bitand","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",623,null],[11,"neg","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",623,null],[11,"sub","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",623,null],[11,"mul","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",623,null],[11,"div","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",623,null],[11,"rem","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",623,null],[11,"not","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",623,null],[11,"bitor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",623,null],[11,"bitand","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",623,null],[11,"neg","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",623,null],[11,"sub","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",623,null],[11,"mul","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",623,null],[11,"div","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",623,null],[11,"rem","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",623,null],[11,"not","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",623,null],[11,"bitor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",623,null],[11,"bitand","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",623,null],[11,"neg","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",623,null],[11,"sub","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",623,null],[11,"mul","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",623,null],[11,"div","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",623,null],[11,"rem","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",623,null],[11,"not","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",623,null],[11,"bitor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",623,null],[11,"bitand","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",623,null],[11,"neg","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",623,null],[11,"sub","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",623,null],[11,"mul","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",623,null],[11,"div","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",623,null],[11,"rem","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",623,null],[11,"not","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",623,null],[11,"bitor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",623,null],[11,"bitand","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",623,null],[11,"neg","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",623,null],[11,"sub","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",623,null],[11,"mul","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",623,null],[11,"div","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",623,null],[11,"rem","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",623,null],[11,"not","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",623,null],[11,"bitor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",623,null],[11,"bitand","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",623,null],[11,"neg","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",623,null],[11,"sub","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",623,null],[11,"mul","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",623,null],[11,"div","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",623,null],[11,"rem","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",623,null],[11,"not","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",623,null],[11,"bitor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",623,null],[11,"bitand","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",623,null],[11,"neg","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",623,null],[11,"sub","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",623,null],[11,"mul","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",623,null],[11,"div","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",623,null],[11,"rem","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",623,null],[11,"not","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",623,null],[11,"bitor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",623,null],[11,"bitand","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",623,null],[11,"neg","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",623,null],[11,"sub","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",623,null],[11,"mul","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",623,null],[11,"div","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",623,null],[11,"rem","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",623,null],[11,"not","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",623,null],[11,"bitor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",623,null],[11,"bitand","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",623,null],[11,"neg","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",623,null],[11,"sub","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",623,null],[11,"mul","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",623,null],[11,"div","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",623,null],[11,"rem","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",623,null],[11,"not","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",623,null],[11,"bitor","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",623,null],[11,"bitand","","",623,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",623,null],[11,"neg","","",623,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::dec2flt","",25,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",25,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",25,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num","",624,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",624,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",624,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",24,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",24,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",24,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",625,null],[11,"fmt","","",625,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",625,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",625,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",625,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",625,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",625,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",625,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",625,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",625,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",625,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",625,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",625,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"fmt","core::char","",626,{"inputs":[{"name":"escapeunicode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",626,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"next","","",626,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",626,null],[11,"fmt","","",627,{"inputs":[{"name":"escapedefault"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",627,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"next","","",627,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",627,null],[11,"count","","",627,{"inputs":[{"name":"escapedefault"}],"output":{"name":"usize"}}],[11,"nth","","",627,{"inputs":[{"name":"escapedefault"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",627,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"fmt","","",628,{"inputs":[{"name":"encodeutf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",628,null],[11,"next","","",628,{"inputs":[{"name":"encodeutf8"}],"output":{"name":"option"}}],[11,"size_hint","","",628,null],[11,"fmt","","",629,{"inputs":[{"name":"encodeutf16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",629,null],[11,"next","","",629,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",629,null],[11,"fmt","core::slice","",630,{"inputs":[{"name":"iter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_slice","","View the underlying data as a subslice of the original data.",630,null],[11,"next","","",630,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",630,null],[11,"count","","",630,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",630,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",630,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",630,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",630,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"fmt","","",631,{"inputs":[{"name":"itermut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",631,null],[11,"next","","",631,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",631,null],[11,"count","","",631,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",631,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",631,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",631,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"fmt","","",632,{"inputs":[{"name":"split"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",632,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",632,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",632,null],[11,"next_back","","",632,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"fmt","","",633,{"inputs":[{"name":"splitmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",633,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",633,null],[11,"next_back","","",633,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"fmt","","",634,{"inputs":[{"name":"splitn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",635,{"inputs":[{"name":"rsplitn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",636,{"inputs":[{"name":"splitnmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",637,{"inputs":[{"name":"rsplitnmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",634,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",634,null],[11,"next","","",635,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",635,null],[11,"next","","",636,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",636,null],[11,"next","","",637,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",637,null],[11,"fmt","","",638,{"inputs":[{"name":"windows"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",638,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",638,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",638,null],[11,"count","","",638,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",638,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",638,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",638,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"fmt","","",639,{"inputs":[{"name":"chunks"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",639,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",639,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",639,null],[11,"count","","",639,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",639,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",639,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",639,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"fmt","","",640,{"inputs":[{"name":"chunksmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",640,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",640,null],[11,"count","","",640,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",640,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",640,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",640,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"eq","core::str","",22,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",22,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",23,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",23,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",23,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",23,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",641,{"inputs":[{"name":"chars"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",641,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",641,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",641,null],[11,"next_back","","",641,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",641,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"fmt","","",642,{"inputs":[{"name":"charindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",642,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",642,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",642,null],[11,"next_back","","",642,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",642,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"fmt","","",643,{"inputs":[{"name":"bytes"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",643,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",643,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",643,null],[11,"count","","",643,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",643,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",643,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",643,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",643,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"fmt","","",644,{"inputs":[{"name":"split"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",644,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",644,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"fmt","","",645,{"inputs":[{"name":"rsplit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",645,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",645,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",644,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",645,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"fmt","","",646,{"inputs":[{"name":"splitterminator"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",646,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",646,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"fmt","","",647,{"inputs":[{"name":"rsplitterminator"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",647,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",647,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",646,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",647,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"fmt","","",648,{"inputs":[{"name":"splitn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",648,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",648,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"fmt","","",649,{"inputs":[{"name":"rsplitn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",649,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",649,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"fmt","","",650,{"inputs":[{"name":"matchindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",650,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",650,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"fmt","","",651,{"inputs":[{"name":"rmatchindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",651,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",651,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",650,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",651,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"fmt","","",652,{"inputs":[{"name":"matches"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",652,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",652,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"fmt","","",653,{"inputs":[{"name":"rmatches"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",653,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",653,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",652,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",653,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"fmt","","",654,{"inputs":[{"name":"lines"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",654,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",654,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",654,null],[11,"next_back","","",654,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"fmt","","",655,{"inputs":[{"name":"linesany"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",655,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"next","","",655,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",655,null],[11,"next_back","","",655,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"fmt","","",656,{"inputs":[{"name":"charrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",656,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"fmt","core::fmt","",657,{"inputs":[{"name":"alignment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",658,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",658,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",659,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",659,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the set output.",660,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",660,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",660,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",661,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",661,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",661,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",662,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",662,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",662,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"partial_cmp","core::fmt","",663,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"option"}}],[11,"eq","","",663,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"cmp","","",663,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"ordering"}}],[11,"hash","","",663,null],[11,"default","","",663,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",663,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",663,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",664,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",664,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",664,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",665,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",665,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",665,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",665,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",665,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",665,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",665,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",665,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",665,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",665,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",665,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",665,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",665,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",665,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",665,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",665,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",665,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",665,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",665,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",665,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",665,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",663,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",315,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",316,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",318,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",319,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",320,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",321,{"inputs":[{"name":"unsafecell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","vulkano::instance","",606,{"inputs":[{"name":"loadingerror"}],"output":{"name":"loadingerror"}}],[11,"fmt","","",606,{"inputs":[{"name":"loadingerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",606,{"inputs":[{"name":"loadingerror"}],"output":{"name":"str"}}],[11,"fmt","","",606,{"inputs":[{"name":"loadingerror"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"memory","vulkano","GPU-visible memory allocation.",null,null],[3,"CpuAccess","vulkano::memory","Object that can be used to read or write the content of a `MappedDeviceMemory`.",null,null],[3,"DeviceMemory","","Represents memory that has been allocated.",null,null],[3,"MappedDeviceMemory","","Represents memory that has been allocated and mapped in CPU accessible space.",null,null],[3,"MemoryRequirements","","Represents requirements expressed by the Vulkan implementation.",null,null],[12,"size","","Number of bytes of memory required.",666,null],[12,"alignment","","Alignment of the requirement buffer. The base memory address must be a multiple\nof this value.",666,null],[12,"memory_type_bits","","Indicates which memory types can be used. Each bit that is set to 1 means that the memory\ntype whose index is the same as the position of the bit can be used.",666,null],[11,"fmt","","",667,{"inputs":[{"name":"devicememory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"alloc","","Allocates a chunk of memory from the device.",667,{"inputs":[{"name":"d"},{"name":"memorytype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"alloc_and_map","","Allocates a chunk of memory and maps it.",667,{"inputs":[{"name":"d"},{"name":"memorytype"},{"name":"usize"}],"output":{"name":"result"}}],[11,"memory_type","","Returns the memory type this chunk was allocated on.",667,{"inputs":[{"name":"devicememory"}],"output":{"name":"memorytype"}}],[11,"size","","Returns the size in bytes of that memory chunk.",667,{"inputs":[{"name":"devicememory"}],"output":{"name":"usize"}}],[11,"device","","Returns the device associated with this allocation.",667,{"inputs":[{"name":"devicememory"}],"output":{"name":"device"}}],[11,"internal_object","","",667,{"inputs":[{"name":"devicememory"}],"output":{"name":"devicememory"}}],[11,"drop","","",667,{"inputs":[{"name":"devicememory"}],"output":null}],[11,"fmt","","",668,{"inputs":[{"name":"mappeddevicememory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"memory","","Returns the underlying `DeviceMemory`.",668,{"inputs":[{"name":"mappeddevicememory"}],"output":{"name":"devicememory"}}],[11,"read_write","","Gives access to the content of the memory.",668,{"inputs":[{"name":"mappeddevicememory"},{"name":"range"}],"output":{"name":"cpuaccess"}}],[11,"drop","","",668,{"inputs":[{"name":"mappeddevicememory"}],"output":null}],[11,"map","","Makes a new `CpuAccess` to access a sub-part of the current `CpuAccess`.",669,{"inputs":[{"name":"cpuaccess"},{"name":"f"}],"output":{"name":"cpuaccess"}}],[11,"deref","","",669,{"inputs":[{"name":"cpuaccess"}],"output":{"name":"t"}}],[11,"deref_mut","","",669,{"inputs":[{"name":"cpuaccess"}],"output":{"name":"t"}}],[11,"drop","","",669,{"inputs":[{"name":"cpuaccess"}],"output":null}],[0,"pool","","",null,null],[3,"StdMemoryPool","vulkano::memory::pool","",null,null],[3,"StdMemoryPoolAlloc","","",null,null],[3,"StdHostVisibleMemoryTypePool","","Memory pool that operates on a given memory type.",null,null],[3,"StdHostVisibleMemoryTypePoolAlloc","","",null,null],[3,"StdNonHostVisibleMemoryTypePool","","Memory pool that operates on a given memory type.",null,null],[3,"StdNonHostVisibleMemoryTypePoolAlloc","","",null,null],[4,"AllocLayout","","Layout of the object being allocated.",null,null],[13,"Linear","","",670,null],[13,"Optimal","","",670,null],[11,"fmt","","",671,{"inputs":[{"name":"stdhostvisiblememorytypepool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new pool that will operate on the given memory type.",671,{"inputs":[{"name":"arc"},{"name":"memorytype"}],"output":{"name":"arc"}}],[11,"alloc","","Allocates memory from the pool.",671,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"device","","Returns the device this pool operates on.",671,{"inputs":[{"name":"stdhostvisiblememorytypepool"}],"output":{"name":"arc"}}],[11,"memory_type","","Returns the memory type this pool operates on.",671,{"inputs":[{"name":"stdhostvisiblememorytypepool"}],"output":{"name":"memorytype"}}],[11,"fmt","","",672,{"inputs":[{"name":"stdhostvisiblememorytypepoolalloc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"memory","","",672,{"inputs":[{"name":"stdhostvisiblememorytypepoolalloc"}],"output":{"name":"mappeddevicememory"}}],[11,"offset","","",672,{"inputs":[{"name":"stdhostvisiblememorytypepoolalloc"}],"output":{"name":"usize"}}],[11,"size","","",672,{"inputs":[{"name":"stdhostvisiblememorytypepoolalloc"}],"output":{"name":"usize"}}],[11,"drop","","",672,{"inputs":[{"name":"stdhostvisiblememorytypepoolalloc"}],"output":null}],[11,"fmt","","",673,{"inputs":[{"name":"stdnonhostvisiblememorytypepool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new pool that will operate on the given memory type.",673,{"inputs":[{"name":"arc"},{"name":"memorytype"}],"output":{"name":"arc"}}],[11,"alloc","","Allocates memory from the pool.",673,{"inputs":[{"name":"arc"},{"name":"usize"},{"name":"usize"}],"output":{"name":"result"}}],[11,"device","","Returns the device this pool operates on.",673,{"inputs":[{"name":"stdnonhostvisiblememorytypepool"}],"output":{"name":"arc"}}],[11,"memory_type","","Returns the memory type this pool operates on.",673,{"inputs":[{"name":"stdnonhostvisiblememorytypepool"}],"output":{"name":"memorytype"}}],[11,"fmt","","",674,{"inputs":[{"name":"stdnonhostvisiblememorytypepoolalloc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"memory","","",674,{"inputs":[{"name":"stdnonhostvisiblememorytypepoolalloc"}],"output":{"name":"devicememory"}}],[11,"offset","","",674,{"inputs":[{"name":"stdnonhostvisiblememorytypepoolalloc"}],"output":{"name":"usize"}}],[11,"size","","",674,{"inputs":[{"name":"stdnonhostvisiblememorytypepoolalloc"}],"output":{"name":"usize"}}],[11,"drop","","",674,{"inputs":[{"name":"stdnonhostvisiblememorytypepoolalloc"}],"output":null}],[11,"fmt","","",675,{"inputs":[{"name":"stdmemorypool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new pool.",675,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"alloc","","",675,{"inputs":[{"name":"arc"},{"name":"memorytype"},{"name":"usize"},{"name":"usize"},{"name":"alloclayout"}],"output":{"name":"result"}}],[11,"fmt","","",676,{"inputs":[{"name":"stdmemorypoolalloc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"size","","",676,{"inputs":[{"name":"stdmemorypoolalloc"}],"output":{"name":"usize"}}],[11,"memory","","",676,{"inputs":[{"name":"stdmemorypoolalloc"}],"output":{"name":"devicememory"}}],[11,"mapped_memory","","",676,{"inputs":[{"name":"stdmemorypoolalloc"}],"output":{"name":"option"}}],[11,"offset","","",676,{"inputs":[{"name":"stdmemorypoolalloc"}],"output":{"name":"usize"}}],[8,"MemoryPool","","Pool of GPU-visible memory that can be allocated from.",null,null],[16,"Alloc","","Object that represents a single allocation. Its destructor should free the chunk.",677,null],[10,"alloc","","Allocates memory from the pool.",677,{"inputs":[{"name":"arc"},{"name":"memorytype"},{"name":"usize"},{"name":"usize"},{"name":"alloclayout"}],"output":{"name":"result"}}],[8,"MemoryPoolAlloc","","Object that represents a single allocation. Its destructor should free the chunk.",null,null],[10,"mapped_memory","","Returns the memory object from which this is allocated. Returns `None` if the memory is\nnot mapped.",678,{"inputs":[{"name":"memorypoolalloc"}],"output":{"name":"option"}}],[10,"memory","","Returns the memory object from which this is allocated.",678,{"inputs":[{"name":"memorypoolalloc"}],"output":{"name":"devicememory"}}],[10,"offset","","Returns the offset at the start of the memory where the first byte of this allocation\nresides.",678,{"inputs":[{"name":"memorypoolalloc"}],"output":{"name":"usize"}}],[11,"hash","","",670,null],[11,"eq","","",670,{"inputs":[{"name":"alloclayout"},{"name":"alloclayout"}],"output":{"name":"bool"}}],[11,"clone","","",670,{"inputs":[{"name":"alloclayout"}],"output":{"name":"alloclayout"}}],[11,"fmt","","",670,{"inputs":[{"name":"alloclayout"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Content","vulkano::memory","Trait for types of data that can be mapped.",null,null],[10,"ref_from_ptr","","Builds a pointer to this type from a raw pointer.",679,null],[10,"is_size_suitable","","Returns true if the size is suitable to store a type like this.",679,{"inputs":[{"name":"usize"}],"output":{"name":"bool"}}],[10,"indiv_size","","Returns the size of an individual element.",679,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","","",666,{"inputs":[{"name":"memoryrequirements"}],"output":{"name":"memoryrequirements"}}],[11,"fmt","","",666,{"inputs":[{"name":"memoryrequirements"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"pipeline","vulkano","Tells the Vulkan implementation how it should perform a graphical or compute operation.",null,null],[3,"ComputePipeline","vulkano::pipeline","A pipeline object that describes to the Vulkan implementation how it should perform compute\noperations.",null,null],[3,"GraphicsPipeline","","",null,null],[3,"GraphicsPipelineParams","","",null,null],[12,"vertex_input","","",680,null],[12,"vertex_shader","","",680,null],[12,"input_assembly","","",680,null],[12,"geometry_shader","","",680,null],[12,"viewport","","",680,null],[12,"raster","","",680,null],[12,"multisample","","",680,null],[12,"fragment_shader","","",680,null],[12,"depth_stencil","","",680,null],[12,"blend","","",680,null],[12,"layout","","",680,null],[12,"render_pass","","",680,null],[11,"new","","Builds a new `ComputePipeline`.",681,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"computeshaderentrypoint"},{"name":"css"}],"output":{"name":"result"}}],[11,"device","","Returns the `Device` this compute pipeline was created with.",681,{"inputs":[{"name":"computepipeline"}],"output":{"name":"arc"}}],[11,"layout","","Returns the pipeline layout used in this compute pipeline.",681,{"inputs":[{"name":"computepipeline"}],"output":{"name":"arc"}}],[11,"internal_object","","",681,{"inputs":[{"name":"computepipeline"}],"output":{"name":"pipeline"}}],[11,"drop","","",681,{"inputs":[{"name":"computepipeline"}],"output":null}],[11,"new","","Builds a new graphics pipeline object.",682,{"inputs":[{"name":"arc"},{"name":"graphicspipelineparams"}],"output":{"name":"result"}}],[11,"with_geometry_shader","","Builds a new graphics pipeline object with a geometry shader.",682,{"inputs":[{"name":"arc"},{"name":"graphicspipelineparams"}],"output":{"name":"result"}}],[11,"vertex_definition","","Returns the vertex definition used in the constructor.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"mv"}}],[11,"layout","","Returns the pipeline layout used in the constructor.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"arc"}}],[11,"render_pass","","Returns the render pass used in the constructor.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"arc"}}],[11,"subpass","","Returns the pass used in the constructor.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"subpass"}}],[11,"has_dynamic_line_width","","Returns true if the line width used by this pipeline is dynamic.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"bool"}}],[11,"num_viewports","","Returns the number of viewports and scissors of this pipeline.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"u32"}}],[11,"has_dynamic_viewports","","Returns true if the viewports used by this pipeline are dynamic.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"bool"}}],[11,"has_dynamic_scissors","","Returns true if the scissors used by this pipeline are dynamic.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"bool"}}],[11,"has_dynamic_depth_bounds","","Returns true if the depth bounds used by this pipeline are dynamic.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"bool"}}],[11,"has_dynamic_stencil_compare_mask","","Returns true if the stencil compare masks used by this pipeline are dynamic.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"bool"}}],[11,"has_dynamic_stencil_write_mask","","Returns true if the stencil write masks used by this pipeline are dynamic.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"bool"}}],[11,"has_dynamic_stencil_reference","","Returns true if the stencil references used by this pipeline are dynamic.",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"bool"}}],[11,"internal_object","","",682,{"inputs":[{"name":"graphicspipeline"}],"output":{"name":"pipeline"}}],[11,"drop","","",682,{"inputs":[{"name":"graphicspipeline"}],"output":null}],[0,"blend","","Defines how the color output of the fragment shader is written to the attachment.",null,null],[3,"Blend","vulkano::pipeline::blend","",null,null],[12,"logic_op","","",683,null],[12,"attachments","","",683,null],[12,"blend_constants","","The constant color to use for the `Constant*` blending operation.",683,null],[3,"AttachmentBlend","","",null,null],[12,"enabled","","",684,null],[12,"color_op","","",684,null],[12,"color_src","","",684,null],[12,"color_dst","","",684,null],[12,"alpha_op","","",684,null],[12,"alpha_src","","",684,null],[12,"alpha_dst","","",684,null],[12,"mask_red","","",684,null],[12,"mask_green","","",684,null],[12,"mask_blue","","",684,null],[12,"mask_alpha","","",684,null],[4,"AttachmentsBlend","","",null,null],[13,"Collective","","",685,null],[13,"Individual","","",685,null],[4,"LogicOp","","Which logical operation to apply to the output values.",null,null],[13,"Clear","","Returns `0`.",686,null],[13,"And","","Returns `src &amp; dest`.",686,null],[13,"AndReverse","","Returns `src &amp; !dest`.",686,null],[13,"Copy","","Returns `src`.",686,null],[13,"AndInverted","","Returns `!src &amp; dest`.",686,null],[13,"Noop","","Returns `dest`.",686,null],[13,"Xor","","Returns `src ^ dest`.",686,null],[13,"Or","","Returns `src | dest`.",686,null],[13,"Nor","","Returns `!(src | dest)`.",686,null],[13,"Equivalent","","Returns `!(src ^ dest)`.",686,null],[13,"Invert","","Returns `!dest`.",686,null],[13,"OrReverse","","Returns `src | !dest.",686,null],[13,"CopyInverted","","Returns `!src`.",686,null],[13,"OrInverted","","Returns `!src | dest`.",686,null],[13,"Nand","","Returns `!(src &amp; dest)`.",686,null],[13,"Set","","Returns `!0` (all bits set to 1).",686,null],[4,"BlendOp","","",null,null],[13,"Add","","",687,null],[13,"Subtract","","",687,null],[13,"ReverseSubtract","","",687,null],[13,"Min","","",687,null],[13,"Max","","",687,null],[4,"BlendFactor","","",null,null],[13,"Zero","","",688,null],[13,"One","","",688,null],[13,"SrcColor","","",688,null],[13,"OneMinusSrcColor","","",688,null],[13,"DstColor","","",688,null],[13,"OneMinusDstColor","","",688,null],[13,"SrcAlpha","","",688,null],[13,"OneMinusSrcAlpha","","",688,null],[13,"DstAlpha","","",688,null],[13,"OneMinusDstAlpha","","",688,null],[13,"ConstantColor","","",688,null],[13,"OneMinusConstantColor","","",688,null],[13,"ConstantAlpha","","",688,null],[13,"OneMinusConstantAlpha","","",688,null],[13,"SrcAlphaSaturate","","",688,null],[13,"Src1Color","","",688,null],[13,"OneMinusSrc1Color","","",688,null],[13,"Src1Alpha","","",688,null],[13,"OneMinusSrc1Alpha","","",688,null],[11,"eq","","",683,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"ne","","",683,{"inputs":[{"name":"blend"},{"name":"blend"}],"output":{"name":"bool"}}],[11,"clone","","",683,{"inputs":[{"name":"blend"}],"output":{"name":"blend"}}],[11,"fmt","","",683,{"inputs":[{"name":"blend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pass_through","","Returns a `Blend` object that directly writes colors and alpha on the surface.",683,{"inputs":[],"output":{"name":"blend"}}],[11,"alpha_blending","","Returns a `Blend` object that adds transparent objects over others.",683,{"inputs":[],"output":{"name":"blend"}}],[11,"eq","","",685,{"inputs":[{"name":"attachmentsblend"},{"name":"attachmentsblend"}],"output":{"name":"bool"}}],[11,"ne","","",685,{"inputs":[{"name":"attachmentsblend"},{"name":"attachmentsblend"}],"output":{"name":"bool"}}],[11,"clone","","",685,{"inputs":[{"name":"attachmentsblend"}],"output":{"name":"attachmentsblend"}}],[11,"fmt","","",685,{"inputs":[{"name":"attachmentsblend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",684,{"inputs":[{"name":"attachmentblend"},{"name":"attachmentblend"}],"output":{"name":"bool"}}],[11,"ne","","",684,{"inputs":[{"name":"attachmentblend"},{"name":"attachmentblend"}],"output":{"name":"bool"}}],[11,"clone","","",684,{"inputs":[{"name":"attachmentblend"}],"output":{"name":"attachmentblend"}}],[11,"fmt","","",684,{"inputs":[{"name":"attachmentblend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",686,{"inputs":[{"name":"logicop"},{"name":"logicop"}],"output":{"name":"bool"}}],[11,"clone","","",686,{"inputs":[{"name":"logicop"}],"output":{"name":"logicop"}}],[11,"fmt","","",686,{"inputs":[{"name":"logicop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",686,{"inputs":[],"output":{"name":"logicop"}}],[11,"eq","","",687,{"inputs":[{"name":"blendop"},{"name":"blendop"}],"output":{"name":"bool"}}],[11,"clone","","",687,{"inputs":[{"name":"blendop"}],"output":{"name":"blendop"}}],[11,"fmt","","",687,{"inputs":[{"name":"blendop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",688,{"inputs":[{"name":"blendfactor"},{"name":"blendfactor"}],"output":{"name":"bool"}}],[11,"clone","","",688,{"inputs":[{"name":"blendfactor"}],"output":{"name":"blendfactor"}}],[11,"fmt","","",688,{"inputs":[{"name":"blendfactor"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"cache","vulkano::pipeline","Cache the pipeline objects to disk for faster reloads.",null,null],[3,"PipelineCache","vulkano::pipeline::cache","Opaque cache that contains pipeline objects.",null,null],[11,"with_data","","Builds a new pipeline cache from existing data.",689,null],[11,"empty","","Builds a new empty pipeline cache.",689,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"merge","","Merges other pipeline caches into this one.",689,{"inputs":[{"name":"pipelinecache"},{"name":"i"}],"output":{"name":"result"}}],[11,"get_data","","Obtains the data from the cache.",689,{"inputs":[{"name":"pipelinecache"}],"output":{"name":"result"}}],[11,"internal_object","","",689,{"inputs":[{"name":"pipelinecache"}],"output":{"name":"pipelinecache"}}],[11,"drop","","",689,{"inputs":[{"name":"pipelinecache"}],"output":null}],[0,"depth_stencil","vulkano::pipeline","Depth and stencil operations description.",null,null],[3,"DepthStencil","vulkano::pipeline::depth_stencil","Configuration of the depth and stencil tests.",null,null],[12,"depth_compare","","Comparison to use between the depth value of each fragment and the depth value currently\nin the depth buffer.",690,null],[12,"depth_write","","If `true`, then the value in the depth buffer will be updated when the depth test succeeds.",690,null],[12,"depth_bounds_test","","Allows you to ask the GPU to exclude fragments that are outside of a certain range. This is\ndone in addition to the regular depth test.",690,null],[12,"stencil_front","","Stencil operations to use for points, lines and triangles whose front is facing the user.",690,null],[12,"stencil_back","","Stencil operations to use for triangles whose back is facing the user.",690,null],[3,"Stencil","","Configuration of a stencil test.",null,null],[12,"compare","","The comparison to perform between the existing stencil value in the stencil buffer, and\nthe reference value (given by `reference`).",691,null],[12,"pass_op","","The operation to perform when both the depth test and the stencil test passed.",691,null],[12,"fail_op","","The operation to perform when the stencil test failed.",691,null],[12,"depth_fail_op","","The operation to perform when the stencil test passed but the depth test failed.",691,null],[12,"compare_mask","","Selects the bits of the unsigned integer stencil values participating in the stencil test.",691,null],[12,"write_mask","","Selects the bits of the unsigned integer stencil values updated by the stencil test in the\nstencil framebuffer attachment.",691,null],[12,"reference","","Reference value that is used in the unsigned stencil comparison.",691,null],[4,"StencilOp","","Operation to perform after the depth and stencil tests.",null,null],[13,"Keep","","",692,null],[13,"Zero","","",692,null],[13,"Replace","","",692,null],[13,"IncrementAndClamp","","",692,null],[13,"DecrementAndClamp","","",692,null],[13,"Invert","","",692,null],[13,"IncrementAndWrap","","",692,null],[13,"DecrementAndWrap","","",692,null],[4,"DepthBounds","","Allows you to ask the GPU to exclude fragments that are outside of a certain range.",null,null],[13,"Disabled","","The test is disabled. All fragments pass the depth bounds test.",693,null],[13,"Fixed","","Fragments that are within the given range do pass the test. Values are depth values\nbetween 0.0 and 1.0.",693,null],[13,"Dynamic","","The depth bounds test is enabled, but the range will need to specified when you submit\na draw command.",693,null],[4,"Compare","","Specifies how two values should be compared to decide whether a test passes or fails.",null,null],[13,"Never","","The test never passes.",694,null],[13,"Less","","The test passes if `value &lt; reference_value`.",694,null],[13,"Equal","","The test passes if `value == reference_value`.",694,null],[13,"LessOrEqual","","The test passes if `value &lt;= reference_value`.",694,null],[13,"Greater","","The test passes if `value &gt; reference_value`.",694,null],[13,"NotEqual","","The test passes if `value != reference_value`.",694,null],[13,"GreaterOrEqual","","The test passes if `value &gt;= reference_value`.",694,null],[13,"Always","","The test always passes.",694,null],[11,"clone","","",690,{"inputs":[{"name":"depthstencil"}],"output":{"name":"depthstencil"}}],[11,"fmt","","",690,{"inputs":[{"name":"depthstencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"disabled","","Creates a `DepthStencil` where both the depth and stencil tests are disabled and have\nno effect.",690,{"inputs":[],"output":{"name":"depthstencil"}}],[11,"simple_depth_test","","Creates a `DepthStencil` with a `Less` depth test, `depth_write` set to true, and stencil\ntesting disabled.",690,{"inputs":[],"output":{"name":"depthstencil"}}],[11,"default","","",690,{"inputs":[],"output":{"name":"depthstencil"}}],[11,"clone","","",691,{"inputs":[{"name":"stencil"}],"output":{"name":"stencil"}}],[11,"fmt","","",691,{"inputs":[{"name":"stencil"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"always_keep","","Returns true if the stencil operation will always result in `Keep`.",691,{"inputs":[{"name":"stencil"}],"output":{"name":"bool"}}],[11,"default","","",691,{"inputs":[],"output":{"name":"stencil"}}],[11,"eq","","",692,{"inputs":[{"name":"stencilop"},{"name":"stencilop"}],"output":{"name":"bool"}}],[11,"clone","","",692,{"inputs":[{"name":"stencilop"}],"output":{"name":"stencilop"}}],[11,"fmt","","",692,{"inputs":[{"name":"stencilop"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",693,{"inputs":[{"name":"depthbounds"},{"name":"depthbounds"}],"output":{"name":"bool"}}],[11,"ne","","",693,{"inputs":[{"name":"depthbounds"},{"name":"depthbounds"}],"output":{"name":"bool"}}],[11,"clone","","",693,{"inputs":[{"name":"depthbounds"}],"output":{"name":"depthbounds"}}],[11,"fmt","","",693,{"inputs":[{"name":"depthbounds"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_dynamic","","Returns true if equal to `DepthBounds::Dynamic`.",693,{"inputs":[{"name":"depthbounds"}],"output":{"name":"bool"}}],[11,"eq","","",694,{"inputs":[{"name":"compare"},{"name":"compare"}],"output":{"name":"bool"}}],[11,"clone","","",694,{"inputs":[{"name":"compare"}],"output":{"name":"compare"}}],[11,"fmt","","",694,{"inputs":[{"name":"compare"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"input_assembly","vulkano::pipeline","Assembling vertices into primitives.",null,null],[3,"InputAssembly","vulkano::pipeline::input_assembly","How the input assembly stage should behave.",null,null],[12,"topology","","The type of primitives.",695,null],[12,"primitive_restart_enable","","If true, then the special index value `0xffff` or `0xffffffff` will tell the GPU that it is\nthe end of the current primitive. A new primitive will restart at the next index.",695,null],[4,"PrimitiveTopology","","Describes how vertices must be grouped together to form primitives.",null,null],[13,"PointList","","",696,null],[13,"LineList","","",696,null],[13,"LineStrip","","",696,null],[13,"TriangleList","","",696,null],[13,"TriangleStrip","","",696,null],[13,"TriangleFan","","",696,null],[13,"LineListWithAdjacency","","",696,null],[13,"LineStripWithAdjacency","","",696,null],[13,"TriangleListWithAdjancecy","","",696,null],[13,"TriangleStripWithAdjacency","","",696,null],[13,"PatchList","","",696,null],[4,"IndexType","","An enumeration of all valid index types.",null,null],[13,"U16","","",697,null],[13,"U32","","",697,null],[8,"Index","","Trait for types that can be used as indices by the GPU.",null,null],[10,"ty","","Returns the type of data.",698,{"inputs":[],"output":{"name":"indextype"}}],[11,"fmt","","",695,{"inputs":[{"name":"inputassembly"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",695,{"inputs":[{"name":"inputassembly"}],"output":{"name":"inputassembly"}}],[11,"triangle_list","","Builds an `InputAssembly` struct with the `TriangleList` topology.",695,{"inputs":[],"output":{"name":"inputassembly"}}],[11,"eq","","",696,{"inputs":[{"name":"primitivetopology"},{"name":"primitivetopology"}],"output":{"name":"bool"}}],[11,"fmt","","",696,{"inputs":[{"name":"primitivetopology"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",696,{"inputs":[{"name":"primitivetopology"}],"output":{"name":"primitivetopology"}}],[11,"supports_primitive_restart","","Returns true if this primitive topology supports using primitives restart.",696,{"inputs":[{"name":"primitivetopology"}],"output":{"name":"bool"}}],[11,"fmt","","",697,{"inputs":[{"name":"indextype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",697,{"inputs":[{"name":"indextype"}],"output":{"name":"indextype"}}],[0,"multisample","vulkano::pipeline","State of multisampling.",null,null],[3,"Multisample","vulkano::pipeline::multisample","State of the multisampling.",null,null],[12,"rasterization_samples","","",699,null],[12,"sample_mask","","",699,null],[12,"sample_shading","","",699,null],[12,"alpha_to_coverage","","",699,null],[12,"alpha_to_one","","",699,null],[11,"disabled","","",699,{"inputs":[],"output":{"name":"multisample"}}],[0,"raster","vulkano::pipeline","Stage when triangles are turned into pixels.",null,null],[3,"Rasterization","vulkano::pipeline::raster","State of the rasterizer.",null,null],[12,"depth_clamp","","If true, then the depth value of the vertices will be clamped to [0.0 ; 1.0]. If false,\nfragments whose depth is outside of this range will be discarded.",700,null],[12,"rasterizer_discard","","If true, all the fragments will be discarded. This is usually used when your vertex shader\nhas some side effects and you don&#39;t need to run the fragment shader.",700,null],[12,"polygon_mode","","This setting can ask the rasterizer to downgrade triangles into lines or points, or lines\ninto points.",700,null],[12,"cull_mode","","Specifies whether front faces or back faces should be discarded, or none, or both.",700,null],[12,"front_face","","Specifies which triangle orientation corresponds to the front or the triangle.",700,null],[12,"line_width","","Width, in pixels, of lines when drawing lines.",700,null],[12,"depth_bias","","",700,null],[3,"DepthBias","","",null,null],[12,"constant_factor","","",701,null],[12,"clamp","","Requires the `depth_bias_clamp` feature to be enabled.",701,null],[12,"slope_factor","","",701,null],[4,"DepthBiasControl","","",null,null],[13,"Disabled","","",702,null],[13,"Dynamic","","",702,null],[13,"Static","","",702,null],[4,"CullMode","","Specifies the culling mode.",null,null],[13,"None","","",703,null],[13,"Front","","",703,null],[13,"Back","","",703,null],[13,"FrontAndBack","","",703,null],[4,"FrontFace","","Specifies which triangle orientation corresponds to the front or the triangle.",null,null],[13,"CounterClockwise","","Triangles whose vertices are oriented counter-clockwise on the screen will be considered\nas facing their front. Otherwise they will be considered as facing their back.",704,null],[13,"Clockwise","","Triangles whose vertices are oriented clockwise on the screen will be considered\nas facing their front. Otherwise they will be considered as facing their back.",704,null],[4,"PolygonMode","","",null,null],[13,"Fill","","",705,null],[13,"Line","","",705,null],[13,"Point","","",705,null],[11,"fmt","","",700,{"inputs":[{"name":"rasterization"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",700,{"inputs":[{"name":"rasterization"}],"output":{"name":"rasterization"}}],[11,"default","","",700,{"inputs":[],"output":{"name":"rasterization"}}],[11,"fmt","","",702,{"inputs":[{"name":"depthbiascontrol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",702,{"inputs":[{"name":"depthbiascontrol"}],"output":{"name":"depthbiascontrol"}}],[11,"is_dynamic","","",702,{"inputs":[{"name":"depthbiascontrol"}],"output":{"name":"bool"}}],[11,"fmt","","",701,{"inputs":[{"name":"depthbias"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",701,{"inputs":[{"name":"depthbias"}],"output":{"name":"depthbias"}}],[11,"fmt","","",703,{"inputs":[{"name":"cullmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",703,{"inputs":[{"name":"cullmode"}],"output":{"name":"cullmode"}}],[11,"default","","",703,{"inputs":[],"output":{"name":"cullmode"}}],[11,"fmt","","",704,{"inputs":[{"name":"frontface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",704,{"inputs":[{"name":"frontface"}],"output":{"name":"frontface"}}],[11,"default","","",704,{"inputs":[],"output":{"name":"frontface"}}],[11,"eq","","",705,{"inputs":[{"name":"polygonmode"},{"name":"polygonmode"}],"output":{"name":"bool"}}],[11,"fmt","","",705,{"inputs":[{"name":"polygonmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",705,{"inputs":[{"name":"polygonmode"}],"output":{"name":"polygonmode"}}],[11,"default","","",705,{"inputs":[],"output":{"name":"polygonmode"}}],[0,"shader","vulkano::pipeline","Stage of a graphics pipeline.",null,null],[3,"ShaderModule","vulkano::pipeline::shader","Contains SPIR-V code with one or more entry points.",null,null],[3,"VertexShaderEntryPoint","","Represents the entry point of a vertex shader in a shader module.",null,null],[3,"TessControlShaderEntryPoint","","Represents the entry point of a tessellation control shader in a shader module.",null,null],[3,"TessEvaluationShaderEntryPoint","","Represents the entry point of a tessellation evaluation shader in a shader module.",null,null],[3,"GeometryShaderEntryPoint","","Represents the entry point of a geometry shader in a shader module.",null,null],[3,"FragmentShaderEntryPoint","","Represents the entry point of a fragment shader in a shader module.",null,null],[3,"ComputeShaderEntryPoint","","Represents the entry point of a compute shader in a shader module.",null,null],[3,"ShaderInterfaceDefEntry","","Entry of a shader interface definition.",null,null],[12,"location","","Range of locations covered by the element.",706,null],[12,"format","","Format of a each location of the element.",706,null],[12,"name","","Name of the element, or `None` if the name is unknown.",706,null],[3,"SpecializationMapEntry","","Describes an indiviual constant to set in the shader. Also a field in the struct.",null,null],[12,"constant_id","","Identifier of the constant in the shader that corresponds to this field.",707,null],[12,"offset","","Offset within this struct for the data.",707,null],[12,"size","","Size of the data in bytes.",707,null],[4,"GeometryShaderExecutionMode","","Declares which type of primitives are expected by the geometry shader.",null,null],[13,"Points","","",708,null],[13,"Lines","","",708,null],[13,"LinesWithAdjacency","","",708,null],[13,"Triangles","","",708,null],[13,"TrianglesWithAdjacency","","",708,null],[8,"ShaderInterfaceDef","","Types that contain the definition of an interface between two shader stages, or between\nthe outside and a shader stage.",null,null],[16,"Iter","","Iterator returned by `elements`.",709,null],[10,"elements","","Iterates over the elements of the interface.",709,{"inputs":[{"name":"shaderinterfacedef"}],"output":{"name":"iter"}}],[8,"ShaderInterfaceDefMatch","","Extension trait for `ShaderInterfaceDef` that specifies that the interface is potentially\ncompatible with another one.",null,null],[10,"matches","","Returns true if the two definitions match.",710,{"inputs":[{"name":"shaderinterfacedefmatch"},{"name":"i"}],"output":{"name":"bool"}}],[8,"SpecializationConstants","","Trait for types that contain specialization data for shaders.",null,null],[10,"descriptors","","Returns descriptors of the struct&#39;s layout.",711,null],[11,"fmt","","",712,{"inputs":[{"name":"shadermodule"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Builds a new shader module from SPIR-V.",712,null],[11,"vertex_shader_entry_point","","Gets access to an entry point contained in this module.",712,{"inputs":[{"name":"shadermodule"},{"name":"cstr"},{"name":"i"},{"name":"o"},{"name":"l"}],"output":{"name":"vertexshaderentrypoint"}}],[11,"tess_control_shader_entry_point","","Gets access to an entry point contained in this module.",712,{"inputs":[{"name":"shadermodule"},{"name":"cstr"},{"name":"i"},{"name":"o"},{"name":"l"}],"output":{"name":"tesscontrolshaderentrypoint"}}],[11,"tess_evaluation_shader_entry_point","","Gets access to an entry point contained in this module.",712,{"inputs":[{"name":"shadermodule"},{"name":"cstr"},{"name":"i"},{"name":"o"},{"name":"l"}],"output":{"name":"tessevaluationshaderentrypoint"}}],[11,"geometry_shader_entry_point","","Gets access to an entry point contained in this module.",712,{"inputs":[{"name":"shadermodule"},{"name":"cstr"},{"name":"geometryshaderexecutionmode"},{"name":"i"},{"name":"o"},{"name":"l"}],"output":{"name":"geometryshaderentrypoint"}}],[11,"fragment_shader_entry_point","","Gets access to an entry point contained in this module.",712,{"inputs":[{"name":"shadermodule"},{"name":"cstr"},{"name":"i"},{"name":"o"},{"name":"l"}],"output":{"name":"fragmentshaderentrypoint"}}],[11,"compute_shader_entry_point","","Gets access to an entry point contained in this module.",712,{"inputs":[{"name":"shadermodule"},{"name":"cstr"},{"name":"l"}],"output":{"name":"computeshaderentrypoint"}}],[11,"internal_object","","",712,{"inputs":[{"name":"shadermodule"}],"output":{"name":"shadermodule"}}],[11,"drop","","",712,{"inputs":[{"name":"shadermodule"}],"output":null}],[11,"clone","","",713,{"inputs":[{"name":"vertexshaderentrypoint"}],"output":{"name":"vertexshaderentrypoint"}}],[11,"fmt","","",713,{"inputs":[{"name":"vertexshaderentrypoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"module","","Returns the module this entry point comes from.",713,{"inputs":[{"name":"vertexshaderentrypoint"}],"output":{"name":"shadermodule"}}],[11,"name","","Returns the name of the entry point.",713,{"inputs":[{"name":"vertexshaderentrypoint"}],"output":{"name":"cstr"}}],[11,"layout","","Returns the pipeline layout used by the shader stage.",713,{"inputs":[{"name":"vertexshaderentrypoint"}],"output":{"name":"l"}}],[11,"input_definition","","Returns the input attributes used by the shader stage.",713,{"inputs":[{"name":"vertexshaderentrypoint"}],"output":{"name":"i"}}],[11,"output","","Returns the output attributes used by the shader stage.",713,{"inputs":[{"name":"vertexshaderentrypoint"}],"output":{"name":"o"}}],[11,"clone","","",714,{"inputs":[{"name":"tesscontrolshaderentrypoint"}],"output":{"name":"tesscontrolshaderentrypoint"}}],[11,"fmt","","",714,{"inputs":[{"name":"tesscontrolshaderentrypoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"module","","Returns the module this entry point comes from.",714,{"inputs":[{"name":"tesscontrolshaderentrypoint"}],"output":{"name":"shadermodule"}}],[11,"name","","Returns the name of the entry point.",714,{"inputs":[{"name":"tesscontrolshaderentrypoint"}],"output":{"name":"cstr"}}],[11,"layout","","Returns the pipeline layout used by the shader stage.",714,{"inputs":[{"name":"tesscontrolshaderentrypoint"}],"output":{"name":"l"}}],[11,"input","","Returns the input attributes used by the shader stage.",714,{"inputs":[{"name":"tesscontrolshaderentrypoint"}],"output":{"name":"i"}}],[11,"output","","Returns the output attributes used by the shader stage.",714,{"inputs":[{"name":"tesscontrolshaderentrypoint"}],"output":{"name":"o"}}],[11,"clone","","",715,{"inputs":[{"name":"tessevaluationshaderentrypoint"}],"output":{"name":"tessevaluationshaderentrypoint"}}],[11,"fmt","","",715,{"inputs":[{"name":"tessevaluationshaderentrypoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"module","","Returns the module this entry point comes from.",715,{"inputs":[{"name":"tessevaluationshaderentrypoint"}],"output":{"name":"shadermodule"}}],[11,"name","","Returns the name of the entry point.",715,{"inputs":[{"name":"tessevaluationshaderentrypoint"}],"output":{"name":"cstr"}}],[11,"layout","","Returns the pipeline layout used by the shader stage.",715,{"inputs":[{"name":"tessevaluationshaderentrypoint"}],"output":{"name":"l"}}],[11,"input","","Returns the input attributes used by the shader stage.",715,{"inputs":[{"name":"tessevaluationshaderentrypoint"}],"output":{"name":"i"}}],[11,"output","","Returns the output attributes used by the shader stage.",715,{"inputs":[{"name":"tessevaluationshaderentrypoint"}],"output":{"name":"o"}}],[11,"clone","","",716,{"inputs":[{"name":"geometryshaderentrypoint"}],"output":{"name":"geometryshaderentrypoint"}}],[11,"fmt","","",716,{"inputs":[{"name":"geometryshaderentrypoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"module","","Returns the module this entry point comes from.",716,{"inputs":[{"name":"geometryshaderentrypoint"}],"output":{"name":"shadermodule"}}],[11,"name","","Returns the name of the entry point.",716,{"inputs":[{"name":"geometryshaderentrypoint"}],"output":{"name":"cstr"}}],[11,"primitives","","Returns the kind of primitives expected by the geometry shader.",716,{"inputs":[{"name":"geometryshaderentrypoint"}],"output":{"name":"geometryshaderexecutionmode"}}],[11,"layout","","Returns the pipeline layout used by the shader stage.",716,{"inputs":[{"name":"geometryshaderentrypoint"}],"output":{"name":"l"}}],[11,"input","","Returns the input attributes used by the shader stage.",716,{"inputs":[{"name":"geometryshaderentrypoint"}],"output":{"name":"i"}}],[11,"output","","Returns the output attributes used by the shader stage.",716,{"inputs":[{"name":"geometryshaderentrypoint"}],"output":{"name":"o"}}],[11,"eq","","",708,{"inputs":[{"name":"geometryshaderexecutionmode"},{"name":"geometryshaderexecutionmode"}],"output":{"name":"bool"}}],[11,"clone","","",708,{"inputs":[{"name":"geometryshaderexecutionmode"}],"output":{"name":"geometryshaderexecutionmode"}}],[11,"fmt","","",708,{"inputs":[{"name":"geometryshaderexecutionmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"matches","","Returns true if the given primitive topology can be used with this execution mode.",708,{"inputs":[{"name":"geometryshaderexecutionmode"},{"name":"primitivetopology"}],"output":{"name":"bool"}}],[11,"clone","","",717,{"inputs":[{"name":"fragmentshaderentrypoint"}],"output":{"name":"fragmentshaderentrypoint"}}],[11,"fmt","","",717,{"inputs":[{"name":"fragmentshaderentrypoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"module","","Returns the module this entry point comes from.",717,{"inputs":[{"name":"fragmentshaderentrypoint"}],"output":{"name":"shadermodule"}}],[11,"name","","Returns the name of the entry point.",717,{"inputs":[{"name":"fragmentshaderentrypoint"}],"output":{"name":"cstr"}}],[11,"layout","","Returns the pipeline layout used by the shader stage.",717,{"inputs":[{"name":"fragmentshaderentrypoint"}],"output":{"name":"l"}}],[11,"input","","Returns the input attributes used by the shader stage.",717,{"inputs":[{"name":"fragmentshaderentrypoint"}],"output":{"name":"i"}}],[11,"output","","Returns the output attributes used by the shader stage.",717,{"inputs":[{"name":"fragmentshaderentrypoint"}],"output":{"name":"o"}}],[11,"clone","","",718,{"inputs":[{"name":"computeshaderentrypoint"}],"output":{"name":"computeshaderentrypoint"}}],[11,"fmt","","",718,{"inputs":[{"name":"computeshaderentrypoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"module","","Returns the module this entry point comes from.",718,{"inputs":[{"name":"computeshaderentrypoint"}],"output":{"name":"shadermodule"}}],[11,"name","","Returns the name of the entry point.",718,{"inputs":[{"name":"computeshaderentrypoint"}],"output":{"name":"cstr"}}],[11,"layout","","Returns the pipeline layout used by the shader stage.",718,{"inputs":[{"name":"computeshaderentrypoint"}],"output":{"name":"l"}}],[11,"clone","","",706,{"inputs":[{"name":"shaderinterfacedefentry"}],"output":{"name":"shaderinterfacedefentry"}}],[11,"fmt","","",706,{"inputs":[{"name":"shaderinterfacedefentry"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"vertex","vulkano::pipeline","# Vertex sources definition",null,null],[3,"VertexMemberInfo","vulkano::pipeline::vertex","Information about a member of a vertex struct.",null,null],[12,"offset","","Offset of the member in bytes from the start of the struct.",719,null],[12,"ty","","Type of data. This is used to check that the interface is matching.",719,null],[12,"array_size","","Number of consecutive elements of that type.",719,null],[3,"AttributeInfo","","Information about a single attribute within a vertex.\nTODO: change that API",null,null],[12,"offset","","Number of bytes between the start of a vertex and the location of attribute.",720,null],[12,"format","","VertexMember type of the attribute.",720,null],[3,"SingleBufferDefinition","","Implementation of `Definition` for a single vertex buffer.",null,null],[12,"0","","",721,null],[3,"TwoBuffersDefinition","","Unstable.",null,null],[12,"0","","",722,null],[3,"OneVertexOneInstanceDefinition","","Unstable.",null,null],[12,"0","","",723,null],[4,"InputRate","","",null,null],[13,"Vertex","","",724,null],[13,"Instance","","",724,null],[4,"VertexMemberTy","","Type of a member of a vertex struct.",null,null],[13,"I8","","",725,null],[13,"U8","","",725,null],[13,"I16","","",725,null],[13,"U16","","",725,null],[13,"I32","","",725,null],[13,"U32","","",725,null],[13,"F32","","",725,null],[13,"F64","","",725,null],[8,"Vertex","","Describes an individual `Vertex`. In other words a collection of attributes that can be read\nfrom a vertex shader.",null,null],[10,"member","","Returns the characteristics of a vertex member by its name.",726,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[8,"Definition","","Trait for types that describe the definition of the vertex input used by a graphics pipeline.",null,null],[16,"BuffersIter","","Iterator that returns the offset, the stride (in bytes) and input rate of each buffer.",727,null],[16,"AttribsIter","","Iterator that returns the attribute location, buffer id, and infos.",727,null],[10,"definition","","Builds the vertex definition to use to link this definition to a vertex shader&#39;s input\ninterface.",727,null],[8,"Source","","Extension trait of `Definition`. The `L` parameter is an acceptable vertex source for this\nvertex definition.",null,null],[16,"Iter","","Iterator used by `decode`.",728,null],[10,"decode","","Checks and returns the list of buffers, number of vertices and number of instances.",728,null],[8,"VertexMember","","Trait for data types that can be used as vertex members. Used by the `impl_vertex!` macro.",null,null],[10,"format","","Returns the format and array size of the member.",729,null],[11,"fmt","","",724,{"inputs":[{"name":"inputrate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",724,{"inputs":[{"name":"inputrate"}],"output":{"name":"inputrate"}}],[11,"matches","","Returns true if a combination of `(type, array_size)` matches a format.",725,{"inputs":[{"name":"vertexmemberty"},{"name":"usize"},{"name":"format"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"new","","",721,{"inputs":[],"output":{"name":"singlebufferdefinition"}}],[11,"definition","","",721,null],[11,"decode","","",721,null],[11,"new","","",722,{"inputs":[],"output":{"name":"twobuffersdefinition"}}],[11,"definition","","",722,null],[11,"decode","","",722,null],[11,"new","","",723,{"inputs":[],"output":{"name":"onevertexoneinstancedefinition"}}],[11,"definition","","",723,null],[11,"decode","","",723,null],[0,"viewport","vulkano::pipeline","Viewports and scissor boxes.",null,null],[3,"Viewport","vulkano::pipeline::viewport","State of a single viewport.",null,null],[12,"origin","","Coordinates in pixels of the top-left hand corner of the viewport.",730,null],[12,"dimensions","","Dimensions in pixels of the viewport.",730,null],[12,"depth_range","","Minimum and maximum values of the depth.",730,null],[3,"Scissor","","State of a single scissor box.",null,null],[12,"origin","","Coordinates in pixels of the top-left hand corner of the box.",731,null],[12,"dimensions","","Dimensions in pixels of the box.",731,null],[4,"ViewportsState","","List of viewports and scissors that are used when creating a graphics pipeline object.",null,null],[13,"Fixed","","The state is known in advance.",732,null],[12,"data","vulkano::pipeline::viewport::ViewportsState","State of the viewports and scissors.",732,null],[13,"DynamicViewports","vulkano::pipeline::viewport","The state of scissors is known in advance, but the state of viewports is dynamic and will\nbet set when drawing.",732,null],[12,"scissors","vulkano::pipeline::viewport::ViewportsState","State of the scissors.",732,null],[13,"DynamicScissors","vulkano::pipeline::viewport","The state of viewports is known in advance, but the state of scissors is dynamic and will\nbet set when drawing.",732,null],[12,"viewports","vulkano::pipeline::viewport::ViewportsState","State of the viewports",732,null],[13,"Dynamic","vulkano::pipeline::viewport","The state of both the viewports and scissors is dynamic and will be set when drawing.",732,null],[12,"num","vulkano::pipeline::viewport::ViewportsState","Number of viewports and scissors.",732,null],[11,"clone","vulkano::pipeline::viewport","",732,{"inputs":[{"name":"viewportsstate"}],"output":{"name":"viewportsstate"}}],[11,"fmt","","",732,{"inputs":[{"name":"viewportsstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"dynamic_viewports","","Returns true if the state of the viewports is dynamic.",732,{"inputs":[{"name":"viewportsstate"}],"output":{"name":"bool"}}],[11,"dynamic_scissors","","Returns true if the state of the scissors is dynamic.",732,{"inputs":[{"name":"viewportsstate"}],"output":{"name":"bool"}}],[11,"num_viewports","","Returns the number of viewports and scissors.",732,{"inputs":[{"name":"viewportsstate"}],"output":{"name":"u32"}}],[11,"clone","","",730,{"inputs":[{"name":"viewport"}],"output":{"name":"viewport"}}],[11,"fmt","","",730,{"inputs":[{"name":"viewport"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",731,{"inputs":[{"name":"scissor"}],"output":{"name":"scissor"}}],[11,"fmt","","",731,{"inputs":[{"name":"scissor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"irrelevant","","Defines a scissor box that it outside of the image.",731,{"inputs":[],"output":{"name":"scissor"}}],[11,"default","","",731,{"inputs":[],"output":{"name":"scissor"}}],[0,"query","vulkano","This module provides support for query pools.",null,null],[3,"OcclusionQueriesPool","vulkano::query","",null,null],[11,"raw","","See the docs of new().",733,{"inputs":[{"name":"arc"},{"name":"u32"}],"output":{"name":"result"}}],[11,"new","","Builds a new query pool.",733,{"inputs":[{"name":"arc"},{"name":"u32"}],"output":{"name":"arc"}}],[11,"num_slots","","Returns the number of slots of that query pool.",733,{"inputs":[{"name":"occlusionqueriespool"}],"output":{"name":"u32"}}],[11,"device","","Returns the device that was used to create this pool.",733,{"inputs":[{"name":"occlusionqueriespool"}],"output":{"name":"arc"}}],[11,"drop","","",733,{"inputs":[{"name":"occlusionqueriespool"}],"output":null}],[0,"sampler","vulkano","How to retreive data from an image within a shader.",null,null],[3,"Sampler","vulkano::sampler","Describes how to retreive data from an image within a shader.",null,null],[4,"Filter","","Describes how the color of each pixel should be determined.",null,null],[13,"Linear","","The four pixels whose center surround the requested coordinates are taken, then their\nvalues are interpolated.",734,null],[13,"Nearest","","The pixel whose center is nearest to the requested coordinates is taken from the source\nand its value is returned as-is.",734,null],[4,"MipmapMode","","Describes which mipmap from the source to use.",null,null],[13,"Nearest","","Use the mipmap whose dimensions are the nearest to the dimensions of the destination.",735,null],[13,"Linear","","Take the two mipmaps whose dimensions are immediately inferior and superior to the\ndimensions of the destination, calculate the value for both, and interpolate them.",735,null],[4,"SamplerAddressMode","","",null,null],[13,"Repeat","","",736,null],[13,"MirroredRepeat","","",736,null],[13,"ClampToEdge","","",736,null],[13,"ClampToBorder","","",736,null],[13,"MirrorClampToEdge","","",736,null],[4,"UnnormalizedSamplerAddressMode","","",null,null],[13,"ClampToEdge","","",737,null],[13,"ClampToBorder","","",737,null],[4,"SamplerCreationError","","Error that can happen when creating an instance.",null,null],[13,"OomError","","Not enough memory.",738,null],[13,"TooManyObjects","","Too many sampler objects have been created. You must destroy some before creating new ones.\nNote the specs guarantee that at least 4000 samplers can exist simultaneously.",738,null],[13,"SamplerAnisotropyFeatureNotEnabled","","Using an anisotropy superior to 1.0 requires enabling the `sampler_anisotropy` feature when\ncreating the device.",738,null],[13,"AnisotropyLimitExceeded","","The requested anisotropy level exceeds the device&#39;s limits.",738,null],[12,"requested","vulkano::sampler::SamplerCreationError","",738,null],[12,"maximum","","",738,null],[13,"MipLodBiasLimitExceeded","vulkano::sampler","The requested mip lod bias exceeds the device&#39;s limits.",738,null],[12,"requested","vulkano::sampler::SamplerCreationError","",738,null],[12,"maximum","","",738,null],[11,"new","vulkano::sampler","Creates a new `Sampler` with the given behavior.",739,{"inputs":[{"name":"arc"},{"name":"filter"},{"name":"filter"},{"name":"mipmapmode"},{"name":"sampleraddressmode"},{"name":"sampleraddressmode"},{"name":"sampleraddressmode"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"result"}}],[11,"unnormalized","","Creates a sampler with unnormalized coordinates. This means that texture coordinates won&#39;t\nrange between `0.0` and `1.0` but use plain pixel offsets.",739,{"inputs":[{"name":"arc"},{"name":"filter"},{"name":"unnormalizedsampleraddressmode"},{"name":"unnormalizedsampleraddressmode"}],"output":{"name":"result"}}],[11,"internal_object","","",739,{"inputs":[{"name":"sampler"}],"output":{"name":"sampler"}}],[11,"drop","","",739,{"inputs":[{"name":"sampler"}],"output":null}],[11,"hash","","",734,null],[11,"eq","","",734,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"clone","","",734,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"fmt","","",734,{"inputs":[{"name":"filter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",735,null],[11,"eq","","",735,{"inputs":[{"name":"mipmapmode"},{"name":"mipmapmode"}],"output":{"name":"bool"}}],[11,"clone","","",735,{"inputs":[{"name":"mipmapmode"}],"output":{"name":"mipmapmode"}}],[11,"fmt","","",735,{"inputs":[{"name":"mipmapmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",736,null],[11,"eq","","",736,{"inputs":[{"name":"sampleraddressmode"},{"name":"sampleraddressmode"}],"output":{"name":"bool"}}],[11,"clone","","",736,{"inputs":[{"name":"sampleraddressmode"}],"output":{"name":"sampleraddressmode"}}],[11,"fmt","","",736,{"inputs":[{"name":"sampleraddressmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",737,null],[11,"eq","","",737,{"inputs":[{"name":"unnormalizedsampleraddressmode"},{"name":"unnormalizedsampleraddressmode"}],"output":{"name":"bool"}}],[11,"clone","","",737,{"inputs":[{"name":"unnormalizedsampleraddressmode"}],"output":{"name":"unnormalizedsampleraddressmode"}}],[11,"fmt","","",737,{"inputs":[{"name":"unnormalizedsampleraddressmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",738,{"inputs":[{"name":"samplercreationerror"},{"name":"samplercreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",738,{"inputs":[{"name":"samplercreationerror"},{"name":"samplercreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",738,{"inputs":[{"name":"samplercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",738,{"inputs":[{"name":"samplercreationerror"}],"output":{"name":"samplercreationerror"}}],[11,"description","","",738,{"inputs":[{"name":"samplercreationerror"}],"output":{"name":"str"}}],[11,"cause","","",738,{"inputs":[{"name":"samplercreationerror"}],"output":{"name":"option"}}],[11,"fmt","","",738,{"inputs":[{"name":"samplercreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",738,{"inputs":[{"name":"oomerror"}],"output":{"name":"samplercreationerror"}}],[11,"from","","",738,{"inputs":[{"name":"error"}],"output":{"name":"samplercreationerror"}}],[0,"swapchain","vulkano","Link between Vulkan and a window and/or the screen.",null,null],[3,"Capabilities","vulkano::swapchain","The capabilities of a surface when used by a physical device.",null,null],[12,"min_image_count","","Minimum number of images that must be present in the swapchain.",740,null],[12,"max_image_count","","Maximum number of images that must be present in the swapchain, or `None` if there is no\nmaximum value. Note that &quot;no maximum&quot; doesn&#39;t mean that you can set a very high value, as\nyou may still get out of memory errors.",740,null],[12,"current_extent","","The current dimensions of the surface. `None` means that the surface&#39;s dimensions will\ndepend on the dimensions of the swapchain that you are going to create.",740,null],[12,"min_image_extent","","Minimum width and height of a swapchain that uses this surface.",740,null],[12,"max_image_extent","","Maximum width and height of a swapchain that uses this surface.",740,null],[12,"max_image_array_layers","","Maximum number of image layers if you create an image array. The minimum is 1.",740,null],[12,"supported_transforms","","List of transforms supported for the swapchain.",740,null],[12,"current_transform","","Current transform used by the surface.",740,null],[12,"supported_composite_alpha","","List of composite alpha modes supports for the swapchain.",740,null],[12,"supported_usage_flags","","List of image usages that are supported for images of the swapchain. Only\nthe `color_attachment` usage is guaranteed to be supported.",740,null],[12,"supported_formats","","List of formats supported for the swapchain.",740,null],[12,"present_modes","","List of present modes that are supported. `Fifo` is always guaranteed to be supported.",740,null],[3,"Surface","","Represents a surface on the screen.",null,null],[3,"Swapchain","","Contains the swapping system and the images that can be shown on a surface.",null,null],[4,"PresentMode","","The way presenting a swapchain is accomplished.",null,null],[13,"Immediate","","Immediately shows the image to the user. May result in visible tearing.",741,null],[13,"Mailbox","","The action of presenting an image puts it in wait. When the next vertical blanking period\nhappens, the waiting image is effectively shown to the user. If an image is presented while\nanother one is waiting, it is replaced.",741,null],[13,"Fifo","","The action of presenting an image adds it to a queue of images. At each vertical blanking\nperiod, the queue is poped and an image is presented.",741,null],[13,"Relaxed","","Same as `Fifo`, except that if the queue was empty during the previous vertical blanking\nperiod then it is equivalent to `Immediate`.",741,null],[4,"SurfaceTransform","","A transformation to apply to the image before showing it on the screen.",null,null],[13,"Identity","","",742,null],[13,"Rotate90","","",742,null],[13,"Rotate180","","",742,null],[13,"Rotate270","","",742,null],[13,"HorizontalMirror","","",742,null],[13,"HorizontalMirrorRotate90","","",742,null],[13,"HorizontalMirrorRotate180","","",742,null],[13,"HorizontalMirrorRotate270","","",742,null],[13,"Inherit","","Let the operating system or driver implementation choose.",742,null],[4,"CompositeAlpha","","",null,null],[13,"Opaque","","The alpha channel of the image is ignored. All the pixels are considered as if they have a\nvalue of 1.0.",743,null],[13,"PreMultiplied","","The alpha channel of the image is respected. The color channels are expected to have\nalready been multiplied by the alpha value.",743,null],[13,"PostMultiplied","","The alpha channel of the image is respected. The color channels will be multiplied by the\nalpha value by the compositor before being added to what is behind.",743,null],[13,"Inherit","","Let the operating system or driver implementation choose.",743,null],[4,"ColorSpace","","",null,null],[13,"SrgbNonLinear","","",744,null],[4,"SurfaceCreationError","","Error that can happen when creating a debug callback.",null,null],[13,"OomError","","Not enough memory.",745,null],[13,"MissingExtension","","The extension required for this function was not enabled.",745,null],[12,"name","vulkano::swapchain::SurfaceCreationError","",745,null],[4,"AcquireError","vulkano::swapchain","Error that can happen when calling `acquire_next_image`.",null,null],[13,"OomError","","Not enough memory.",746,null],[13,"DeviceLost","","The connection to the device has been lost.",746,null],[13,"Timeout","","The timeout of the function has been reached before an image was available.",746,null],[13,"SurfaceLost","","The surface is no longer accessible and must be recreated.",746,null],[13,"OutOfDate","","The surface has changed in a way that makes the swapchain unusable. You must query the\nsurface&#39;s new properties and recreate a new swapchain if you want to continue drawing.",746,null],[4,"PresentError","","Error that can happen when calling `acquire_next_image`.",null,null],[13,"OomError","","Not enough memory.",747,null],[13,"DeviceLost","","The connection to the device has been lost.",747,null],[13,"SurfaceLost","","The surface is no longer accessible and must be recreated.",747,null],[13,"OutOfDate","","The surface has changed in a way that makes the swapchain unusable. You must query the\nsurface&#39;s new properties and recreate a new swapchain if you want to continue drawing.",747,null],[0,"display","","Allows you to create surfaces that fill a whole display, outside of the windowing system.",null,null],[3,"DisplayPlane","vulkano::swapchain::display","?",null,null],[3,"Display","","Represents a monitor connected to a physical device.",null,null],[3,"DisplayMode","","Represents a mode on a specific display.",null,null],[11,"enumerate_raw","","See the docs of enumerate().",748,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"result"}}],[11,"enumerate","","Enumerates all the display planes that are available on a given physical device.",748,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"intoiter"}}],[11,"physical_device","","Returns the physical device that was used to create this display.",748,{"inputs":[{"name":"displayplane"}],"output":{"name":"physicaldevice"}}],[11,"supports","","Returns true if this plane supports the given display.",748,{"inputs":[{"name":"displayplane"},{"name":"display"}],"output":{"name":"bool"}}],[11,"clone","","",749,{"inputs":[{"name":"display"}],"output":{"name":"display"}}],[11,"enumerate_raw","","See the docs of enumerate().",749,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"result"}}],[11,"enumerate","","Enumerates all the displays that are available on a given physical device.",749,{"inputs":[{"name":"physicaldevice"}],"output":{"name":"intoiter"}}],[11,"name","","Returns the name of the display.",749,{"inputs":[{"name":"display"}],"output":{"name":"str"}}],[11,"physical_device","","Returns the physical device that was used to create this display.",749,{"inputs":[{"name":"display"}],"output":{"name":"physicaldevice"}}],[11,"physical_resolution","","Returns the physical resolution of the display.",749,null],[11,"display_modes_raw","","See the docs of display_modes().",749,{"inputs":[{"name":"display"}],"output":{"name":"result"}}],[11,"display_modes","","Returns a list of all modes available on this display.",749,{"inputs":[{"name":"display"}],"output":{"name":"intoiter"}}],[11,"internal_object","","",749,{"inputs":[{"name":"display"}],"output":{"name":"displaykhr"}}],[11,"display","","Returns the display corresponding to this mode.",750,{"inputs":[{"name":"displaymode"}],"output":{"name":"display"}}],[11,"visible_region","","Returns the dimensions of the region that is visible on the monitor.",750,null],[11,"refresh_rate","","Returns the refresh rate of this mode.",750,{"inputs":[{"name":"displaymode"}],"output":{"name":"u32"}}],[11,"internal_object","","",750,{"inputs":[{"name":"displaymode"}],"output":{"name":"displaymodekhr"}}],[11,"fmt","vulkano::swapchain","",751,{"inputs":[{"name":"surface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_display_mode","","Creates a `Surface` that covers a display mode.",751,{"inputs":[{"name":"displaymode"},{"name":"displayplane"}],"output":{"name":"result"}}],[11,"from_hwnd","","Creates a `Surface` from a Win32 window.",751,null],[11,"from_xcb","","Creates a `Surface` from an XCB window.",751,null],[11,"from_xlib","","Creates a `Surface` from an Xlib window.",751,null],[11,"from_wayland","","Creates a `Surface` from a Wayland window.",751,null],[11,"from_mir","","Creates a `Surface` from a MIR window.",751,null],[11,"from_anativewindow","","Creates a `Surface` from an Android window.",751,null],[11,"is_supported","","Returns true if the given queue family can draw on this surface.",751,{"inputs":[{"name":"surface"},{"name":"queuefamily"}],"output":{"name":"result"}}],[11,"get_capabilities","","Retreives the capabilities of a surface when used by a certain device.",751,{"inputs":[{"name":"surface"},{"name":"physicaldevice"}],"output":{"name":"result"}}],[11,"internal_object","","",751,{"inputs":[{"name":"surface"}],"output":{"name":"surfacekhr"}}],[11,"drop","","",751,{"inputs":[{"name":"surface"}],"output":null}],[11,"eq","","",745,{"inputs":[{"name":"surfacecreationerror"},{"name":"surfacecreationerror"}],"output":{"name":"bool"}}],[11,"ne","","",745,{"inputs":[{"name":"surfacecreationerror"},{"name":"surfacecreationerror"}],"output":{"name":"bool"}}],[11,"fmt","","",745,{"inputs":[{"name":"surfacecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",745,{"inputs":[{"name":"surfacecreationerror"}],"output":{"name":"surfacecreationerror"}}],[11,"description","","",745,{"inputs":[{"name":"surfacecreationerror"}],"output":{"name":"str"}}],[11,"cause","","",745,{"inputs":[{"name":"surfacecreationerror"}],"output":{"name":"option"}}],[11,"fmt","","",745,{"inputs":[{"name":"surfacecreationerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",745,{"inputs":[{"name":"oomerror"}],"output":{"name":"surfacecreationerror"}}],[11,"from","","",745,{"inputs":[{"name":"error"}],"output":{"name":"surfacecreationerror"}}],[11,"fmt","","",740,{"inputs":[{"name":"capabilities"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",740,{"inputs":[{"name":"capabilities"}],"output":{"name":"capabilities"}}],[11,"eq","","",741,{"inputs":[{"name":"presentmode"},{"name":"presentmode"}],"output":{"name":"bool"}}],[11,"fmt","","",741,{"inputs":[{"name":"presentmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",741,{"inputs":[{"name":"presentmode"}],"output":{"name":"presentmode"}}],[11,"eq","","",742,{"inputs":[{"name":"surfacetransform"},{"name":"surfacetransform"}],"output":{"name":"bool"}}],[11,"fmt","","",742,{"inputs":[{"name":"surfacetransform"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",742,{"inputs":[{"name":"surfacetransform"}],"output":{"name":"surfacetransform"}}],[11,"default","","",742,{"inputs":[],"output":{"name":"surfacetransform"}}],[11,"eq","","",743,{"inputs":[{"name":"compositealpha"},{"name":"compositealpha"}],"output":{"name":"bool"}}],[11,"fmt","","",743,{"inputs":[{"name":"compositealpha"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",743,{"inputs":[{"name":"compositealpha"}],"output":{"name":"compositealpha"}}],[11,"eq","","",744,{"inputs":[{"name":"colorspace"},{"name":"colorspace"}],"output":{"name":"bool"}}],[11,"fmt","","",744,{"inputs":[{"name":"colorspace"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",744,{"inputs":[{"name":"colorspace"}],"output":{"name":"colorspace"}}],[11,"new","","Builds a new swapchain. Allocates images who content can be made visible on a surface.",752,null],[11,"acquire_next_image","","Tries to take ownership of an image in order to draw on it.",752,{"inputs":[{"name":"swapchain"},{"name":"duration"}],"output":{"name":"result"}}],[11,"present","","Presents an image on the screen.",752,{"inputs":[{"name":"swapchain"},{"name":"arc"},{"name":"usize"}],"output":{"name":"result"}}],[11,"image_semaphore","","",752,{"inputs":[{"name":"swapchain"},{"name":"u32"},{"name":"arc"}],"output":{"name":"option"}}],[11,"drop","","",752,{"inputs":[{"name":"swapchain"}],"output":null}],[11,"eq","","",746,{"inputs":[{"name":"acquireerror"},{"name":"acquireerror"}],"output":{"name":"bool"}}],[11,"ne","","",746,{"inputs":[{"name":"acquireerror"},{"name":"acquireerror"}],"output":{"name":"bool"}}],[11,"fmt","","",746,{"inputs":[{"name":"acquireerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",746,{"inputs":[{"name":"acquireerror"}],"output":{"name":"acquireerror"}}],[11,"description","","",746,{"inputs":[{"name":"acquireerror"}],"output":{"name":"str"}}],[11,"cause","","",746,{"inputs":[{"name":"acquireerror"}],"output":{"name":"option"}}],[11,"fmt","","",746,{"inputs":[{"name":"acquireerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",746,{"inputs":[{"name":"error"}],"output":{"name":"acquireerror"}}],[11,"eq","","",747,{"inputs":[{"name":"presenterror"},{"name":"presenterror"}],"output":{"name":"bool"}}],[11,"ne","","",747,{"inputs":[{"name":"presenterror"},{"name":"presenterror"}],"output":{"name":"bool"}}],[11,"fmt","","",747,{"inputs":[{"name":"presenterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",747,{"inputs":[{"name":"presenterror"}],"output":{"name":"presenterror"}}],[11,"description","","",747,{"inputs":[{"name":"presenterror"}],"output":{"name":"str"}}],[11,"cause","","",747,{"inputs":[{"name":"presenterror"}],"output":{"name":"option"}}],[11,"fmt","","",747,{"inputs":[{"name":"presenterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",747,{"inputs":[{"name":"error"}],"output":{"name":"presenterror"}}],[0,"sync","vulkano","Synchronization primitives for Vulkan objects.",null,null],[3,"Event","vulkano::sync","Used to block the GPU execution until an event on the CPU occurs.",null,null],[3,"Fence","","A fence is used to know when a command buffer submission has finished its execution.",null,null],[3,"Semaphore","","Used to provide synchronization between command buffers during their execution.",null,null],[4,"FenceWaitError","","Error that can be returned when waiting on a fence.",null,null],[13,"OomError","","Not enough memory to complete the wait.",753,null],[13,"Timeout","","The specified timeout wasn&#39;t long enough.",753,null],[13,"DeviceLostError","","The device has been lost.",753,null],[4,"SharingMode","","Declares in which queue(s) a resource can be used.",null,null],[13,"Exclusive","","The resource is used is only one queue family.",754,null],[13,"Concurrent","","The resource is used in multiple queue families. Can be slower than `Exclusive`.",754,null],[4,"Sharing","","Declares in which queue(s) a resource can be used.",null,null],[13,"Exclusive","","The resource is used is only one queue family.",755,null],[13,"Concurrent","","The resource is used in multiple queue families. Can be slower than `Exclusive`.",755,null],[11,"fmt","","",756,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"raw","","See the docs of new().",756,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"new","","Builds a new event.",756,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"signaled","","Returns true if the event is signaled.",756,{"inputs":[{"name":"event"}],"output":{"name":"result"}}],[11,"set_raw","","See the docs of set().",756,{"inputs":[{"name":"event"}],"output":{"name":"result"}}],[11,"set","","Changes the `Event` to the signaled state.",756,{"inputs":[{"name":"event"}],"output":null}],[11,"reset_raw","","See the docs of reset().",756,{"inputs":[{"name":"event"}],"output":{"name":"result"}}],[11,"reset","","Changes the `Event` to the unsignaled state.",756,{"inputs":[{"name":"event"}],"output":null}],[11,"internal_object_guard","","",756,{"inputs":[{"name":"event"}],"output":{"name":"mutexguard"}}],[11,"drop","","",756,{"inputs":[{"name":"event"}],"output":null}],[11,"fmt","","",757,{"inputs":[{"name":"fence"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"raw","","See the docs of new().",757,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"new","","Builds a new fence.",757,{"inputs":[{"name":"d"}],"output":{"name":"arc"}}],[11,"signaled_raw","","See the docs of signaled().",757,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"signaled","","Builds a new fence already in the &quot;signaled&quot; state.",757,{"inputs":[{"name":"d"}],"output":{"name":"arc"}}],[11,"ready","","Returns true if the fence is signaled.",757,{"inputs":[{"name":"fence"}],"output":{"name":"result"}}],[11,"wait","","Waits until the fence is signaled, or at least until the number of nanoseconds of the\ntimeout has elapsed.",757,{"inputs":[{"name":"fence"},{"name":"duration"}],"output":{"name":"result"}}],[11,"multi_wait","","Waits for multiple fences at once.",757,{"inputs":[{"name":"i"},{"name":"duration"}],"output":{"name":"result"}}],[11,"reset","","Resets the fence.",757,{"inputs":[{"name":"fence"}],"output":null}],[11,"multi_reset","","Resets multiple fences at once.",757,{"inputs":[{"name":"i"}],"output":null}],[11,"internal_object","","",757,{"inputs":[{"name":"fence"}],"output":{"name":"fence"}}],[11,"drop","","",757,{"inputs":[{"name":"fence"}],"output":null}],[11,"eq","","",753,{"inputs":[{"name":"fencewaiterror"},{"name":"fencewaiterror"}],"output":{"name":"bool"}}],[11,"ne","","",753,{"inputs":[{"name":"fencewaiterror"},{"name":"fencewaiterror"}],"output":{"name":"bool"}}],[11,"fmt","","",753,{"inputs":[{"name":"fencewaiterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",753,{"inputs":[{"name":"fencewaiterror"}],"output":{"name":"fencewaiterror"}}],[11,"description","","",753,{"inputs":[{"name":"fencewaiterror"}],"output":{"name":"str"}}],[11,"cause","","",753,{"inputs":[{"name":"fencewaiterror"}],"output":{"name":"option"}}],[11,"fmt","","",753,{"inputs":[{"name":"fencewaiterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",753,{"inputs":[{"name":"error"}],"output":{"name":"fencewaiterror"}}],[11,"fmt","","",758,{"inputs":[{"name":"semaphore"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"raw","","See the docs of new().",758,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"new","","Builds a new semaphore.",758,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"internal_object","","",758,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphore"}}],[11,"drop","","",758,{"inputs":[{"name":"semaphore"}],"output":null}],[8,"Resource","","Base trait for objects that can be used as resources and must be synchronized.",null,null],[10,"sharing_mode","","Returns in which queue family or families this resource can be used.",759,{"inputs":[{"name":"resource"}],"output":{"name":"sharingmode"}}],[11,"requires_fence","","Returns true if the `gpu_access` function should be passed a fence.",759,{"inputs":[{"name":"resource"}],"output":{"name":"bool"}}],[11,"requires_semaphore","","Returns true if the `gpu_access` function should be passed a semaphore.",759,{"inputs":[{"name":"resource"}],"output":{"name":"bool"}}],[11,"eq","","",754,{"inputs":[{"name":"sharingmode"},{"name":"sharingmode"}],"output":{"name":"bool"}}],[11,"ne","","",754,{"inputs":[{"name":"sharingmode"},{"name":"sharingmode"}],"output":{"name":"bool"}}],[11,"clone","","",754,{"inputs":[{"name":"sharingmode"}],"output":{"name":"sharingmode"}}],[11,"fmt","","",754,{"inputs":[{"name":"sharingmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",754,{"inputs":[{"name":"arc"}],"output":{"name":"sharingmode"}}],[11,"from","","",754,null],[11,"eq","","",755,{"inputs":[{"name":"sharing"},{"name":"sharing"}],"output":{"name":"bool"}}],[11,"ne","","",755,{"inputs":[{"name":"sharing"},{"name":"sharing"}],"output":{"name":"bool"}}],[11,"clone","","",755,{"inputs":[{"name":"sharing"}],"output":{"name":"sharing"}}],[11,"fmt","","",755,{"inputs":[{"name":"sharing"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"SafeDeref","vulkano","Alternative to the `Deref` trait. Contrary to `Deref`, must always return the same object.",null,null],[8,"VulkanObject","","Gives access to the internal identifier of an object.",null,null],[16,"Object","","The type of the object.",760,null],[10,"internal_object","","Returns a reference to the object.",760,{"inputs":[{"name":"vulkanobject"}],"output":{"name":"object"}}],[8,"SynchronizedVulkanObject","","Gives access to the internal identifier of an object.",null,null],[16,"Object","","The type of the object.",761,null],[10,"internal_object_guard","","Returns a reference to the object.",761,{"inputs":[{"name":"synchronizedvulkanobject"}],"output":{"name":"mutexguard"}}],[8,"VulkanObjectU64","","",null,null],[10,"internal_object","","",762,{"inputs":[{"name":"vulkanobjectu64"}],"output":{"name":"u64"}}],[8,"VulkanObjectUsize","","",null,null],[10,"internal_object","","",763,{"inputs":[{"name":"vulkanobjectusize"}],"output":{"name":"usize"}}],[11,"eq","","",0,{"inputs":[{"name":"oomerror"},{"name":"oomerror"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"oomerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"oomerror"}],"output":{"name":"oomerror"}}],[11,"description","","",0,{"inputs":[{"name":"oomerror"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"oomerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"oomerror"}}],[14,"buffer_slice_field!","","Takes a `BufferSlice` that points to a struct, and returns a `BufferSlice` that points to\na specific field of that struct.",null,null],[14,"pipeline_layout!","","Call this macro with the layout of a pipeline to generate some helper structs that wrap around\nvulkano&#39;s unsafe APIs.",null,null],[14,"single_pass_renderpass!","","Builds a `CustomRenderPass` object that provides a safe wrapper around `UnsafeRenderPass`.",null,null],[14,"ordered_passes_renderpass!","","Builds a `CustomRenderPass` object that provides a safe wrapper around `UnsafeRenderPass`.",null,null],[14,"impl_vertex!","","Implements the `Vertex` trait on a struct.",null,null],[11,"hash","vulkano::instance","",601,null],[11,"eq","","",601,{"inputs":[{"name":"features"},{"name":"features"}],"output":{"name":"bool"}}],[11,"ne","","",601,{"inputs":[{"name":"features"},{"name":"features"}],"output":{"name":"bool"}}],[11,"clone","","",601,{"inputs":[{"name":"features"}],"output":{"name":"features"}}],[11,"fmt","","",601,{"inputs":[{"name":"features"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"none","","Builds a `Features` object with all values to false.",601,{"inputs":[],"output":{"name":"features"}}],[11,"superset_of","","Returns true if `self` is a superset of the parameter.",601,{"inputs":[{"name":"features"},{"name":"features"}],"output":{"name":"bool"}}],[11,"intersection","","Builds a `Features` that is the intersection of `self` and another `Features`\nobject.",601,{"inputs":[{"name":"features"},{"name":"features"}],"output":{"name":"features"}}],[11,"num_subpasses","vulkano::framebuffer","Returns the number of subpasses within the render pass.",576,{"inputs":[{"name":"renderpassdesc"}],"output":{"name":"u32"}}],[11,"num_color_attachments","","Returns the number of color attachments in a subpass. Returns `None` if out of range.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"num_samples","","Returns the number of samples of the attachments of a subpass. Returns `None` if out of\nrange or if the subpass has no attachment. TODO: return an enum instead?",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_depth_stencil_attachment","","Returns a tuple whose first element is `true` if there&#39;s a depth attachment, and whose\nsecond element is `true` if there&#39;s a stencil attachment. Returns `None` if out of range.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_depth","","Returns true if a subpass has a depth attachment or a depth-stencil attachment.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_writable_depth","","Returns true if a subpass has a depth attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_stencil","","Returns true if a subpass has a stencil attachment or a depth-stencil attachment.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}],[11,"has_writable_stencil","","Returns true if a subpass has a stencil attachment or a depth-stencil attachment whose\nlayout is not `DepthStencilReadOnlyOptimal`.",576,{"inputs":[{"name":"renderpassdesc"},{"name":"u32"}],"output":{"name":"option"}}]],"paths":[[4,"OomError"],[3,"CpuAccessibleBuffer"],[3,"ReadLock"],[3,"WriteLock"],[3,"DeviceLocalBuffer"],[3,"ImmutableBuffer"],[3,"SparseLevel"],[3,"Usage"],[4,"BufferCreationError"],[3,"UnsafeBuffer"],[3,"AccessRange"],[3,"GpuAccessResult"],[8,"Buffer"],[8,"TypedBuffer"],[4,"BufferViewCreationError"],[3,"BufferView"],[3,"BufferSlice"],[3,"DynamicState"],[3,"DrawIndirectCommand"],[3,"DrawIndexedIndirectCommand"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[3,"AssertRecoverSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"Drain"],[3,"Slice"],[3,"TraitObject"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[4,"Ordering"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[8,"Any"],[3,"TypeId"],[3,"Unique"],[3,"Shared"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"IntoIter"],[3,"Drain"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"PhantomData"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"Rc"],[3,"Weak"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Submission"],[3,"PrimaryCommandBufferBuilder"],[3,"PrimaryCommandBufferBuilderInlineDraw"],[3,"PrimaryCommandBufferBuilderSecondaryDraw"],[3,"SecondaryGraphicsCommandBufferBuilder"],[3,"SecondaryComputeCommandBufferBuilder"],[3,"CommandBufferPool"],[3,"DescriptorDesc"],[3,"ShaderStages"],[4,"DescriptorType"],[3,"Arc"],[3,"DescriptorPool"],[3,"UnsafeDescriptorSet"],[3,"DescriptorWrite"],[3,"UnsafeDescriptorSetLayout"],[8,"DescriptorSetsCollection"],[8,"DescriptorSet"],[8,"DescriptorSetDesc"],[4,"UnsafePipelineLayoutCreationError"],[8,"ValidParameter"],[8,"DescriptorMarker"],[3,"UniformBuffer"],[3,"StorageBuffer"],[3,"CombinedImageSampler"],[3,"SampledImage"],[3,"InputAttachment"],[3,"EmptyPipeline"],[3,"UnsafePipelineLayout"],[8,"PipelineLayout"],[8,"PipelineLayoutDesc"],[8,"PipelineLayoutSuperset"],[8,"PipelineLayoutSetsCompatible"],[8,"PipelineLayoutPushConstantsCompatible"],[3,"DeviceExtensions"],[4,"DeviceCreationError"],[3,"Device"],[3,"Queue"],[4,"Format"],[4,"FormatTy"],[4,"ClearValue"],[8,"Data"],[8,"FormatDesc"],[8,"PossibleFloatFormatDesc"],[8,"PossibleUintFormatDesc"],[8,"PossibleSintFormatDesc"],[8,"PossibleDepthFormatDesc"],[8,"PossibleStencilFormatDesc"],[8,"PossibleDepthStencilFormatDesc"],[8,"PossibleCompressedFormatDesc"],[8,"PossibleFloatOrCompressedFormatDesc"],[8,"StrongStorage"],[8,"ClearValuesTuple"],[3,"R4G4UnormPack8"],[3,"R4G4B4A4UnormPack16"],[3,"B4G4R4A4UnormPack16"],[3,"R5G6B5UnormPack16"],[3,"B5G6R5UnormPack16"],[3,"R5G5B5A1UnormPack16"],[3,"B5G5R5A1UnormPack16"],[3,"A1R5G5B5UnormPack16"],[3,"R8Unorm"],[3,"R8Snorm"],[3,"R8Uscaled"],[3,"R8Sscaled"],[3,"R8Uint"],[3,"R8Sint"],[3,"R8Srgb"],[3,"R8G8Unorm"],[3,"R8G8Snorm"],[3,"R8G8Uscaled"],[3,"R8G8Sscaled"],[3,"R8G8Uint"],[3,"R8G8Sint"],[3,"R8G8Srgb"],[3,"R8G8B8Unorm"],[3,"R8G8B8Snorm"],[3,"R8G8B8Uscaled"],[3,"R8G8B8Sscaled"],[3,"R8G8B8Uint"],[3,"R8G8B8Sint"],[3,"R8G8B8Srgb"],[3,"B8G8R8Unorm"],[3,"B8G8R8Snorm"],[3,"B8G8R8Uscaled"],[3,"B8G8R8Sscaled"],[3,"B8G8R8Uint"],[3,"B8G8R8Sint"],[3,"B8G8R8Srgb"],[3,"R8G8B8A8Unorm"],[3,"R8G8B8A8Snorm"],[3,"R8G8B8A8Uscaled"],[3,"R8G8B8A8Sscaled"],[3,"R8G8B8A8Uint"],[3,"R8G8B8A8Sint"],[3,"R8G8B8A8Srgb"],[3,"B8G8R8A8Unorm"],[3,"B8G8R8A8Snorm"],[3,"B8G8R8A8Uscaled"],[3,"B8G8R8A8Sscaled"],[3,"B8G8R8A8Uint"],[3,"B8G8R8A8Sint"],[3,"B8G8R8A8Srgb"],[3,"A8B8G8R8UnormPack32"],[3,"A8B8G8R8SnormPack32"],[3,"A8B8G8R8UscaledPack32"],[3,"A8B8G8R8SscaledPack32"],[3,"A8B8G8R8UintPack32"],[3,"A8B8G8R8SintPack32"],[3,"A8B8G8R8SrgbPack32"],[3,"A2R10G10B10UnormPack32"],[3,"A2R10G10B10SnormPack32"],[3,"A2R10G10B10UscaledPack32"],[3,"A2R10G10B10SscaledPack32"],[3,"A2R10G10B10UintPack32"],[3,"A2R10G10B10SintPack32"],[3,"A2B10G10R10UnormPack32"],[3,"A2B10G10R10SnormPack32"],[3,"A2B10G10R10UscaledPack32"],[3,"A2B10G10R10SscaledPack32"],[3,"A2B10G10R10UintPack32"],[3,"A2B10G10R10SintPack32"],[3,"R16Unorm"],[3,"R16Snorm"],[3,"R16Uscaled"],[3,"R16Sscaled"],[3,"R16Uint"],[3,"R16Sint"],[3,"R16Sfloat"],[3,"R16G16Unorm"],[3,"R16G16Snorm"],[3,"R16G16Uscaled"],[3,"R16G16Sscaled"],[3,"R16G16Uint"],[3,"R16G16Sint"],[3,"R16G16Sfloat"],[3,"R16G16B16Unorm"],[3,"R16G16B16Snorm"],[3,"R16G16B16Uscaled"],[3,"R16G16B16Sscaled"],[3,"R16G16B16Uint"],[3,"R16G16B16Sint"],[3,"R16G16B16Sfloat"],[3,"R16G16B16A16Unorm"],[3,"R16G16B16A16Snorm"],[3,"R16G16B16A16Uscaled"],[3,"R16G16B16A16Sscaled"],[3,"R16G16B16A16Uint"],[3,"R16G16B16A16Sint"],[3,"R16G16B16A16Sfloat"],[3,"R32Uint"],[3,"R32Sint"],[3,"R32Sfloat"],[3,"R32G32Uint"],[3,"R32G32Sint"],[3,"R32G32Sfloat"],[3,"R32G32B32Uint"],[3,"R32G32B32Sint"],[3,"R32G32B32Sfloat"],[3,"R32G32B32A32Uint"],[3,"R32G32B32A32Sint"],[3,"R32G32B32A32Sfloat"],[3,"R64Uint"],[3,"R64Sint"],[3,"R64Sfloat"],[3,"R64G64Uint"],[3,"R64G64Sint"],[3,"R64G64Sfloat"],[3,"R64G64B64Uint"],[3,"R64G64B64Sint"],[3,"R64G64B64Sfloat"],[3,"R64G64B64A64Uint"],[3,"R64G64B64A64Sint"],[3,"R64G64B64A64Sfloat"],[3,"B10G11R11UfloatPack32"],[3,"E5B9G9R9UfloatPack32"],[3,"D16Unorm"],[3,"X8_D24UnormPack32"],[3,"D32Sfloat"],[3,"S8Uint"],[3,"D16Unorm_S8Uint"],[3,"D24Unorm_S8Uint"],[3,"D32Sfloat_S8Uint"],[3,"BC1_RGBUnormBlock"],[3,"BC1_RGBSrgbBlock"],[3,"BC1_RGBAUnormBlock"],[3,"BC1_RGBASrgbBlock"],[3,"BC2UnormBlock"],[3,"BC2SrgbBlock"],[3,"BC3UnormBlock"],[3,"BC3SrgbBlock"],[3,"BC4UnormBlock"],[3,"BC4SnormBlock"],[3,"BC5UnormBlock"],[3,"BC5SnormBlock"],[3,"BC6HUfloatBlock"],[3,"BC6HSfloatBlock"],[3,"BC7UnormBlock"],[3,"BC7SrgbBlock"],[3,"ETC2_R8G8B8UnormBlock"],[3,"ETC2_R8G8B8SrgbBlock"],[3,"ETC2_R8G8B8A1UnormBlock"],[3,"ETC2_R8G8B8A1SrgbBlock"],[3,"ETC2_R8G8B8A8UnormBlock"],[3,"ETC2_R8G8B8A8SrgbBlock"],[3,"EAC_R11UnormBlock"],[3,"EAC_R11SnormBlock"],[3,"EAC_R11G11UnormBlock"],[3,"EAC_R11G11SnormBlock"],[3,"ASTC_4x4UnormBlock"],[3,"ASTC_4x4SrgbBlock"],[3,"ASTC_5x4UnormBlock"],[3,"ASTC_5x4SrgbBlock"],[3,"ASTC_5x5UnormBlock"],[3,"ASTC_5x5SrgbBlock"],[3,"ASTC_6x5UnormBlock"],[3,"ASTC_6x5SrgbBlock"],[3,"ASTC_6x6UnormBlock"],[3,"ASTC_6x6SrgbBlock"],[3,"ASTC_8x5UnormBlock"],[3,"ASTC_8x5SrgbBlock"],[3,"ASTC_8x6UnormBlock"],[3,"ASTC_8x6SrgbBlock"],[3,"ASTC_8x8UnormBlock"],[3,"ASTC_8x8SrgbBlock"],[3,"ASTC_10x5UnormBlock"],[3,"ASTC_10x5SrgbBlock"],[3,"ASTC_10x6UnormBlock"],[3,"ASTC_10x6SrgbBlock"],[3,"ASTC_10x8UnormBlock"],[3,"ASTC_10x8SrgbBlock"],[3,"ASTC_10x10UnormBlock"],[3,"ASTC_10x10SrgbBlock"],[3,"ASTC_12x10UnormBlock"],[3,"ASTC_12x10SrgbBlock"],[3,"ASTC_12x12UnormBlock"],[3,"ASTC_12x12SrgbBlock"],[3,"LayoutAttachmentDescription"],[3,"LayoutPassDescription"],[3,"LayoutPassDependencyDescription"],[4,"FramebufferCreationError"],[4,"RenderPassCreationError"],[4,"StoreOp"],[4,"LoadOp"],[3,"EmptySinglePassRenderPass"],[3,"Framebuffer"],[3,"UnsafeRenderPass"],[3,"Subpass"],[8,"RenderPass"],[8,"RenderPassDesc"],[8,"RenderPassAttachmentsList"],[8,"RenderPassClearValues"],[8,"RenderPassCompatible"],[8,"RenderPassSubpassInterface"],[3,"Swizzle"],[4,"MipmapsCount"],[4,"ComponentSwizzle"],[3,"AttachmentImage"],[3,"ImmutableImage"],[3,"SwapchainImage"],[3,"Usage"],[4,"ImageCreationError"],[4,"Dimensions"],[4,"Layout"],[3,"UnsafeImage"],[3,"UnsafeImageView"],[3,"AccessRange"],[3,"GpuAccessResult"],[3,"Transition"],[8,"Image"],[8,"ImageClearValue"],[8,"ImageContent"],[8,"ImageView"],[8,"AttachmentImageView"],[3,"Features"],[3,"InstanceExtensions"],[3,"ApplicationInfo"],[4,"InstanceCreationError"],[4,"PhysicalDeviceType"],[4,"LoadingError"],[3,"Message"],[3,"MessageTypes"],[4,"DebugCallbackCreationError"],[3,"DebugCallback"],[3,"Instance"],[3,"PhysicalDevice"],[3,"PhysicalDevicesIter"],[3,"QueueFamily"],[3,"QueueFamiliesIter"],[3,"MemoryType"],[3,"MemoryTypesIter"],[3,"MemoryHeap"],[3,"MemoryHeapsIter"],[3,"Limits"],[3,"LayerProperties"],[3,"LayersIterator"],[3,"Wrapping"],[4,"FpCategory"],[3,"NonZero"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[3,"MemoryRequirements"],[3,"DeviceMemory"],[3,"MappedDeviceMemory"],[3,"CpuAccess"],[4,"AllocLayout"],[3,"StdHostVisibleMemoryTypePool"],[3,"StdHostVisibleMemoryTypePoolAlloc"],[3,"StdNonHostVisibleMemoryTypePool"],[3,"StdNonHostVisibleMemoryTypePoolAlloc"],[3,"StdMemoryPool"],[3,"StdMemoryPoolAlloc"],[8,"MemoryPool"],[8,"MemoryPoolAlloc"],[8,"Content"],[3,"GraphicsPipelineParams"],[3,"ComputePipeline"],[3,"GraphicsPipeline"],[3,"Blend"],[3,"AttachmentBlend"],[4,"AttachmentsBlend"],[4,"LogicOp"],[4,"BlendOp"],[4,"BlendFactor"],[3,"PipelineCache"],[3,"DepthStencil"],[3,"Stencil"],[4,"StencilOp"],[4,"DepthBounds"],[4,"Compare"],[3,"InputAssembly"],[4,"PrimitiveTopology"],[4,"IndexType"],[8,"Index"],[3,"Multisample"],[3,"Rasterization"],[3,"DepthBias"],[4,"DepthBiasControl"],[4,"CullMode"],[4,"FrontFace"],[4,"PolygonMode"],[3,"ShaderInterfaceDefEntry"],[3,"SpecializationMapEntry"],[4,"GeometryShaderExecutionMode"],[8,"ShaderInterfaceDef"],[8,"ShaderInterfaceDefMatch"],[8,"SpecializationConstants"],[3,"ShaderModule"],[3,"VertexShaderEntryPoint"],[3,"TessControlShaderEntryPoint"],[3,"TessEvaluationShaderEntryPoint"],[3,"GeometryShaderEntryPoint"],[3,"FragmentShaderEntryPoint"],[3,"ComputeShaderEntryPoint"],[3,"VertexMemberInfo"],[3,"AttributeInfo"],[3,"SingleBufferDefinition"],[3,"TwoBuffersDefinition"],[3,"OneVertexOneInstanceDefinition"],[4,"InputRate"],[4,"VertexMemberTy"],[8,"Vertex"],[8,"Definition"],[8,"Source"],[8,"VertexMember"],[3,"Viewport"],[3,"Scissor"],[4,"ViewportsState"],[3,"OcclusionQueriesPool"],[4,"Filter"],[4,"MipmapMode"],[4,"SamplerAddressMode"],[4,"UnnormalizedSamplerAddressMode"],[4,"SamplerCreationError"],[3,"Sampler"],[3,"Capabilities"],[4,"PresentMode"],[4,"SurfaceTransform"],[4,"CompositeAlpha"],[4,"ColorSpace"],[4,"SurfaceCreationError"],[4,"AcquireError"],[4,"PresentError"],[3,"DisplayPlane"],[3,"Display"],[3,"DisplayMode"],[3,"Surface"],[3,"Swapchain"],[4,"FenceWaitError"],[4,"SharingMode"],[4,"Sharing"],[3,"Event"],[3,"Fence"],[3,"Semaphore"],[8,"Resource"],[8,"VulkanObject"],[8,"SynchronizedVulkanObject"],[8,"VulkanObjectU64"],[8,"VulkanObjectUsize"]]};
searchIndex["shared_library"] = {"doc":"","items":[[4,"LoadingError","shared_library","Error that can happen while loading the shared library.",null,null],[13,"LibraryNotFound","","",0,null],[12,"descr","shared_library::LoadingError","",0,null],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,null],[12,"symbol","shared_library::LoadingError","The symbol.",0,null],[0,"dynamic_library","shared_library","Dynamic library facilities.",null,null],[3,"DynamicLibrary","shared_library::dynamic_library","",null,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",1,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",1,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"from","alloc::boxed","",2,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",2,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",3,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",4,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",5,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",6,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",8,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"description","","",9,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"description","rustc_unicode::char","",10,{"inputs":[{"name":"decodeutf16error"}],"output":{"name":"str"}}],[11,"description","alloc::boxed","",2,{"inputs":[{"name":"box"}],"output":{"name":"str"}}],[11,"cause","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"is","shared_library::dynamic_library","Returns true if the boxed type is the same as `T`",11,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",11,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",11,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",11,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",11,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",11,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",11,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",11,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",11,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",11,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",11,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",11,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"next","std::ascii","",12,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",12,null],[11,"next_back","","",12,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","std::thread::local","",13,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",13,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",14,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",14,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"new","std::thread::local::elf","",15,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",15,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"new","std::thread::local::os","",16,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",16,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",17,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",17,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",17,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread::scoped_tls::imp","",18,{"inputs":[],"output":{"name":"keyinner"}}],[11,"set","","",18,null],[11,"get","","",18,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",19,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",19,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",19,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",19,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",20,null],[11,"name","","Gets the thread&#39;s name.",20,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",20,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"thread","","Extracts a handle to the underlying thread",21,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",21,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::map","",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",22,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",22,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",22,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",22,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"s"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",22,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",22,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"valuesmut"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",22,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",22,null],[11,"get","","Returns a reference to the value corresponding to the key.",22,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",22,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",22,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",22,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",22,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",22,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",22,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",23,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",24,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",25,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",22,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",23,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",23,null],[11,"len","","",23,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",26,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",26,null],[11,"len","","",26,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",27,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",27,null],[11,"len","","",27,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",24,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",24,null],[11,"len","","",24,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",25,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",25,null],[11,"len","","",25,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",28,{"inputs":[{"name":"valuesmut"}],"output":{"name":"option"}}],[11,"size_hint","","",28,null],[11,"len","","",28,{"inputs":[{"name":"valuesmut"}],"output":{"name":"usize"}}],[11,"next","","",29,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",29,null],[11,"len","","",29,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",30,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",30,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"key","","Returns a reference to this entry&#39;s key.",30,{"inputs":[{"name":"entry"}],"output":{"name":"k"}}],[11,"key","","Gets a reference to the key in the entry.",31,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"k"}}],[11,"get","","Gets a reference to the value in the entry.",31,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",31,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",31,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",31,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",31,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",32,{"inputs":[{"name":"vacantentry"}],"output":{"name":"k"}}],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",32,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",22,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",22,null],[11,"extend","","",22,null],[11,"clone","","",33,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",33,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",33,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",34,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",34,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",34,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",34,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",34,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",34,{"inputs":[{"name":"hashset"}],"output":{"name":"s"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",34,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",34,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",34,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",34,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",34,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",34,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",34,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",34,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",34,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",34,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",34,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",34,null],[11,"contains","","Returns `true` if the set contains a value.",34,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",34,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",34,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",34,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",34,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",34,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",34,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",34,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",34,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",34,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",34,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",34,null],[11,"extend","","",34,null],[11,"default","","",34,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",34,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",35,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",35,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",35,null],[11,"len","","",35,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",36,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",36,null],[11,"len","","",36,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",37,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",37,null],[11,"len","","",37,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",38,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",38,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"clone","","",39,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",39,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",39,null],[11,"clone","","",40,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",40,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",40,null],[11,"clone","","",41,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",41,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",41,null],[11,"clone","collections::linked_list","",42,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",43,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"default","","",44,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",44,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",44,null],[11,"iter","","Provides a forward iterator.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",44,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",44,{"inputs":[{"name":"linkedlist"},{"name":"t"}],"output":{"name":"bool"}}],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",44,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",44,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",44,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"front_place","","Returns a place for insertion at the front of the list.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"frontplace"}}],[11,"back_place","","Returns a place for insertion at the back of the list.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"backplace"}}],[11,"drop","","",44,null],[11,"next","","",42,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",42,null],[11,"next_back","","",42,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",45,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",45,null],[11,"next_back","","",45,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",45,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",45,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",43,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",43,null],[11,"next_back","","",43,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",44,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",44,null],[11,"extend","","",44,null],[11,"eq","","",44,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",44,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",44,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",44,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",44,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",44,null],[11,"make_place","","",46,{"inputs":[{"name":"frontplace"}],"output":{"name":"frontplace"}}],[11,"pointer","","",46,null],[11,"finalize","","",46,null],[11,"make_place","","",47,{"inputs":[{"name":"backplace"}],"output":{"name":"backplace"}}],[11,"pointer","","",47,null],[11,"finalize","","",47,null],[11,"clone","collections::binary_heap","",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",48,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",48,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",48,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",48,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",48,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",48,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",48,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",48,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",48,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",48,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",48,null],[11,"clone","","",49,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",49,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",49,null],[11,"next_back","","",49,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",50,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",50,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",50,null],[11,"next_back","","",50,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",51,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",51,null],[11,"next_back","","",51,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",48,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",52,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",48,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",48,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",48,null],[11,"extend","","",48,null],[11,"clone","collections::vec_deque","",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",53,null],[11,"default","","",53,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",53,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",53,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",53,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",53,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",53,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",53,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",53,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",53,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",53,null],[11,"iter","","Returns a front-to-back iterator.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",53,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",53,null],[11,"len","","Returns the number of elements in the `VecDeque`.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",53,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",53,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",53,{"inputs":[{"name":"vecdeque"},{"name":"t"}],"output":{"name":"bool"}}],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",53,null],[11,"push_back","","Appends an element to the back of a buffer",53,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",53,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",53,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",53,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",53,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",53,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",53,null],[11,"retain","","Retains only the elements specified by the predicate.",53,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",53,null],[11,"clone","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",54,null],[11,"next_back","","",54,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",55,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",55,null],[11,"next_back","","",55,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",56,null],[11,"next_back","","",56,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",57,null],[11,"next","","",57,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"next_back","","",57,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",53,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",53,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",53,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",53,null],[11,"index","","",53,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",53,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",53,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",53,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",53,null],[11,"extend","","",53,null],[11,"fmt","","",53,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",53,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",52,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"next","std::env","",58,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",58,null],[11,"next","","",59,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"clone","","",60,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",60,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",60,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",60,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",61,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"fmt","","",62,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",62,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",63,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"len","","",63,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",64,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"len","","",64,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",65,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",65,null],[11,"cmp","","",65,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",65,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",65,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",65,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",65,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",65,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",66,null],[11,"fmt","","",67,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",68,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",65,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",65,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",65,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",65,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",65,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",65,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",65,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",65,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",65,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",66,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",66,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",66,null],[11,"as_ptr","","Returns the inner pointer to this C string.",66,null],[11,"to_bytes","","Converts this C string to a byte slice.",66,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",66,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",66,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",66,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",65,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",65,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","collections::vec","",52,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",66,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",65,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",65,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",67,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",67,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",67,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",67,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",69,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",68,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",68,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",68,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"cause","","",68,{"inputs":[{"name":"intostringerror"}],"output":{"name":"option"}}],[11,"fmt","","",68,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",66,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",66,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"from","","",65,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",65,{"inputs":[{"name":"cstring"},{"name":"rangefull"}],"output":{"name":"cstr"}}],[11,"as_ref","","",66,{"inputs":[{"name":"cstr"}],"output":{"name":"cstr"}}],[11,"as_ref","","",65,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"clone","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",70,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",70,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",70,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",70,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",70,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",70,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",70,{"inputs":[{"name":"osstring"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",70,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",70,null],[11,"from","","",70,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",70,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",70,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",71,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",71,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",71,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",71,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"is_empty","","Checks whether the `OsStr` is empty.",71,{"inputs":[{"name":"osstr"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of this `OsStr`.",71,{"inputs":[{"name":"osstr"}],"output":{"name":"usize"}}],[11,"deref","","",70,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"default","","",70,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",70,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",70,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",70,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",70,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",70,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",70,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",70,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",70,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",70,null],[11,"eq","","",71,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",71,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",71,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",71,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",71,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",71,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",71,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",71,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",71,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"eq","","",70,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",71,{"inputs":[{"name":"osstr"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","","",71,{"inputs":[{"name":"osstr"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"eq","","",70,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",71,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",71,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",72,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"option"}}],[11,"hash","","",71,null],[11,"fmt","","",71,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",70,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",71,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",71,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",70,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","collections::string","",73,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",75,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",76,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",77,null],[11,"eq","","",77,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",77,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",78,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",78,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",78,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",78,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",78,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",78,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",78,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",78,null],[11,"read_to_end","","",78,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",78,null],[11,"flush","","",78,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",78,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank new set of options ready for configuration.",75,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",75,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",75,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",75,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",75,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",75,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create_new","","Sets the option to always create a new file.",75,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",75,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",74,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",74,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",74,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",74,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"modified","","Returns the last modification time listed in this metadata.",74,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"accessed","","Returns the last access time of this metadata.",74,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"created","","Returns the creation time listed in the this metadata.",74,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",76,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",76,null],[11,"is_dir","","Test whether this file type represents a directory.",77,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",77,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",77,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",79,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",80,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",80,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",80,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",80,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",81,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",81,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",81,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",82,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",82,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",82,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",82,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",82,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",82,null],[11,"fill_buf","","",82,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",82,null],[11,"fmt","","",82,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",82,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",83,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",84,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",84,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",84,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",84,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",84,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",84,null],[11,"flush","","",84,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",84,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",84,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",84,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",83,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",83,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",69,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",83,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",83,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",85,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",85,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",85,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",85,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",85,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",85,null],[11,"flush","","",85,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",85,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",86,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",86,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",86,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",86,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",86,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",86,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",86,null],[11,"seek","","",86,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",86,null],[11,"fill_buf","","",86,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",86,null],[11,"write","","",86,null],[11,"flush","","",86,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",86,null],[11,"flush","","",86,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",86,null],[11,"flush","","",86,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",69,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",87,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",87,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",69,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",69,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",69,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",69,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",69,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",69,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",69,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","alloc::boxed","",2,null],[11,"read_to_end","","",2,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",2,null],[11,"write","","",2,null],[11,"flush","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",2,null],[11,"write_fmt","","",2,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",2,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",2,null],[11,"read_until","","",2,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",2,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","collections::vec","",52,null],[11,"write_all","","",52,null],[11,"flush","","",52,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"read","std::io::util","",88,null],[11,"fill_buf","","",88,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",88,null],[11,"read","","",89,null],[11,"write","","",90,null],[11,"flush","","",90,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",91,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",91,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",91,null],[11,"read_to_end","","",91,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",91,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",91,null],[11,"read","","",92,null],[11,"read_to_end","","",92,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",92,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",92,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",93,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",93,null],[11,"flush","","",93,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",93,null],[11,"write_fmt","","",93,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",94,null],[11,"flush","","",94,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",95,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",95,null],[11,"flush","","",95,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",95,null],[11,"write_fmt","","",95,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",96,null],[11,"flush","","",96,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",97,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",97,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"read","","",98,null],[11,"fill_buf","","",98,{"inputs":[{"name":"chain"}],"output":{"name":"result"}}],[11,"consume","","",98,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",99,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",99,null],[11,"fill_buf","","",99,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",99,null],[11,"next","","",100,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",101,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",102,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",101,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",101,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",101,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",103,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",104,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",105,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",105,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",105,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",105,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",105,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",105,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",105,null],[11,"fmt","","",105,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",105,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",106,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",106,null],[11,"clone","","",106,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",106,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",107,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",107,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",105,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",107,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",107,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",107,null],[11,"partial_cmp","","",107,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",107,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",107,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",107,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",108,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",108,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this is an address reserved for documentation\nThis is defined to be 2001:db8::/32 in RFC 3849.",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",108,null],[11,"fmt","","",108,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",108,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",108,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",108,null],[11,"partial_cmp","","",108,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",108,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"from","","",108,null],[11,"fmt","std::net::addr","",109,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",109,null],[11,"eq","","",109,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",109,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",109,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",109,null],[11,"port","","Returns the port number associated with this socket address.",109,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",109,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",110,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",110,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",110,null],[11,"port","","Returns the port number associated with this socket address.",110,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",110,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",111,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",111,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",111,null],[11,"port","","Returns the port number associated with this socket address.",111,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",111,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",111,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_flowinfo","","Change the flow information associated with this socket address.",111,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",111,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_scope_id","","Change the scope ID associated with this socket address.",111,null],[11,"fmt","","",109,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",111,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",110,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",111,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",110,null],[11,"hash","","",111,null],[11,"to_socket_addrs","","",109,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",110,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",111,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",112,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",112,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",112,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",112,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",112,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",112,{"inputs":[{"name":"tcpstream"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",112,{"inputs":[{"name":"tcpstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"read","","",112,null],[11,"read_to_end","","",112,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",112,null],[11,"flush","","",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",113,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",113,{"inputs":[{"name":"tcplistener"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",113,{"inputs":[{"name":"tcplistener"},{"name":"bool"}],"output":{"name":"result"}}],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",113,{"inputs":[{"name":"tcplistener"},{"name":"bool"}],"output":{"name":"result"}}],[11,"next","","",114,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",113,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",115,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",115,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",115,null],[11,"local_addr","","Returns the socket address that this socket was created from.",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",115,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",115,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",115,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",115,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",115,{"inputs":[{"name":"udpsocket"},{"name":"u32"}],"output":{"name":"result"}}],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",115,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",115,{"inputs":[{"name":"udpsocket"},{"name":"u32"}],"output":{"name":"result"}}],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",115,{"inputs":[{"name":"udpsocket"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",115,{"inputs":[{"name":"udpsocket"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",115,{"inputs":[{"name":"udpsocket"},{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"result"}}],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",115,{"inputs":[{"name":"udpsocket"},{"name":"ipv6addr"},{"name":"u32"}],"output":{"name":"result"}}],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",115,{"inputs":[{"name":"udpsocket"},{"name":"a"}],"output":{"name":"result"}}],[11,"send","","Sends data on the socket to the remote address to which it is connected.",115,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",115,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",115,{"inputs":[{"name":"udpsocket"},{"name":"bool"}],"output":{"name":"result"}}],[11,"fmt","","",115,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",105,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",107,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",108,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",110,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",111,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",109,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",116,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",116,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",116,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",117,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",117,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",118,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",119,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::fs","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"st_dev","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_ino","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_mode","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_nlink","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_uid","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_gid","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_rdev","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_size","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_atime","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_atime_nsec","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime_nsec","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime_nsec","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_blksize","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_blocks","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"as_raw_fd","","",78,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",78,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",78,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",112,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",113,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",115,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",112,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",115,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",70,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",70,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",71,null],[11,"as_bytes","","",71,null],[11,"mode","std::fs","",76,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",76,null],[11,"from_mode","","",76,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",75,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"custom_flags","","",75,{"inputs":[{"name":"openoptions"},{"name":"i32"}],"output":{"name":"openoptions"}}],[11,"dev","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"atime","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"blocks","","",74,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"is_block_device","","",77,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",77,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",77,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",77,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",80,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",81,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",120,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",120,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",120,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"before_exec","","",120,{"inputs":[{"name":"command"},{"name":"f"}],"output":{"name":"command"}}],[11,"exec","","",120,{"inputs":[{"name":"command"}],"output":{"name":"error"}}],[11,"signal","","",121,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",122,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",123,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",124,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",125,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",123,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",124,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",125,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"as_pthread_t","std::thread","",21,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"into_pthread_t","","",21,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"clone","std::sys::ext::net","",126,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"is_unnamed","","Returns true iff the address is unnamed.",126,{"inputs":[{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",126,{"inputs":[{"name":"socketaddr"}],"output":{"name":"option"}}],[11,"fmt","","",126,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"unixstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"connect","","Connects to the socket named by `path`.",127,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",127,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",127,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this connection.",127,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",127,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout for the socket.",127,{"inputs":[{"name":"unixstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout for the socket.",127,{"inputs":[{"name":"unixstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",127,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",127,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",127,{"inputs":[{"name":"unixstream"},{"name":"bool"}],"output":{"name":"result"}}],[11,"take_error","","Returns the value of the `SO_ERROR` option.",127,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",127,{"inputs":[{"name":"unixstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"read","","",127,null],[11,"read_to_end","","",127,{"inputs":[{"name":"unixstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",127,null],[11,"flush","","",127,{"inputs":[{"name":"unixstream"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",127,{"inputs":[{"name":"unixstream"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",127,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",127,{"inputs":[{"name":"unixstream"}],"output":{"name":"i32"}}],[11,"fmt","","",128,{"inputs":[{"name":"unixlistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",128,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",128,{"inputs":[{"name":"unixlistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",128,{"inputs":[{"name":"unixlistener"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",128,{"inputs":[{"name":"unixlistener"}],"output":{"name":"result"}}],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",128,{"inputs":[{"name":"unixlistener"},{"name":"bool"}],"output":{"name":"result"}}],[11,"take_error","","Returns the value of the `SO_ERROR` option.",128,{"inputs":[{"name":"unixlistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over incoming connections.",128,{"inputs":[{"name":"unixlistener"}],"output":{"name":"incoming"}}],[11,"as_raw_fd","","",128,{"inputs":[{"name":"unixlistener"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",128,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",128,{"inputs":[{"name":"unixlistener"}],"output":{"name":"i32"}}],[11,"fmt","","",129,{"inputs":[{"name":"incoming"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",129,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"size_hint","","",129,null],[11,"fmt","","",130,{"inputs":[{"name":"unixdatagram"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a Unix datagram socket bound to the given path.",130,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",130,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",130,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",130,{"inputs":[{"name":"unixdatagram"},{"name":"p"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",130,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the address of this socket.",130,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",130,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket.",130,null],[11,"recv","","Receives data from the socket.",130,null],[11,"send_to","","Sends data on the socket to the specified address.",130,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",130,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",130,{"inputs":[{"name":"unixdatagram"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout for the socket.",130,{"inputs":[{"name":"unixdatagram"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",130,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",130,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",130,{"inputs":[{"name":"unixdatagram"},{"name":"bool"}],"output":{"name":"result"}}],[11,"take_error","","Returns the value of the `SO_ERROR` option.",130,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"result"}}],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",130,{"inputs":[{"name":"unixdatagram"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",130,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",130,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",130,{"inputs":[{"name":"unixdatagram"}],"output":{"name":"i32"}}],[11,"deref","std::panic","",131,{"inputs":[{"name":"assertunwindsafe"}],"output":{"name":"t"}}],[11,"deref_mut","","",131,{"inputs":[{"name":"assertunwindsafe"}],"output":{"name":"t"}}],[11,"call_once","","",131,null],[11,"new","","Creates a new `AssertRecoverSafe` wrapper around the provided type.",132,{"inputs":[{"name":"t"}],"output":{"name":"assertrecoversafe"}}],[11,"into_inner","","Consumes the `AssertRecoverSafe`, returning the wrapped value.",132,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref","","",132,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref_mut","","",132,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"call_once","","",132,null],[11,"eq","std::path","",133,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",133,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",133,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",133,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",133,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",133,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",133,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",133,null],[11,"fmt","","",133,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",133,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",134,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",134,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",134,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",134,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",134,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",134,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"hash","","",134,null],[11,"fmt","","",135,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",135,null],[11,"cmp","","",135,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",135,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",135,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",135,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",135,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",135,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",135,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",135,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",135,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",136,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",137,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",136,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",136,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",136,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",137,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",137,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",137,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",137,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",137,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",136,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",136,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",136,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",136,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",136,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"clone","","",138,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",138,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",138,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",138,null],[11,"pop","","Truncate `self` to `self.parent()`.",138,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",138,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",138,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",138,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",138,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",138,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",138,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",138,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",138,null],[11,"fmt","","",138,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",139,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",139,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",139,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",139,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",139,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",139,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",139,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",139,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",139,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",139,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",139,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"result"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",139,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",139,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",139,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",139,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",139,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",139,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",139,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",139,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",139,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",139,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Query the file system to get information about a file, directory, etc.",139,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",139,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",139,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",139,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Returns an iterator over the entries within a directory.",139,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Returns whether the path points at an existing entity.",139,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether the path is pointing at a regular file.",139,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Returns whether the path is pointing at a directory.",139,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",138,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",138,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"from","collections::borrow","",72,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",72,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",139,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",138,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"hash","","",138,null],[11,"partial_cmp","","",138,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",138,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",138,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",138,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"eq","","",140,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"stripprefixerror"}}],[11,"fmt","","",140,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",139,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",139,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",139,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",139,null],[11,"partial_cmp","","",139,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",139,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",139,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",71,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","collections::borrow","",72,{"inputs":[{"name":"cow"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","collections::string","",73,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",138,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"eq","","",138,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","","",139,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"option"}}],[11,"partial_cmp","","",139,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","","",138,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","std::path","",139,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"partial_cmp","std::path","",139,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","","",72,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"eq","std::path","",138,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"partial_cmp","std::path","",138,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","","",138,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",71,{"inputs":[{"name":"osstr"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",138,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",71,{"inputs":[{"name":"osstr"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",138,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",138,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",138,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"option"}}],[11,"partial_cmp","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",138,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",138,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",139,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",71,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",139,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",71,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::path","",139,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",139,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",139,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",139,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"option"}}],[11,"partial_cmp","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::path","",139,{"inputs":[{"name":"path"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",139,{"inputs":[{"name":"path"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","","",71,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",71,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",71,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",71,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",72,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",70,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","std::path","",140,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",140,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"str"}}],[11,"write","std::process","",123,null],[11,"flush","","",123,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",124,null],[11,"read_to_end","","",124,{"inputs":[{"name":"childstdout"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read","","",125,null],[11,"read_to_end","","",125,{"inputs":[{"name":"childstderr"},{"name":"vec"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",120,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",120,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",120,null],[11,"env","","Inserts or updates an environment variable mapping.",120,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",120,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",120,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",120,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",120,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",120,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",120,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",120,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",120,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",120,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",120,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",142,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"fmt","","",142,{"inputs":[{"name":"output"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",122,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",122,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",122,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",121,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",121,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",121,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",121,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",121,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",143,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",143,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",143,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",143,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",144,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",144,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",144,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",145,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",145,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",145,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",145,null],[11,"drop","","",144,null],[11,"drop","","",145,null],[11,"fmt","","",144,{"inputs":[{"name":"select"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",145,{"inputs":[{"name":"handle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc","",146,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",146,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",147,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",147,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",148,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",148,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",149,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",149,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",150,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",150,null],[11,"fmt","","",150,{"inputs":[{"name":"sender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value on this synchronous channel.",151,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",151,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",151,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",151,null],[11,"fmt","","",151,{"inputs":[{"name":"syncsender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",152,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",152,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",152,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",153,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",154,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",152,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",152,null],[11,"fmt","","",152,{"inputs":[{"name":"receiver"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",146,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",146,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",146,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",149,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",149,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",149,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",149,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",147,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",147,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",147,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",148,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",148,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",148,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",155,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",155,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",156,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",157,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",157,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",157,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",157,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",158,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",158,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",158,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",158,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",158,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",158,null],[11,"default","","",158,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",158,null],[11,"new","","Creates a new condition variable",159,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",159,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",159,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",159,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",159,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",159,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",159,null],[11,"drop","std::sync::mutex","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",1,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",160,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",160,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",160,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",160,null],[11,"deref","","",161,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",161,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",161,null],[11,"new","std::sync::once","Creates a new `Once` value.",162,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",162,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",162,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",163,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",163,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",163,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",163,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",163,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",163,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",163,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",163,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",163,null],[11,"fmt","","",163,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",163,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",164,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",164,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",164,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",164,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",164,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",164,null],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",165,{"inputs":[{"name":"rwlockreadguard"},{"name":"f"}],"output":{"name":"rwlockreadguard"}}],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",166,{"inputs":[{"name":"rwlockwriteguard"},{"name":"f"}],"output":{"name":"rwlockwriteguard"}}],[11,"deref","","",165,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",166,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",166,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",165,null],[11,"drop","","",166,null],[11,"default","core::sync::atomic","",167,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",168,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"default","","",169,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"default","","",170,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",171,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",171,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",167,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",167,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",167,null],[11,"swap","","Stores a value into the bool, returning the old value.",167,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",167,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",167,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",167,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",167,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",167,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",167,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",167,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",168,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",168,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",168,null],[11,"swap","","Stores a value into the isize, returning the old value.",168,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",168,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange","","Stores a value into the `isize` if the current value is the same as the `current` value.",168,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"compare_exchange_weak","","Stores a value into the `isize` if the current value is the same as the `current` value.",168,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",168,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",168,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",168,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",168,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",168,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",169,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",169,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",169,null],[11,"swap","","Stores a value into the usize, returning the old value.",169,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",169,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange","","Stores a value into the `usize` if the current value is the same as the `current` value.",169,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"compare_exchange_weak","","Stores a value into the `usize` if the current value is the same as the `current` value.",169,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",169,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",169,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",169,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",169,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",169,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",170,null],[11,"load","","Loads a value from the pointer.",170,null],[11,"store","","Stores a value into the pointer.",170,null],[11,"swap","","Stores a value into the pointer, returning the old value.",170,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",170,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",170,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",170,null],[11,"fmt","","",169,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",168,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",167,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",170,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","std::time::duration","",172,null],[11,"fmt","","",172,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",172,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",172,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",172,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",172,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",172,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",172,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",172,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",172,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",172,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",172,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",172,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",172,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",172,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",172,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"add_assign","","",172,null],[11,"sub","","",172,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub_assign","","",172,null],[11,"mul","","",172,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"mul_assign","","",172,null],[11,"div","","",172,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div_assign","","",172,null],[11,"cmp","std::time","",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",173,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",174,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",174,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",174,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",174,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",174,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",174,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",174,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",174,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"fmt","","",175,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"systemtimeerror"}}],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",173,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",173,{"inputs":[{"name":"instant"}],"output":{"name":"duration"}}],[11,"add","","",173,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"add_assign","","",173,null],[11,"sub","","",173,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub_assign","","",173,null],[11,"sub","","",173,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"fmt","","",173,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",174,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",174,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",174,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",174,{"inputs":[{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add","","",174,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"add_assign","","",174,null],[11,"sub","","",174,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub_assign","","",174,null],[11,"fmt","","",174,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",175,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"duration"}}],[11,"description","","",175,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"str"}}],[11,"fmt","","",175,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::sys_common::poison","",176,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",176,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",176,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",176,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",176,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",176,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",176,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",177,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",177,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",177,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",177,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",177,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"clone","libc::unix","",178,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",179,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",180,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",181,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",182,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",183,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",184,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",185,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",186,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",187,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",188,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",189,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","","",190,{"inputs":[{"name":"winsize"}],"output":{"name":"winsize"}}],[11,"clone","libc::unix::notbsd","",191,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",192,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",193,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",194,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",195,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",196,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",197,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",198,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",199,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",200,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",201,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",202,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",203,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",204,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",205,{"inputs":[{"name":"lconv"}],"output":{"name":"lconv"}}],[11,"clone","libc::unix::notbsd::linux","",206,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",207,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",208,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",209,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",210,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",211,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",212,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",213,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",214,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",215,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",216,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",217,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",218,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",219,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",220,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",221,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",222,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",223,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",224,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",225,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",226,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",227,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",228,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",229,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",230,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",231,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",232,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","libc::unix::notbsd::linux::other::b64","",233,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",234,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",235,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",236,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",237,{"inputs":[{"name":"mcontext_t"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",238,{"inputs":[{"name":"ucontext_t"}],"output":{"name":"ucontext_t"}}],[11,"payload","std::panicking","Returns the payload associated with the panic.",239,{"inputs":[{"name":"panicinfo"}],"output":{"name":"any"}}],[11,"location","","Returns information about the location from which the panic originated,\nif available.",239,{"inputs":[{"name":"panicinfo"}],"output":{"name":"option"}}],[11,"file","","Returns the name of the source file from which the panic originated.",240,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"line","","Returns the line number from which the panic originated.",240,{"inputs":[{"name":"location"}],"output":{"name":"u32"}}],[11,"cmp","collections::string","",73,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",73,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",73,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",73,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",73,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",73,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new empty `String`.",73,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",73,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",73,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",73,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",73,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",73,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",73,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",73,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",73,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",73,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_mut_str","","Extracts a string slice containing the entire string.",73,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Appends a given string slice onto the end of this `String`.",73,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",73,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",73,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",73,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",73,null],[11,"push","","Appends the given `char` to the end of this `String`.",73,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",73,null],[11,"truncate","","Shortens this `String` to the specified length.",73,null],[11,"pop","","Removes the last character from the string buffer and returns it.",73,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",73,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into this `String` at a byte position.",73,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",73,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of this `String`, in bytes.",73,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",73,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates this `String`, removing all contents.",73,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",73,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",73,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",7,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",7,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",73,null],[11,"from_iter","","",73,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",73,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",73,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",73,null],[11,"extend","","",73,null],[11,"extend","","",73,null],[11,"extend","","",73,null],[11,"eq","","",73,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",73,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",73,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",72,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",72,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",72,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",73,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"default","","",73,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",73,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",73,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",73,null],[11,"add","","",73,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",73,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",73,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",73,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",73,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index","","",73,{"inputs":[{"name":"string"},{"name":"rangeinclusive"}],"output":{"name":"str"}}],[11,"index","","",73,{"inputs":[{"name":"string"},{"name":"rangetoinclusive"}],"output":{"name":"str"}}],[11,"index_mut","","",73,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",73,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",73,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",73,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",73,{"inputs":[{"name":"string"},{"name":"rangeinclusive"}],"output":{"name":"str"}}],[11,"index_mut","","",73,{"inputs":[{"name":"string"},{"name":"rangetoinclusive"}],"output":{"name":"str"}}],[11,"deref","","",73,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",73,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",73,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",9,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",73,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",73,null],[11,"from","","",73,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",72,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",72,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",73,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"write_str","","",73,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",73,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",241,null],[11,"next","","",241,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",241,null],[11,"next_back","","",241,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"clone","core::raw","",242,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",243,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"next","rustc_unicode::char","",244,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",245,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"clone","","",246,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"eq","","",10,{"inputs":[{"name":"decodeutf16error"},{"name":"decodeutf16error"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"decodeutf16error"},{"name":"decodeutf16error"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"decodeutf16error"}],"output":{"name":"decodeutf16error"}}],[11,"fmt","","",10,{"inputs":[{"name":"decodeutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",246,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",246,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",10,{"inputs":[{"name":"decodeutf16error"}],"output":{"name":"u16"}}],[11,"fmt","","",10,{"inputs":[{"name":"decodeutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::cmp","",247,null],[11,"fmt","","",247,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",247,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",247,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",247,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",247,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",247,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",248,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",249,null],[11,"make_place","","",249,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",249,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",2,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",248,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",249,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",2,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",2,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",2,null],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",2,null],[11,"from","","",2,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",2,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next_back","","",2,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",2,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",2,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",2,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"fmt","shared_library::dynamic_library","",250,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",250,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",250,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",250,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",250,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",250,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",250,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",250,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",251,null],[11,"fmt","","",251,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",251,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",251,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",251,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",251,{"inputs":[],"output":{"name":"typeid"}}],[11,"new","core::ptr","Creates a new `Unique`.",252,null],[11,"get","","Dereferences the content.",252,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",252,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",252,null],[11,"fmt","","",252,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",253,null],[11,"clone","","",253,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",253,null],[11,"fmt","","",253,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","collections::str","",254,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"encodeutf16"}}],[11,"next","","",254,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",254,null],[11,"borrow","collections::string","",73,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"fmt","core::str::pattern","",255,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",255,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",255,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",255,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"fmt","","",256,{"inputs":[{"name":"charsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",256,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",256,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",256,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",256,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",256,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",256,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",256,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",256,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",257,{"inputs":[{"name":"charslicesearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",257,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",257,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",257,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",257,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",257,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",257,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",257,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",257,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",258,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"fmt","","",258,{"inputs":[{"name":"charpredicatesearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"haystack","","",258,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",258,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",258,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",258,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",258,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",258,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",258,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",259,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",259,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"haystack","","",259,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",259,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",259,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",259,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",259,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"eq","core::ops","",260,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",260,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",260,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",261,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",261,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",261,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",261,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",261,{"inputs":[{"name":"range"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",262,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",262,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",262,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",262,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",262,{"inputs":[{"name":"rangefrom"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",263,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",263,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",263,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",263,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",263,{"inputs":[{"name":"rangeto"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",264,{"inputs":[{"name":"rangeinclusive"},{"name":"rangeinclusive"}],"output":{"name":"bool"}}],[11,"ne","","",264,{"inputs":[{"name":"rangeinclusive"},{"name":"rangeinclusive"}],"output":{"name":"bool"}}],[11,"clone","","",264,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"fmt","","",264,{"inputs":[{"name":"rangeinclusive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",264,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",264,{"inputs":[{"name":"rangeinclusive"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",265,{"inputs":[{"name":"rangetoinclusive"},{"name":"rangetoinclusive"}],"output":{"name":"bool"}}],[11,"ne","","",265,{"inputs":[{"name":"rangetoinclusive"},{"name":"rangetoinclusive"}],"output":{"name":"bool"}}],[11,"clone","","",265,{"inputs":[{"name":"rangetoinclusive"}],"output":{"name":"rangetoinclusive"}}],[11,"fmt","","",265,{"inputs":[{"name":"rangetoinclusive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",265,{"inputs":[{"name":"rangetoinclusive"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"fmt","core::hash::sip","",266,{"inputs":[{"name":"siphasher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",266,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",266,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",266,null],[11,"finish","","",266,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",266,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",266,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",267,{"inputs":[{"name":"buildhasherdefault"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"build_hasher","","",267,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",267,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",267,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",52,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",52,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",52,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",52,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",52,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",52,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",52,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",52,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",52,null],[11,"as_slice","","Extracts a slice containing the entire vector.",52,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",52,null],[11,"set_len","","Sets the length of a vector.",52,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",52,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",52,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",52,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",52,null],[11,"push","","Appends an element to the back of a collection.",52,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",52,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",52,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",52,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",52,null],[11,"len","","Returns the number of elements in the vector.",52,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",52,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",52,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",52,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",52,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",52,null],[11,"clone","","",52,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",52,null],[11,"hash","","",52,null],[11,"index","","",52,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",52,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",52,null],[11,"index","","",52,null],[11,"index","","",52,null],[11,"index","","",52,null],[11,"index","","",52,null],[11,"index","","",52,null],[11,"index_mut","","",52,null],[11,"index_mut","","",52,null],[11,"index_mut","","",52,null],[11,"index_mut","","",52,null],[11,"index_mut","","",52,null],[11,"index_mut","","",52,null],[11,"deref","","",52,null],[11,"deref_mut","","",52,null],[11,"from_iter","","",52,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",52,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",52,null],[11,"extend","","",52,null],[11,"eq","","",52,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","collections::borrow","",72,null],[11,"ne","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"eq","","",72,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"partial_cmp","","",52,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",52,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",52,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",52,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",52,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",52,null],[11,"as_mut","","",52,null],[11,"from","","",52,null],[11,"from","","",52,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",72,null],[11,"from","","",72,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",72,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",268,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",268,null],[11,"count","","",268,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",268,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",268,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"drop","","",268,null],[11,"next","","",269,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",269,null],[11,"next_back","","",269,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",269,null],[11,"fmt","core::iter::range","",270,{"inputs":[{"name":"stepby"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",270,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",262,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",261,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",264,{"inputs":[{"name":"rangeinclusive"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter::range","",270,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",270,null],[11,"next","","",270,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",270,null],[11,"next","","",270,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",270,null],[11,"next","core::ops","",261,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",261,null],[11,"next_back","","",261,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",262,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"next","","",264,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",264,null],[11,"next_back","","",264,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"fmt","core::iter::sources","",271,{"inputs":[{"name":"repeat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",271,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",271,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",271,null],[11,"next_back","","",271,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"fmt","","",272,{"inputs":[{"name":"empty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",272,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",272,null],[11,"next_back","","",272,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",272,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",272,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",272,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",273,{"inputs":[{"name":"once"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",273,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",273,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",273,null],[11,"next_back","","",273,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",273,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"fmt","core::iter","",274,{"inputs":[{"name":"rev"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",274,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",274,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",274,null],[11,"next_back","","",274,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"fmt","","",275,{"inputs":[{"name":"cloned"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",275,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",275,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",275,null],[11,"next_back","","",275,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"fmt","","",276,{"inputs":[{"name":"cycle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",276,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",276,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",276,null],[11,"fmt","","",277,{"inputs":[{"name":"chain"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",277,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",277,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",277,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",277,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"find","","",277,{"inputs":[{"name":"chain"},{"name":"p"}],"output":{"name":"option"}}],[11,"last","","",277,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",277,null],[11,"next_back","","",277,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"fmt","","",278,{"inputs":[{"name":"zip"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",278,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",278,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",278,null],[11,"next_back","","",278,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",279,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"fmt","","",279,{"inputs":[{"name":"map"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",279,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",279,null],[11,"next_back","","",279,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",280,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"fmt","","",280,{"inputs":[{"name":"filter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",280,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",280,null],[11,"next_back","","",280,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",281,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"fmt","","",281,{"inputs":[{"name":"filtermap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",281,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",281,null],[11,"next_back","","",281,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"fmt","","",282,{"inputs":[{"name":"enumerate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",282,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",282,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",282,null],[11,"nth","","",282,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",282,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",282,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"fmt","","",283,{"inputs":[{"name":"peekable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",283,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",283,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",283,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",283,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",283,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",283,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",283,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",283,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",284,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"fmt","","",284,{"inputs":[{"name":"skipwhile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",284,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",284,null],[11,"clone","","",285,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"fmt","","",285,{"inputs":[{"name":"takewhile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",285,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",285,null],[11,"fmt","","",286,{"inputs":[{"name":"skip"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",286,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",286,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",286,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",286,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",286,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",286,null],[11,"next_back","","",286,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"fmt","","",287,{"inputs":[{"name":"take"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",287,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",287,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",287,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",287,null],[11,"clone","","",288,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"fmt","","",288,{"inputs":[{"name":"scan"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",288,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",288,null],[11,"clone","","",289,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"fmt","","",289,{"inputs":[{"name":"flatmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",289,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",289,null],[11,"next_back","","",289,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"fmt","","",290,{"inputs":[{"name":"fuse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",290,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",290,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",290,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",290,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",290,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",290,null],[11,"next_back","","",290,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",291,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"fmt","","",291,{"inputs":[{"name":"inspect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",291,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",291,null],[11,"next_back","","",291,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"hash","core::option","",292,null],[11,"fmt","","",292,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",292,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",292,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",292,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",292,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",292,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",292,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",292,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",292,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",292,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"is_some","","Returns `true` if the option is a `Some` value",292,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",292,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",292,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",292,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",292,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",292,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",292,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",292,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",292,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",292,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",292,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",292,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",292,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",292,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",292,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",292,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",292,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",292,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",292,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",292,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",292,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",292,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","","",292,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",292,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"fmt","","",293,{"inputs":[{"name":"iter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",293,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",293,null],[11,"next_back","","",293,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",293,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"fmt","","",294,{"inputs":[{"name":"itermut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",294,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",294,null],[11,"next_back","","",294,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"fmt","","",295,{"inputs":[{"name":"intoiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",295,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",295,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",295,null],[11,"next_back","","",295,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",292,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"hash","core::marker","",296,null],[11,"eq","","",296,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",296,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",296,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",296,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",296,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"borrow","collections::vec","",52,null],[11,"borrow_mut","","",52,null],[11,"borrow","collections::borrow","",72,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",72,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",72,null],[11,"into_owned","","Extracts the owned data.",72,null],[11,"deref","","",72,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",72,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",72,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",72,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",72,null],[11,"as_ref","","",72,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",297,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",297,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",297,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",297,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",297,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"clone","","",297,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",297,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",297,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",298,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",298,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",298,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",299,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",299,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",299,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"clone","","",299,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",299,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",299,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"deref","","",300,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",300,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",300,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",300,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",301,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",301,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"deref","","",301,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",301,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",302,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",302,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",302,null],[11,"default","","",302,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",303,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",303,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",303,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",303,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",303,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",303,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",303,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",303,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",303,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",303,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc&lt;T&gt;`.",303,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",303,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",303,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",303,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",303,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",303,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",303,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",303,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",303,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",303,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",303,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",303,null],[11,"fmt","","",303,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",303,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",303,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",303,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",304,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",304,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",304,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",304,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",304,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",303,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",303,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"hash","core::result","",305,null],[11,"fmt","","",305,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",305,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",305,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",305,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",305,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",305,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",305,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",305,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",305,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",305,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",305,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",305,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",305,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",305,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",305,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",305,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",305,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",305,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",305,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",305,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",305,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",305,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",305,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",305,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",305,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",305,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",305,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",305,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",305,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",305,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"fmt","","",306,{"inputs":[{"name":"iter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",306,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",306,null],[11,"next_back","","",306,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",306,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"fmt","","",307,{"inputs":[{"name":"itermut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",307,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",307,null],[11,"next_back","","",307,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"fmt","","",308,{"inputs":[{"name":"intoiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",308,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",308,null],[11,"next_back","","",308,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",305,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"drop","shared_library::dynamic_library","",309,{"inputs":[{"name":"dynamiclibrary"}],"output":null}],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",309,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",309,{"inputs":[{"name":"path"}],"output":null}],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",309,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",309,{"inputs":[],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",309,{"inputs":[],"output":{"name":"vec"}}],[11,"symbol","","Access the value at the symbol of the dynamic library",309,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"clone","shared_library","",0,{"inputs":[{"name":"loadingerror"}],"output":{"name":"loadingerror"}}],[11,"fmt","","",0,{"inputs":[{"name":"loadingerror"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"shared_library!","","",null,null]],"paths":[[4,"LoadingError"],[3,"Mutex"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[3,"AssertRecoverSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"Drain"],[3,"Slice"],[3,"TraitObject"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[4,"Ordering"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[8,"Any"],[3,"TypeId"],[3,"Unique"],[3,"Shared"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"IntoIter"],[3,"Drain"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"PhantomData"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"Rc"],[3,"Weak"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"DynamicLibrary"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",13,null],[12,"sa_data","","",13,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",14,null],[12,"sin_port","","",14,null],[12,"sin_addr","","",14,null],[12,"sin_zero","","",14,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",15,null],[12,"sin6_port","","",15,null],[12,"sin6_flowinfo","","",15,null],[12,"sin6_addr","","",15,null],[12,"sin6_scope_id","","",15,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",16,null],[12,"sun_path","","",16,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",17,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",18,null],[12,"ai_family","","",18,null],[12,"ai_socktype","","",18,null],[12,"ai_protocol","","",18,null],[12,"ai_addrlen","","",18,null],[12,"ai_addr","","",18,null],[12,"ai_canonname","","",18,null],[12,"ai_next","","",18,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",19,null],[12,"nl_pid","","",19,null],[12,"nl_groups","","",19,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",20,null],[12,"sll_protocol","","",20,null],[12,"sll_ifindex","","",20,null],[12,"sll_hatype","","",20,null],[12,"sll_pkttype","","",20,null],[12,"sll_halen","","",20,null],[12,"sll_addr","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",22,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",23,null],[12,"dli_fbase","","",23,null],[12,"dli_sname","","",23,null],[12,"dli_saddr","","",23,null],[3,"epoll_event","","",null,null],[12,"events","","",24,null],[12,"u64","","",24,null],[3,"utsname","","",null,null],[12,"sysname","","",25,null],[12,"nodename","","",25,null],[12,"release","","",25,null],[12,"version","","",25,null],[12,"machine","","",25,null],[12,"domainname","","",25,null],[3,"lconv","","",null,null],[12,"decimal_point","","",26,null],[12,"thousands_sep","","",26,null],[12,"grouping","","",26,null],[12,"int_curr_symbol","","",26,null],[12,"currency_symbol","","",26,null],[12,"mon_decimal_point","","",26,null],[12,"mon_thousands_sep","","",26,null],[12,"mon_grouping","","",26,null],[12,"positive_sign","","",26,null],[12,"negative_sign","","",26,null],[12,"int_frac_digits","","",26,null],[12,"frac_digits","","",26,null],[12,"p_cs_precedes","","",26,null],[12,"p_sep_by_space","","",26,null],[12,"n_cs_precedes","","",26,null],[12,"n_sep_by_space","","",26,null],[12,"p_sign_posn","","",26,null],[12,"n_sign_posn","","",26,null],[12,"int_p_cs_precedes","","",26,null],[12,"int_p_sep_by_space","","",26,null],[12,"int_n_cs_precedes","","",26,null],[12,"int_n_sep_by_space","","",26,null],[12,"int_p_sign_posn","","",26,null],[12,"int_n_sign_posn","","",26,null],[3,"dirent","","",null,null],[12,"d_ino","","",27,null],[12,"d_off","","",27,null],[12,"d_reclen","","",27,null],[12,"d_type","","",27,null],[12,"d_name","","",27,null],[3,"dirent64","","",null,null],[12,"d_ino","","",28,null],[12,"d_off","","",28,null],[12,"d_reclen","","",28,null],[12,"d_type","","",28,null],[12,"d_name","","",28,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",29,null],[12,"rlim_max","","",29,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",30,null],[12,"gl_pathv","","",30,null],[12,"gl_offs","","",30,null],[12,"gl_flags","","",30,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",31,null],[12,"ifa_name","","",31,null],[12,"ifa_flags","","",31,null],[12,"ifa_addr","","",31,null],[12,"ifa_netmask","","",31,null],[12,"ifa_ifu","","",31,null],[12,"ifa_data","","",31,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",32,null],[12,"pw_passwd","","",32,null],[12,"pw_uid","","",32,null],[12,"pw_gid","","",32,null],[12,"pw_gecos","","",32,null],[12,"pw_dir","","",32,null],[12,"pw_shell","","",32,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",33,null],[12,"f_frsize","","",33,null],[12,"f_blocks","","",33,null],[12,"f_bfree","","",33,null],[12,"f_bavail","","",33,null],[12,"f_files","","",33,null],[12,"f_ffree","","",33,null],[12,"f_favail","","",33,null],[12,"f_fsid","","",33,null],[12,"f_flag","","",33,null],[12,"f_namemax","","",33,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",34,null],[12,"dqb_bsoftlimit","","",34,null],[12,"dqb_curspace","","",34,null],[12,"dqb_ihardlimit","","",34,null],[12,"dqb_isoftlimit","","",34,null],[12,"dqb_curinodes","","",34,null],[12,"dqb_btime","","",34,null],[12,"dqb_itime","","",34,null],[12,"dqb_valid","","",34,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",35,null],[12,"ssi_errno","","",35,null],[12,"ssi_code","","",35,null],[12,"ssi_pid","","",35,null],[12,"ssi_uid","","",35,null],[12,"ssi_fd","","",35,null],[12,"ssi_tid","","",35,null],[12,"ssi_band","","",35,null],[12,"ssi_overrun","","",35,null],[12,"ssi_trapno","","",35,null],[12,"ssi_status","","",35,null],[12,"ssi_int","","",35,null],[12,"ssi_ptr","","",35,null],[12,"ssi_utime","","",35,null],[12,"ssi_stime","","",35,null],[12,"ssi_addr","","",35,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",36,null],[12,"mq_maxmsg","","",36,null],[12,"mq_msgsize","","",36,null],[12,"mq_curmsgs","","",36,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",37,null],[12,"sa_mask","","",37,null],[12,"sa_flags","","",37,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",38,null],[12,"ss_flags","","",38,null],[12,"ss_size","","",38,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",39,null],[12,"si_errno","","",39,null],[12,"si_code","","",39,null],[12,"_pad","","",39,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",40,null],[12,"gl_pathv","","",40,null],[12,"gl_offs","","",40,null],[12,"gl_flags","","",40,null],[3,"ucred","","",null,null],[12,"pid","","",41,null],[12,"uid","","",41,null],[12,"gid","","",41,null],[3,"statfs","","",null,null],[12,"f_type","","",42,null],[12,"f_bsize","","",42,null],[12,"f_blocks","","",42,null],[12,"f_bfree","","",42,null],[12,"f_bavail","","",42,null],[12,"f_files","","",42,null],[12,"f_ffree","","",42,null],[12,"f_fsid","","",42,null],[12,"f_namelen","","",42,null],[12,"f_frsize","","",42,null],[3,"msghdr","","",null,null],[12,"msg_name","","",43,null],[12,"msg_namelen","","",43,null],[12,"msg_iov","","",43,null],[12,"msg_iovlen","","",43,null],[12,"msg_control","","",43,null],[12,"msg_controllen","","",43,null],[12,"msg_flags","","",43,null],[3,"termios","","",null,null],[12,"c_iflag","","",44,null],[12,"c_oflag","","",44,null],[12,"c_cflag","","",44,null],[12,"c_lflag","","",44,null],[12,"c_line","","",44,null],[12,"c_cc","","",44,null],[12,"c_ispeed","","",44,null],[12,"c_ospeed","","",44,null],[3,"flock","","",null,null],[12,"l_type","","",45,null],[12,"l_whence","","",45,null],[12,"l_start","","",45,null],[12,"l_len","","",45,null],[12,"l_pid","","",45,null],[3,"ipc_perm","","",null,null],[12,"__key","","",46,null],[12,"uid","","",46,null],[12,"gid","","",46,null],[12,"cuid","","",46,null],[12,"cgid","","",46,null],[12,"mode","","",46,null],[12,"__seq","","",46,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",47,null],[12,"shm_segsz","","",47,null],[12,"shm_atime","","",47,null],[12,"shm_dtime","","",47,null],[12,"shm_ctime","","",47,null],[12,"shm_cpid","","",47,null],[12,"shm_lpid","","",47,null],[12,"shm_nattch","","",47,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",48,null],[12,"st_ino","","",48,null],[12,"st_nlink","","",48,null],[12,"st_mode","","",48,null],[12,"st_uid","","",48,null],[12,"st_gid","","",48,null],[12,"st_rdev","","",48,null],[12,"st_size","","",48,null],[12,"st_blksize","","",48,null],[12,"st_blocks","","",48,null],[12,"st_atime","","",48,null],[12,"st_atime_nsec","","",48,null],[12,"st_mtime","","",48,null],[12,"st_mtime_nsec","","",48,null],[12,"st_ctime","","",48,null],[12,"st_ctime_nsec","","",48,null],[3,"stat64","","",null,null],[12,"st_dev","","",49,null],[12,"st_ino","","",49,null],[12,"st_nlink","","",49,null],[12,"st_mode","","",49,null],[12,"st_uid","","",49,null],[12,"st_gid","","",49,null],[12,"st_rdev","","",49,null],[12,"st_size","","",49,null],[12,"st_blksize","","",49,null],[12,"st_blocks","","",49,null],[12,"st_atime","","",49,null],[12,"st_atime_nsec","","",49,null],[12,"st_mtime","","",49,null],[12,"st_mtime_nsec","","",49,null],[12,"st_ctime","","",49,null],[12,"st_ctime_nsec","","",49,null],[3,"pthread_attr_t","","",null,null],[3,"mcontext_t","","",null,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",50,null],[12,"uc_link","","",50,null],[12,"uc_stack","","",50,null],[12,"uc_mcontext","","",50,null],[12,"uc_sigmask","","",50,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",51,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",51,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",51,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",51,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",51,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",51,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",51,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",51,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",51,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",51,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",51,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",51,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",51,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",51,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",51,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",51,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",51,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",51,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",51,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",51,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"hash","core::num","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"shl","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",52,null],[11,"shr","","",52,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",52,null],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"neg","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"neg","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"neg","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"neg","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"neg","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"neg","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"neg","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"neg","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"neg","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",52,null],[11,"sub","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",52,null],[11,"mul","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",52,null],[11,"div","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",52,null],[11,"rem","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",52,null],[11,"not","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",52,null],[11,"bitor","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",52,null],[11,"bitand","","",52,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",52,null],[11,"neg","","",52,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"eq","core::num::dec2flt","",53,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"parsefloaterror"},{"name":"parsefloaterror"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"parsefloaterror"}}],[11,"fmt","","",53,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"parsefloaterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::num","",54,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",54,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",55,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",55,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",56,null],[11,"fmt","","",56,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",56,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",56,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",57,null],[11,"get","","Dereferences the content.",57,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",57,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",57,null],[11,"fmt","","",57,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",58,null],[11,"clone","","",58,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",59,null],[11,"eq","","",59,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",59,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",59,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",59,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",59,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",60,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",60,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",61,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",61,{"inputs":[{"name":"range"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",62,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",62,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",62,{"inputs":[{"name":"rangefrom"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",63,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",63,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",63,{"inputs":[{"name":"rangeto"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",64,{"inputs":[{"name":"rangeinclusive"},{"name":"rangeinclusive"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"rangeinclusive"},{"name":"rangeinclusive"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"fmt","","",64,{"inputs":[{"name":"rangeinclusive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",64,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",64,{"inputs":[{"name":"rangeinclusive"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"eq","","",65,{"inputs":[{"name":"rangetoinclusive"},{"name":"rangetoinclusive"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"rangetoinclusive"},{"name":"rangetoinclusive"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"rangetoinclusive"}],"output":{"name":"rangetoinclusive"}}],[11,"fmt","","",65,{"inputs":[{"name":"rangetoinclusive"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","# Examples",65,{"inputs":[{"name":"rangetoinclusive"},{"name":"idx"}],"output":{"name":"bool"}}],[11,"hash","core::cmp","",66,null],[11,"fmt","","",66,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",66,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",66,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","libc","",67,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",67,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",67,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",67,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",67,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",67,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",67,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",67,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",68,null],[11,"fmt","","",68,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",68,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",69,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",70,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"default","","",71,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"default","","",72,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",73,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",69,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",69,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",69,null],[11,"swap","","Stores a value into the bool, returning the old value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",69,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",70,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",70,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",70,null],[11,"swap","","Stores a value into the isize, returning the old value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange","","Stores a value into the `isize` if the current value is the same as the `current` value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"compare_exchange_weak","","Stores a value into the `isize` if the current value is the same as the `current` value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",70,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",71,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",71,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",71,null],[11,"swap","","Stores a value into the usize, returning the old value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange","","Stores a value into the `usize` if the current value is the same as the `current` value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"compare_exchange_weak","","Stores a value into the `usize` if the current value is the same as the `current` value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"fetch_add","","Add to the current usize, returning the previous value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",71,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",72,null],[11,"load","","Loads a value from the pointer.",72,null],[11,"store","","Stores a value into the pointer.",72,null],[11,"swap","","Stores a value into the pointer, returning the old value.",72,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",72,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",72,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",72,null],[11,"fmt","","",71,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",70,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",69,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",74,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",74,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",74,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",74,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",74,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"clone","","",74,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",74,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",74,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",76,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",76,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",76,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",76,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",76,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",76,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",76,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"clone","","",76,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",76,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",76,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"deref","","",77,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",77,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",77,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",77,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",78,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",78,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"deref","","",78,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",78,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",79,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",79,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",79,null],[11,"default","","",79,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",80,{"inputs":[{"name":"escapeunicode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"next","","",80,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"fmt","","",81,{"inputs":[{"name":"escapedefault"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"next","","",81,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"count","","",81,{"inputs":[{"name":"escapedefault"}],"output":{"name":"usize"}}],[11,"nth","","",81,{"inputs":[{"name":"escapedefault"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",81,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"fmt","","",82,{"inputs":[{"name":"encodeutf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",82,null],[11,"next","","",82,{"inputs":[{"name":"encodeutf8"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"fmt","","",83,{"inputs":[{"name":"encodeutf16"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",83,null],[11,"next","","",83,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"fmt","core::iter::range","",84,{"inputs":[{"name":"stepby"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",62,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",61,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",64,{"inputs":[{"name":"rangeinclusive"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter::range","",84,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next","","",84,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next","","",84,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next","core::ops","",61,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",62,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"next","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"fmt","core::iter::sources","",85,{"inputs":[{"name":"repeat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",85,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"fmt","","",86,{"inputs":[{"name":"empty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",86,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",86,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",86,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",86,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",87,{"inputs":[{"name":"once"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",87,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"next_back","","",87,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",87,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"fmt","core::iter","",88,{"inputs":[{"name":"rev"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",88,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"next_back","","",88,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"fmt","","",89,{"inputs":[{"name":"cloned"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",89,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"fmt","","",90,{"inputs":[{"name":"cycle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",90,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"fmt","","",91,{"inputs":[{"name":"chain"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"next","","",91,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",91,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",91,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"find","","",91,{"inputs":[{"name":"chain"},{"name":"p"}],"output":{"name":"option"}}],[11,"last","","",91,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"next_back","","",91,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"fmt","","",92,{"inputs":[{"name":"zip"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",92,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next_back","","",92,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",93,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"fmt","","",93,{"inputs":[{"name":"map"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",93,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next_back","","",93,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",94,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"fmt","","",94,{"inputs":[{"name":"filter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",94,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",95,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"fmt","","",95,{"inputs":[{"name":"filtermap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",95,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"next_back","","",95,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"fmt","","",96,{"inputs":[{"name":"enumerate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",96,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"nth","","",96,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",96,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",96,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"fmt","","",97,{"inputs":[{"name":"peekable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",97,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",97,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",97,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",97,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",97,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",97,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"fmt","","",98,{"inputs":[{"name":"skipwhile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",98,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"clone","","",99,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"fmt","","",99,{"inputs":[{"name":"takewhile"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",99,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"fmt","","",100,{"inputs":[{"name":"skip"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",100,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",100,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",100,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",100,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next_back","","",100,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"fmt","","",101,{"inputs":[{"name":"take"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",101,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",101,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"clone","","",102,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"fmt","","",102,{"inputs":[{"name":"scan"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",102,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"clone","","",103,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"fmt","","",103,{"inputs":[{"name":"flatmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",103,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"next_back","","",103,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"fmt","","",104,{"inputs":[{"name":"fuse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",104,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",104,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",104,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",104,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",104,null],[11,"next_back","","",104,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"fmt","","",105,{"inputs":[{"name":"inspect"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",105,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next_back","","",105,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"hash","core::option","",51,null],[11,"fmt","","",51,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",51,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",51,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"fmt","","",106,{"inputs":[{"name":"iter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",106,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"next_back","","",106,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",106,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"fmt","","",107,{"inputs":[{"name":"itermut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",107,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"next_back","","",107,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"fmt","","",108,{"inputs":[{"name":"intoiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",108,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"next_back","","",108,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",51,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",109,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",110,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",111,null],[11,"fmt","","",111,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",111,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",111,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",111,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",111,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",111,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",111,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",111,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",111,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",111,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",111,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",111,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",111,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",111,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",111,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",111,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",111,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",111,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",111,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",111,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",111,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",111,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",111,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",111,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",111,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",111,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",111,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",111,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"fmt","","",112,{"inputs":[{"name":"iter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",112,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",112,null],[11,"next_back","","",112,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",112,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"fmt","","",113,{"inputs":[{"name":"itermut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",113,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"next_back","","",113,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"fmt","","",114,{"inputs":[{"name":"intoiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",114,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next_back","","",114,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",111,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",115,{"inputs":[{"name":"iter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_slice","","View the underlying data as a subslice of the original data.",115,null],[11,"next","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"count","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",115,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",115,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"fmt","","",116,{"inputs":[{"name":"itermut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",116,null],[11,"next","","",116,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"count","","",116,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",116,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",116,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",116,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"fmt","","",117,{"inputs":[{"name":"split"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",117,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"next_back","","",117,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"fmt","","",118,{"inputs":[{"name":"splitmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",118,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"next_back","","",118,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"fmt","","",119,{"inputs":[{"name":"splitn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"rsplitn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",121,{"inputs":[{"name":"splitnmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",122,{"inputs":[{"name":"rsplitnmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",119,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next","","",120,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next","","",121,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next","","",122,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"fmt","","",123,{"inputs":[{"name":"windows"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",123,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",123,null],[11,"count","","",123,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",123,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",123,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",123,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"fmt","","",124,{"inputs":[{"name":"chunks"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",124,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",124,null],[11,"count","","",124,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",124,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",124,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",124,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"fmt","","",125,{"inputs":[{"name":"chunksmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",125,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",125,null],[11,"count","","",125,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",125,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",125,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",125,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",126,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",126,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"fmt","","",127,{"inputs":[{"name":"charsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",127,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",127,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",127,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",127,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",127,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",127,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",127,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",128,{"inputs":[{"name":"charslicesearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",128,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",128,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",128,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",128,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",128,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",128,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",128,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"fmt","","",129,{"inputs":[{"name":"charpredicatesearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"haystack","","",129,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",129,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",129,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",129,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",129,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",129,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",129,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",130,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",130,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"haystack","","",130,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",130,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",130,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",130,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",130,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"eq","core::str","",131,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",131,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",131,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",131,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",132,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",132,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",132,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",132,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",133,{"inputs":[{"name":"chars"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",133,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",133,null],[11,"next_back","","",133,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",133,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"fmt","","",134,{"inputs":[{"name":"charindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",134,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",134,null],[11,"next_back","","",134,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",134,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"fmt","","",135,{"inputs":[{"name":"bytes"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",135,null],[11,"count","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",135,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",135,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"fmt","","",136,{"inputs":[{"name":"split"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",136,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"fmt","","",137,{"inputs":[{"name":"rsplit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",137,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",137,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",136,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",137,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"fmt","","",138,{"inputs":[{"name":"splitterminator"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",138,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"fmt","","",139,{"inputs":[{"name":"rsplitterminator"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",139,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",139,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",138,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",139,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"fmt","","",140,{"inputs":[{"name":"splitn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",140,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",140,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"fmt","","",141,{"inputs":[{"name":"rsplitn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",141,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",141,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"fmt","","",142,{"inputs":[{"name":"matchindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",142,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",142,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"fmt","","",143,{"inputs":[{"name":"rmatchindices"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",143,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",143,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",142,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",143,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"fmt","","",144,{"inputs":[{"name":"matches"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",144,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",144,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"fmt","","",145,{"inputs":[{"name":"rmatches"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",145,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",145,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",144,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",145,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"fmt","","",146,{"inputs":[{"name":"lines"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",146,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",146,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",146,null],[11,"next_back","","",146,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"fmt","","",147,{"inputs":[{"name":"linesany"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"next","","",147,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",147,null],[11,"next_back","","",147,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"fmt","","",148,{"inputs":[{"name":"charrange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"fmt","core::hash::sip","",149,{"inputs":[{"name":"siphasher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",149,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",149,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",149,null],[11,"finish","","",149,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",149,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",149,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",150,{"inputs":[{"name":"buildhasherdefault"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"build_hasher","","",150,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",150,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",150,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",151,{"inputs":[{"name":"alignment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",152,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",152,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",153,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",153,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the set output.",154,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",154,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",154,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",155,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",155,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",155,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",156,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",156,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",156,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"partial_cmp","core::fmt","",157,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"option"}}],[11,"eq","","",157,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"bool"}}],[11,"cmp","","",157,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"ordering"}}],[11,"hash","","",157,null],[11,"default","","",157,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",157,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",158,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",158,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",159,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",159,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",159,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",159,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",159,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",159,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",159,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",159,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",159,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",159,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",159,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",159,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",159,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",159,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",159,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",159,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",159,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",159,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",159,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",159,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",159,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",157,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",59,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",74,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",76,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",77,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"unsafecell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",160,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",160,null],[11,"clone","libc","",48,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",49,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",161,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",162,{"inputs":[{"name":"mcontext_t"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",50,{"inputs":[{"name":"ucontext_t"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",163,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","","",37,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",38,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",39,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",40,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",41,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",42,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",43,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",44,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",45,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",46,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",47,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",27,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",28,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",29,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",30,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",31,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",164,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",165,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",166,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",167,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",32,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",33,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",34,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",35,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",168,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",36,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",169,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",16,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",17,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",18,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",19,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",20,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",170,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",21,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",22,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",23,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",24,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",25,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",26,{"inputs":[{"name":"lconv"}],"output":{"name":"lconv"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",11,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","","",12,{"inputs":[{"name":"winsize"}],"output":{"name":"winsize"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"stat"],[3,"stat64"],[3,"ucontext_t"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"mcontext_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["vk_sys"] = {"doc":"","items":[[3,"ApplicationInfo","vk_sys","",null,null],[12,"sType","","",0,null],[12,"pNext","","",0,null],[12,"pApplicationName","","",0,null],[12,"applicationVersion","","",0,null],[12,"pEngineName","","",0,null],[12,"engineVersion","","",0,null],[12,"apiVersion","","",0,null],[3,"InstanceCreateInfo","","",null,null],[12,"sType","","",1,null],[12,"pNext","","",1,null],[12,"flags","","",1,null],[12,"pApplicationInfo","","",1,null],[12,"enabledLayerCount","","",1,null],[12,"ppEnabledLayerNames","","",1,null],[12,"enabledExtensionCount","","",1,null],[12,"ppEnabledExtensionNames","","",1,null],[3,"AllocationCallbacks","","",null,null],[12,"pUserData","","",2,null],[12,"pfnAllocation","","",2,null],[12,"pfnReallocation","","",2,null],[12,"pfnFree","","",2,null],[12,"pfnInternalAllocation","","",2,null],[12,"pfnInternalFree","","",2,null],[3,"PhysicalDeviceFeatures","","",null,null],[12,"robustBufferAccess","","",3,null],[12,"fullDrawIndexUint32","","",3,null],[12,"imageCubeArray","","",3,null],[12,"independentBlend","","",3,null],[12,"geometryShader","","",3,null],[12,"tessellationShader","","",3,null],[12,"sampleRateShading","","",3,null],[12,"dualSrcBlend","","",3,null],[12,"logicOp","","",3,null],[12,"multiDrawIndirect","","",3,null],[12,"drawIndirectFirstInstance","","",3,null],[12,"depthClamp","","",3,null],[12,"depthBiasClamp","","",3,null],[12,"fillModeNonSolid","","",3,null],[12,"depthBounds","","",3,null],[12,"wideLines","","",3,null],[12,"largePoints","","",3,null],[12,"alphaToOne","","",3,null],[12,"multiViewport","","",3,null],[12,"samplerAnisotropy","","",3,null],[12,"textureCompressionETC2","","",3,null],[12,"textureCompressionASTC_LDR","","",3,null],[12,"textureCompressionBC","","",3,null],[12,"occlusionQueryPrecise","","",3,null],[12,"pipelineStatisticsQuery","","",3,null],[12,"vertexPipelineStoresAndAtomics","","",3,null],[12,"fragmentStoresAndAtomics","","",3,null],[12,"shaderTessellationAndGeometryPointSize","","",3,null],[12,"shaderImageGatherExtended","","",3,null],[12,"shaderStorageImageExtendedFormats","","",3,null],[12,"shaderStorageImageMultisample","","",3,null],[12,"shaderStorageImageReadWithoutFormat","","",3,null],[12,"shaderStorageImageWriteWithoutFormat","","",3,null],[12,"shaderUniformBufferArrayDynamicIndexing","","",3,null],[12,"shaderSampledImageArrayDynamicIndexing","","",3,null],[12,"shaderStorageBufferArrayDynamicIndexing","","",3,null],[12,"shaderStorageImageArrayDynamicIndexing","","",3,null],[12,"shaderClipDistance","","",3,null],[12,"shaderCullDistance","","",3,null],[12,"shaderf3264","","",3,null],[12,"shaderInt64","","",3,null],[12,"shaderInt16","","",3,null],[12,"shaderResourceResidency","","",3,null],[12,"shaderResourceMinLod","","",3,null],[12,"sparseBinding","","",3,null],[12,"sparseResidencyBuffer","","",3,null],[12,"sparseResidencyImage2D","","",3,null],[12,"sparseResidencyImage3D","","",3,null],[12,"sparseResidency2Samples","","",3,null],[12,"sparseResidency4Samples","","",3,null],[12,"sparseResidency8Samples","","",3,null],[12,"sparseResidency16Samples","","",3,null],[12,"sparseResidencyAliased","","",3,null],[12,"variableMultisampleRate","","",3,null],[12,"inheritedQueries","","",3,null],[3,"FormatProperties","","",null,null],[12,"linearTilingFeatures","","",4,null],[12,"optimalTilingFeatures","","",4,null],[12,"bufferFeatures","","",4,null],[3,"Extent3D","","",null,null],[12,"width","","",5,null],[12,"height","","",5,null],[12,"depth","","",5,null],[3,"ImageFormatProperties","","",null,null],[12,"maxExtent","","",6,null],[12,"maxMipLevels","","",6,null],[12,"maxArrayLayers","","",6,null],[12,"sampleCounts","","",6,null],[12,"maxResourceSize","","",6,null],[3,"PhysicalDeviceLimits","","",null,null],[12,"maxImageDimension1D","","",7,null],[12,"maxImageDimension2D","","",7,null],[12,"maxImageDimension3D","","",7,null],[12,"maxImageDimensionCube","","",7,null],[12,"maxImageArrayLayers","","",7,null],[12,"maxTexelBufferElements","","",7,null],[12,"maxUniformBufferRange","","",7,null],[12,"maxStorageBufferRange","","",7,null],[12,"maxPushConstantsSize","","",7,null],[12,"maxMemoryAllocationCount","","",7,null],[12,"maxSamplerAllocationCount","","",7,null],[12,"bufferImageGranularity","","",7,null],[12,"sparseAddressSpaceSize","","",7,null],[12,"maxBoundDescriptorSets","","",7,null],[12,"maxPerStageDescriptorSamplers","","",7,null],[12,"maxPerStageDescriptorUniformBuffers","","",7,null],[12,"maxPerStageDescriptorStorageBuffers","","",7,null],[12,"maxPerStageDescriptorSampledImages","","",7,null],[12,"maxPerStageDescriptorStorageImages","","",7,null],[12,"maxPerStageDescriptorInputAttachments","","",7,null],[12,"maxPerStageResources","","",7,null],[12,"maxDescriptorSetSamplers","","",7,null],[12,"maxDescriptorSetUniformBuffers","","",7,null],[12,"maxDescriptorSetUniformBuffersDynamic","","",7,null],[12,"maxDescriptorSetStorageBuffers","","",7,null],[12,"maxDescriptorSetStorageBuffersDynamic","","",7,null],[12,"maxDescriptorSetSampledImages","","",7,null],[12,"maxDescriptorSetStorageImages","","",7,null],[12,"maxDescriptorSetInputAttachments","","",7,null],[12,"maxVertexInputAttributes","","",7,null],[12,"maxVertexInputBindings","","",7,null],[12,"maxVertexInputAttributeOffset","","",7,null],[12,"maxVertexInputBindingStride","","",7,null],[12,"maxVertexOutputComponents","","",7,null],[12,"maxTessellationGenerationLevel","","",7,null],[12,"maxTessellationPatchSize","","",7,null],[12,"maxTessellationControlPerVertexInputComponents","","",7,null],[12,"maxTessellationControlPerVertexOutputComponents","","",7,null],[12,"maxTessellationControlPerPatchOutputComponents","","",7,null],[12,"maxTessellationControlTotalOutputComponents","","",7,null],[12,"maxTessellationEvaluationInputComponents","","",7,null],[12,"maxTessellationEvaluationOutputComponents","","",7,null],[12,"maxGeometryShaderInvocations","","",7,null],[12,"maxGeometryInputComponents","","",7,null],[12,"maxGeometryOutputComponents","","",7,null],[12,"maxGeometryOutputVertices","","",7,null],[12,"maxGeometryTotalOutputComponents","","",7,null],[12,"maxFragmentInputComponents","","",7,null],[12,"maxFragmentOutputAttachments","","",7,null],[12,"maxFragmentDualSrcAttachments","","",7,null],[12,"maxFragmentCombinedOutputResources","","",7,null],[12,"maxComputeSharedMemorySize","","",7,null],[12,"maxComputeWorkGroupCount","","",7,null],[12,"maxComputeWorkGroupInvocations","","",7,null],[12,"maxComputeWorkGroupSize","","",7,null],[12,"subPixelPrecisionBits","","",7,null],[12,"subTexelPrecisionBits","","",7,null],[12,"mipmapPrecisionBits","","",7,null],[12,"maxDrawIndexedIndexValue","","",7,null],[12,"maxDrawIndirectCount","","",7,null],[12,"maxSamplerLodBias","","",7,null],[12,"maxSamplerAnisotropy","","",7,null],[12,"maxViewports","","",7,null],[12,"maxViewportDimensions","","",7,null],[12,"viewportBoundsRange","","",7,null],[12,"viewportSubPixelBits","","",7,null],[12,"minMemoryMapAlignment","","",7,null],[12,"minTexelBufferOffsetAlignment","","",7,null],[12,"minUniformBufferOffsetAlignment","","",7,null],[12,"minStorageBufferOffsetAlignment","","",7,null],[12,"minTexelOffset","","",7,null],[12,"maxTexelOffset","","",7,null],[12,"minTexelGatherOffset","","",7,null],[12,"maxTexelGatherOffset","","",7,null],[12,"minInterpolationOffset","","",7,null],[12,"maxInterpolationOffset","","",7,null],[12,"subPixelInterpolationOffsetBits","","",7,null],[12,"maxFramebufferWidth","","",7,null],[12,"maxFramebufferHeight","","",7,null],[12,"maxFramebufferLayers","","",7,null],[12,"framebufferColorSampleCounts","","",7,null],[12,"framebufferDepthSampleCounts","","",7,null],[12,"framebufferStencilSampleCounts","","",7,null],[12,"framebufferNoAttachmentsSampleCounts","","",7,null],[12,"maxColorAttachments","","",7,null],[12,"sampledImageColorSampleCounts","","",7,null],[12,"sampledImageIntegerSampleCounts","","",7,null],[12,"sampledImageDepthSampleCounts","","",7,null],[12,"sampledImageStencilSampleCounts","","",7,null],[12,"storageImageSampleCounts","","",7,null],[12,"maxSampleMaskWords","","",7,null],[12,"timestampComputeAndGraphics","","",7,null],[12,"timestampPeriod","","",7,null],[12,"maxClipDistances","","",7,null],[12,"maxCullDistances","","",7,null],[12,"maxCombinedClipAndCullDistances","","",7,null],[12,"discreteQueuePriorities","","",7,null],[12,"pointSizeRange","","",7,null],[12,"lineWidthRange","","",7,null],[12,"pointSizeGranularity","","",7,null],[12,"lineWidthGranularity","","",7,null],[12,"strictLines","","",7,null],[12,"standardSampleLocations","","",7,null],[12,"optimalBufferCopyOffsetAlignment","","",7,null],[12,"optimalBufferCopyRowPitchAlignment","","",7,null],[12,"nonCoherentAtomSize","","",7,null],[3,"PhysicalDeviceSparseProperties","","",null,null],[12,"residencyStandard2DBlockShape","","",8,null],[12,"residencyStandard2DMultisampleBlockShape","","",8,null],[12,"residencyStandard3DBlockShape","","",8,null],[12,"residencyAlignedMipSize","","",8,null],[12,"residencyNonResidentStrict","","",8,null],[3,"PhysicalDeviceProperties","","",null,null],[12,"apiVersion","","",9,null],[12,"driverVersion","","",9,null],[12,"vendorID","","",9,null],[12,"deviceID","","",9,null],[12,"deviceType","","",9,null],[12,"deviceName","","",9,null],[12,"pipelineCacheUUID","","",9,null],[12,"limits","","",9,null],[12,"sparseProperties","","",9,null],[3,"QueueFamilyProperties","","",null,null],[12,"queueFlags","","",10,null],[12,"queueCount","","",10,null],[12,"timestampValidBits","","",10,null],[12,"minImageTransferGranularity","","",10,null],[3,"MemoryType","","",null,null],[12,"propertyFlags","","",11,null],[12,"heapIndex","","",11,null],[3,"MemoryHeap","","",null,null],[12,"size","","",12,null],[12,"flags","","",12,null],[3,"PhysicalDeviceMemoryProperties","","",null,null],[12,"memoryTypeCount","","",13,null],[12,"memoryTypes","","",13,null],[12,"memoryHeapCount","","",13,null],[12,"memoryHeaps","","",13,null],[3,"DeviceQueueCreateInfo","","",null,null],[12,"sType","","",14,null],[12,"pNext","","",14,null],[12,"flags","","",14,null],[12,"queueFamilyIndex","","",14,null],[12,"queueCount","","",14,null],[12,"pQueuePriorities","","",14,null],[3,"DeviceCreateInfo","","",null,null],[12,"sType","","",15,null],[12,"pNext","","",15,null],[12,"flags","","",15,null],[12,"queueCreateInfoCount","","",15,null],[12,"pQueueCreateInfos","","",15,null],[12,"enabledLayerCount","","",15,null],[12,"ppEnabledLayerNames","","",15,null],[12,"enabledExtensionCount","","",15,null],[12,"ppEnabledExtensionNames","","",15,null],[12,"pEnabledFeatures","","",15,null],[3,"ExtensionProperties","","",null,null],[12,"extensionName","","",16,null],[12,"specVersion","","",16,null],[3,"LayerProperties","","",null,null],[12,"layerName","","",17,null],[12,"specVersion","","",17,null],[12,"implementationVersion","","",17,null],[12,"description","","",17,null],[3,"SubmitInfo","","",null,null],[12,"sType","","",18,null],[12,"pNext","","",18,null],[12,"waitSemaphoreCount","","",18,null],[12,"pWaitSemaphores","","",18,null],[12,"pWaitDstStageMask","","",18,null],[12,"commandBufferCount","","",18,null],[12,"pCommandBuffers","","",18,null],[12,"signalSemaphoreCount","","",18,null],[12,"pSignalSemaphores","","",18,null],[3,"MemoryAllocateInfo","","",null,null],[12,"sType","","",19,null],[12,"pNext","","",19,null],[12,"allocationSize","","",19,null],[12,"memoryTypeIndex","","",19,null],[3,"MappedMemoryRange","","",null,null],[12,"sType","","",20,null],[12,"pNext","","",20,null],[12,"memory","","",20,null],[12,"offset","","",20,null],[12,"size","","",20,null],[3,"MemoryRequirements","","",null,null],[12,"size","","",21,null],[12,"alignment","","",21,null],[12,"memoryTypeBits","","",21,null],[3,"SparseImageFormatProperties","","",null,null],[12,"aspectMask","","",22,null],[12,"imageGranularity","","",22,null],[12,"flags","","",22,null],[3,"SparseImageMemoryRequirements","","",null,null],[12,"formatProperties","","",23,null],[12,"imageMipTailFirstLod","","",23,null],[12,"imageMipTailSize","","",23,null],[12,"imageMipTailOffset","","",23,null],[12,"imageMipTailStride","","",23,null],[3,"SparseMemoryBind","","",null,null],[12,"resourceOffset","","",24,null],[12,"size","","",24,null],[12,"memory","","",24,null],[12,"memoryOffset","","",24,null],[12,"flags","","",24,null],[3,"SparseBufferMemoryBindInfo","","",null,null],[12,"buffer","","",25,null],[12,"bindCount","","",25,null],[12,"pBinds","","",25,null],[3,"SparseImageOpaqueMemoryBindInfo","","",null,null],[12,"image","","",26,null],[12,"bindCount","","",26,null],[12,"pBinds","","",26,null],[3,"ImageSubresource","","",null,null],[12,"aspectMask","","",27,null],[12,"mipLevel","","",27,null],[12,"arrayLayer","","",27,null],[3,"Offset3D","","",null,null],[12,"x","","",28,null],[12,"y","","",28,null],[12,"z","","",28,null],[3,"SparseImageMemoryBind","","",null,null],[12,"subresource","","",29,null],[12,"offset","","",29,null],[12,"extent","","",29,null],[12,"memory","","",29,null],[12,"memoryOffset","","",29,null],[12,"flags","","",29,null],[3,"SparseImageMemoryBindInfo","","",null,null],[12,"image","","",30,null],[12,"bindCount","","",30,null],[12,"pBinds","","",30,null],[3,"BindSparseInfo","","",null,null],[12,"sType","","",31,null],[12,"pNext","","",31,null],[12,"waitSemaphoreCount","","",31,null],[12,"pWaitSemaphores","","",31,null],[12,"bufferBindCount","","",31,null],[12,"pBufferBinds","","",31,null],[12,"imageOpaqueBindCount","","",31,null],[12,"pImageOpaqueBinds","","",31,null],[12,"imageBindCount","","",31,null],[12,"pImageBinds","","",31,null],[12,"signalSemaphoreCount","","",31,null],[12,"pSignalSemaphores","","",31,null],[3,"FenceCreateInfo","","",null,null],[12,"sType","","",32,null],[12,"pNext","","",32,null],[12,"flags","","",32,null],[3,"SemaphoreCreateInfo","","",null,null],[12,"sType","","",33,null],[12,"pNext","","",33,null],[12,"flags","","",33,null],[3,"EventCreateInfo","","",null,null],[12,"sType","","",34,null],[12,"pNext","","",34,null],[12,"flags","","",34,null],[3,"QueryPoolCreateInfo","","",null,null],[12,"sType","","",35,null],[12,"pNext","","",35,null],[12,"flags","","",35,null],[12,"queryType","","",35,null],[12,"queryCount","","",35,null],[12,"pipelineStatistics","","",35,null],[3,"BufferCreateInfo","","",null,null],[12,"sType","","",36,null],[12,"pNext","","",36,null],[12,"flags","","",36,null],[12,"size","","",36,null],[12,"usage","","",36,null],[12,"sharingMode","","",36,null],[12,"queueFamilyIndexCount","","",36,null],[12,"pQueueFamilyIndices","","",36,null],[3,"BufferViewCreateInfo","","",null,null],[12,"sType","","",37,null],[12,"pNext","","",37,null],[12,"flags","","",37,null],[12,"buffer","","",37,null],[12,"format","","",37,null],[12,"offset","","",37,null],[12,"range","","",37,null],[3,"ImageCreateInfo","","",null,null],[12,"sType","","",38,null],[12,"pNext","","",38,null],[12,"flags","","",38,null],[12,"imageType","","",38,null],[12,"format","","",38,null],[12,"extent","","",38,null],[12,"mipLevels","","",38,null],[12,"arrayLayers","","",38,null],[12,"samples","","",38,null],[12,"tiling","","",38,null],[12,"usage","","",38,null],[12,"sharingMode","","",38,null],[12,"queueFamilyIndexCount","","",38,null],[12,"pQueueFamilyIndices","","",38,null],[12,"initialLayout","","",38,null],[3,"SubresourceLayout","","",null,null],[12,"offset","","",39,null],[12,"size","","",39,null],[12,"rowPitch","","",39,null],[12,"arrayPitch","","",39,null],[12,"depthPitch","","",39,null],[3,"ComponentMapping","","",null,null],[12,"r","","",40,null],[12,"g","","",40,null],[12,"b","","",40,null],[12,"a","","",40,null],[3,"ImageSubresourceRange","","",null,null],[12,"aspectMask","","",41,null],[12,"baseMipLevel","","",41,null],[12,"levelCount","","",41,null],[12,"baseArrayLayer","","",41,null],[12,"layerCount","","",41,null],[3,"ImageViewCreateInfo","","",null,null],[12,"sType","","",42,null],[12,"pNext","","",42,null],[12,"flags","","",42,null],[12,"image","","",42,null],[12,"viewType","","",42,null],[12,"format","","",42,null],[12,"components","","",42,null],[12,"subresourceRange","","",42,null],[3,"ShaderModuleCreateInfo","","",null,null],[12,"sType","","",43,null],[12,"pNext","","",43,null],[12,"flags","","",43,null],[12,"codeSize","","",43,null],[12,"pCode","","",43,null],[3,"PipelineCacheCreateInfo","","",null,null],[12,"sType","","",44,null],[12,"pNext","","",44,null],[12,"flags","","",44,null],[12,"initialDataSize","","",44,null],[12,"pInitialData","","",44,null],[3,"SpecializationMapEntry","","",null,null],[12,"constantID","","",45,null],[12,"offset","","",45,null],[12,"size","","",45,null],[3,"SpecializationInfo","","",null,null],[12,"mapEntryCount","","",46,null],[12,"pMapEntries","","",46,null],[12,"dataSize","","",46,null],[12,"pData","","",46,null],[3,"PipelineShaderStageCreateInfo","","",null,null],[12,"sType","","",47,null],[12,"pNext","","",47,null],[12,"flags","","",47,null],[12,"stage","","",47,null],[12,"module","","",47,null],[12,"pName","","",47,null],[12,"pSpecializationInfo","","",47,null],[3,"VertexInputBindingDescription","","",null,null],[12,"binding","","",48,null],[12,"stride","","",48,null],[12,"inputRate","","",48,null],[3,"VertexInputAttributeDescription","","",null,null],[12,"location","","",49,null],[12,"binding","","",49,null],[12,"format","","",49,null],[12,"offset","","",49,null],[3,"PipelineVertexInputStateCreateInfo","","",null,null],[12,"sType","","",50,null],[12,"pNext","","",50,null],[12,"flags","","",50,null],[12,"vertexBindingDescriptionCount","","",50,null],[12,"pVertexBindingDescriptions","","",50,null],[12,"vertexAttributeDescriptionCount","","",50,null],[12,"pVertexAttributeDescriptions","","",50,null],[3,"PipelineInputAssemblyStateCreateInfo","","",null,null],[12,"sType","","",51,null],[12,"pNext","","",51,null],[12,"flags","","",51,null],[12,"topology","","",51,null],[12,"primitiveRestartEnable","","",51,null],[3,"PipelineTessellationStateCreateInfo","","",null,null],[12,"sType","","",52,null],[12,"pNext","","",52,null],[12,"flags","","",52,null],[12,"patchControlPoints","","",52,null],[3,"Viewport","","",null,null],[12,"x","","",53,null],[12,"y","","",53,null],[12,"width","","",53,null],[12,"height","","",53,null],[12,"minDepth","","",53,null],[12,"maxDepth","","",53,null],[3,"Offset2D","","",null,null],[12,"x","","",54,null],[12,"y","","",54,null],[3,"Extent2D","","",null,null],[12,"width","","",55,null],[12,"height","","",55,null],[3,"Rect2D","","",null,null],[12,"offset","","",56,null],[12,"extent","","",56,null],[3,"PipelineViewportStateCreateInfo","","",null,null],[12,"sType","","",57,null],[12,"pNext","","",57,null],[12,"flags","","",57,null],[12,"viewportCount","","",57,null],[12,"pViewports","","",57,null],[12,"scissorCount","","",57,null],[12,"pScissors","","",57,null],[3,"PipelineRasterizationStateCreateInfo","","",null,null],[12,"sType","","",58,null],[12,"pNext","","",58,null],[12,"flags","","",58,null],[12,"depthClampEnable","","",58,null],[12,"rasterizerDiscardEnable","","",58,null],[12,"polygonMode","","",58,null],[12,"cullMode","","",58,null],[12,"frontFace","","",58,null],[12,"depthBiasEnable","","",58,null],[12,"depthBiasConstantFactor","","",58,null],[12,"depthBiasClamp","","",58,null],[12,"depthBiasSlopeFactor","","",58,null],[12,"lineWidth","","",58,null],[3,"PipelineMultisampleStateCreateInfo","","",null,null],[12,"sType","","",59,null],[12,"pNext","","",59,null],[12,"flags","","",59,null],[12,"rasterizationSamples","","",59,null],[12,"sampleShadingEnable","","",59,null],[12,"minSampleShading","","",59,null],[12,"pSampleMask","","",59,null],[12,"alphaToCoverageEnable","","",59,null],[12,"alphaToOneEnable","","",59,null],[3,"StencilOpState","","",null,null],[12,"failOp","","",60,null],[12,"passOp","","",60,null],[12,"depthFailOp","","",60,null],[12,"compareOp","","",60,null],[12,"compareMask","","",60,null],[12,"writeMask","","",60,null],[12,"reference","","",60,null],[3,"PipelineDepthStencilStateCreateInfo","","",null,null],[12,"sType","","",61,null],[12,"pNext","","",61,null],[12,"flags","","",61,null],[12,"depthTestEnable","","",61,null],[12,"depthWriteEnable","","",61,null],[12,"depthCompareOp","","",61,null],[12,"depthBoundsTestEnable","","",61,null],[12,"stencilTestEnable","","",61,null],[12,"front","","",61,null],[12,"back","","",61,null],[12,"minDepthBounds","","",61,null],[12,"maxDepthBounds","","",61,null],[3,"PipelineColorBlendAttachmentState","","",null,null],[12,"blendEnable","","",62,null],[12,"srcColorBlendFactor","","",62,null],[12,"dstColorBlendFactor","","",62,null],[12,"colorBlendOp","","",62,null],[12,"srcAlphaBlendFactor","","",62,null],[12,"dstAlphaBlendFactor","","",62,null],[12,"alphaBlendOp","","",62,null],[12,"colorWriteMask","","",62,null],[3,"PipelineColorBlendStateCreateInfo","","",null,null],[12,"sType","","",63,null],[12,"pNext","","",63,null],[12,"flags","","",63,null],[12,"logicOpEnable","","",63,null],[12,"logicOp","","",63,null],[12,"attachmentCount","","",63,null],[12,"pAttachments","","",63,null],[12,"blendConstants","","",63,null],[3,"PipelineDynamicStateCreateInfo","","",null,null],[12,"sType","","",64,null],[12,"pNext","","",64,null],[12,"flags","","",64,null],[12,"dynamicStateCount","","",64,null],[12,"pDynamicStates","","",64,null],[3,"GraphicsPipelineCreateInfo","","",null,null],[12,"sType","","",65,null],[12,"pNext","","",65,null],[12,"flags","","",65,null],[12,"stageCount","","",65,null],[12,"pStages","","",65,null],[12,"pVertexInputState","","",65,null],[12,"pInputAssemblyState","","",65,null],[12,"pTessellationState","","",65,null],[12,"pViewportState","","",65,null],[12,"pRasterizationState","","",65,null],[12,"pMultisampleState","","",65,null],[12,"pDepthStencilState","","",65,null],[12,"pColorBlendState","","",65,null],[12,"pDynamicState","","",65,null],[12,"layout","","",65,null],[12,"renderPass","","",65,null],[12,"subpass","","",65,null],[12,"basePipelineHandle","","",65,null],[12,"basePipelineIndex","","",65,null],[3,"ComputePipelineCreateInfo","","",null,null],[12,"sType","","",66,null],[12,"pNext","","",66,null],[12,"flags","","",66,null],[12,"stage","","",66,null],[12,"layout","","",66,null],[12,"basePipelineHandle","","",66,null],[12,"basePipelineIndex","","",66,null],[3,"PushConstantRange","","",null,null],[12,"stageFlags","","",67,null],[12,"offset","","",67,null],[12,"size","","",67,null],[3,"PipelineLayoutCreateInfo","","",null,null],[12,"sType","","",68,null],[12,"pNext","","",68,null],[12,"flags","","",68,null],[12,"setLayoutCount","","",68,null],[12,"pSetLayouts","","",68,null],[12,"pushConstantRangeCount","","",68,null],[12,"pPushConstantRanges","","",68,null],[3,"SamplerCreateInfo","","",null,null],[12,"sType","","",69,null],[12,"pNext","","",69,null],[12,"flags","","",69,null],[12,"magFilter","","",69,null],[12,"minFilter","","",69,null],[12,"mipmapMode","","",69,null],[12,"addressModeU","","",69,null],[12,"addressModeV","","",69,null],[12,"addressModeW","","",69,null],[12,"mipLodBias","","",69,null],[12,"anisotropyEnable","","",69,null],[12,"maxAnisotropy","","",69,null],[12,"compareEnable","","",69,null],[12,"compareOp","","",69,null],[12,"minLod","","",69,null],[12,"maxLod","","",69,null],[12,"borderColor","","",69,null],[12,"unnormalizedCoordinates","","",69,null],[3,"DescriptorSetLayoutBinding","","",null,null],[12,"binding","","",70,null],[12,"descriptorType","","",70,null],[12,"descriptorCount","","",70,null],[12,"stageFlags","","",70,null],[12,"pImmutableSamplers","","",70,null],[3,"DescriptorSetLayoutCreateInfo","","",null,null],[12,"sType","","",71,null],[12,"pNext","","",71,null],[12,"flags","","",71,null],[12,"bindingCount","","",71,null],[12,"pBindings","","",71,null],[3,"DescriptorPoolSize","","",null,null],[12,"ty","","",72,null],[12,"descriptorCount","","",72,null],[3,"DescriptorPoolCreateInfo","","",null,null],[12,"sType","","",73,null],[12,"pNext","","",73,null],[12,"flags","","",73,null],[12,"maxSets","","",73,null],[12,"poolSizeCount","","",73,null],[12,"pPoolSizes","","",73,null],[3,"DescriptorSetAllocateInfo","","",null,null],[12,"sType","","",74,null],[12,"pNext","","",74,null],[12,"descriptorPool","","",74,null],[12,"descriptorSetCount","","",74,null],[12,"pSetLayouts","","",74,null],[3,"DescriptorImageInfo","","",null,null],[12,"sampler","","",75,null],[12,"imageView","","",75,null],[12,"imageLayout","","",75,null],[3,"DescriptorBufferInfo","","",null,null],[12,"buffer","","",76,null],[12,"offset","","",76,null],[12,"range","","",76,null],[3,"WriteDescriptorSet","","",null,null],[12,"sType","","",77,null],[12,"pNext","","",77,null],[12,"dstSet","","",77,null],[12,"dstBinding","","",77,null],[12,"dstArrayElement","","",77,null],[12,"descriptorCount","","",77,null],[12,"descriptorType","","",77,null],[12,"pImageInfo","","",77,null],[12,"pBufferInfo","","",77,null],[12,"pTexelBufferView","","",77,null],[3,"CopyDescriptorSet","","",null,null],[12,"sType","","",78,null],[12,"pNext","","",78,null],[12,"srcSet","","",78,null],[12,"srcBinding","","",78,null],[12,"srcArrayElement","","",78,null],[12,"dstSet","","",78,null],[12,"dstBinding","","",78,null],[12,"dstArrayElement","","",78,null],[12,"descriptorCount","","",78,null],[3,"FramebufferCreateInfo","","",null,null],[12,"sType","","",79,null],[12,"pNext","","",79,null],[12,"flags","","",79,null],[12,"renderPass","","",79,null],[12,"attachmentCount","","",79,null],[12,"pAttachments","","",79,null],[12,"width","","",79,null],[12,"height","","",79,null],[12,"layers","","",79,null],[3,"AttachmentDescription","","",null,null],[12,"flags","","",80,null],[12,"format","","",80,null],[12,"samples","","",80,null],[12,"loadOp","","",80,null],[12,"storeOp","","",80,null],[12,"stencilLoadOp","","",80,null],[12,"stencilStoreOp","","",80,null],[12,"initialLayout","","",80,null],[12,"finalLayout","","",80,null],[3,"AttachmentReference","","",null,null],[12,"attachment","","",81,null],[12,"layout","","",81,null],[3,"SubpassDescription","","",null,null],[12,"flags","","",82,null],[12,"pipelineBindPoint","","",82,null],[12,"inputAttachmentCount","","",82,null],[12,"pInputAttachments","","",82,null],[12,"colorAttachmentCount","","",82,null],[12,"pColorAttachments","","",82,null],[12,"pResolveAttachments","","",82,null],[12,"pDepthStencilAttachment","","",82,null],[12,"preserveAttachmentCount","","",82,null],[12,"pPreserveAttachments","","",82,null],[3,"SubpassDependency","","",null,null],[12,"srcSubpass","","",83,null],[12,"dstSubpass","","",83,null],[12,"srcStageMask","","",83,null],[12,"dstStageMask","","",83,null],[12,"srcAccessMask","","",83,null],[12,"dstAccessMask","","",83,null],[12,"dependencyFlags","","",83,null],[3,"RenderPassCreateInfo","","",null,null],[12,"sType","","",84,null],[12,"pNext","","",84,null],[12,"flags","","",84,null],[12,"attachmentCount","","",84,null],[12,"pAttachments","","",84,null],[12,"subpassCount","","",84,null],[12,"pSubpasses","","",84,null],[12,"dependencyCount","","",84,null],[12,"pDependencies","","",84,null],[3,"CommandPoolCreateInfo","","",null,null],[12,"sType","","",85,null],[12,"pNext","","",85,null],[12,"flags","","",85,null],[12,"queueFamilyIndex","","",85,null],[3,"CommandBufferAllocateInfo","","",null,null],[12,"sType","","",86,null],[12,"pNext","","",86,null],[12,"commandPool","","",86,null],[12,"level","","",86,null],[12,"commandBufferCount","","",86,null],[3,"CommandBufferInheritanceInfo","","",null,null],[12,"sType","","",87,null],[12,"pNext","","",87,null],[12,"renderPass","","",87,null],[12,"subpass","","",87,null],[12,"framebuffer","","",87,null],[12,"occlusionQueryEnable","","",87,null],[12,"queryFlags","","",87,null],[12,"pipelineStatistics","","",87,null],[3,"CommandBufferBeginInfo","","",null,null],[12,"sType","","",88,null],[12,"pNext","","",88,null],[12,"flags","","",88,null],[12,"pInheritanceInfo","","",88,null],[3,"BufferCopy","","",null,null],[12,"srcOffset","","",89,null],[12,"dstOffset","","",89,null],[12,"size","","",89,null],[3,"ImageSubresourceLayers","","",null,null],[12,"aspectMask","","",90,null],[12,"mipLevel","","",90,null],[12,"baseArrayLayer","","",90,null],[12,"layerCount","","",90,null],[3,"ImageCopy","","",null,null],[12,"srcSubresource","","",91,null],[12,"srcOffset","","",91,null],[12,"dstSubresource","","",91,null],[12,"dstOffset","","",91,null],[12,"extent","","",91,null],[3,"ImageBlit","","",null,null],[12,"srcSubresource","","",92,null],[12,"srcOffsets","","",92,null],[12,"dstSubresource","","",92,null],[12,"dstOffsets","","",92,null],[3,"BufferImageCopy","","",null,null],[12,"bufferOffset","","",93,null],[12,"bufferRowLength","","",93,null],[12,"bufferImageHeight","","",93,null],[12,"imageSubresource","","",93,null],[12,"imageOffset","","",93,null],[12,"imageExtent","","",93,null],[3,"ClearColorValue","","",null,null],[3,"ClearDepthStencilValue","","",null,null],[12,"depth","","",94,null],[12,"stencil","","",94,null],[3,"ClearValue","","",null,null],[3,"ClearAttachment","","",null,null],[12,"aspectMask","","",95,null],[12,"colorAttachment","","",95,null],[12,"clearValue","","",95,null],[3,"ClearRect","","",null,null],[12,"rect","","",96,null],[12,"baseArrayLayer","","",96,null],[12,"layerCount","","",96,null],[3,"ImageResolve","","",null,null],[12,"srcSubresource","","",97,null],[12,"srcOffset","","",97,null],[12,"dstSubresource","","",97,null],[12,"dstOffset","","",97,null],[12,"extent","","",97,null],[3,"MemoryBarrier","","",null,null],[12,"sType","","",98,null],[12,"pNext","","",98,null],[12,"srcAccessMask","","",98,null],[12,"dstAccessMask","","",98,null],[3,"BufferMemoryBarrier","","",null,null],[12,"sType","","",99,null],[12,"pNext","","",99,null],[12,"srcAccessMask","","",99,null],[12,"dstAccessMask","","",99,null],[12,"srcQueueFamilyIndex","","",99,null],[12,"dstQueueFamilyIndex","","",99,null],[12,"buffer","","",99,null],[12,"offset","","",99,null],[12,"size","","",99,null],[3,"ImageMemoryBarrier","","",null,null],[12,"sType","","",100,null],[12,"pNext","","",100,null],[12,"srcAccessMask","","",100,null],[12,"dstAccessMask","","",100,null],[12,"oldLayout","","",100,null],[12,"newLayout","","",100,null],[12,"srcQueueFamilyIndex","","",100,null],[12,"dstQueueFamilyIndex","","",100,null],[12,"image","","",100,null],[12,"subresourceRange","","",100,null],[3,"RenderPassBeginInfo","","",null,null],[12,"sType","","",101,null],[12,"pNext","","",101,null],[12,"renderPass","","",101,null],[12,"framebuffer","","",101,null],[12,"renderArea","","",101,null],[12,"clearValueCount","","",101,null],[12,"pClearValues","","",101,null],[3,"DispatchIndirectCommand","","",null,null],[12,"x","","",102,null],[12,"y","","",102,null],[12,"z","","",102,null],[3,"DrawIndexedIndirectCommand","","",null,null],[12,"indexCount","","",103,null],[12,"instanceCount","","",103,null],[12,"firstIndex","","",103,null],[12,"vertexOffset","","",103,null],[12,"firstInstance","","",103,null],[3,"DrawIndirectCommand","","",null,null],[12,"vertexCount","","",104,null],[12,"instanceCount","","",104,null],[12,"firstVertex","","",104,null],[12,"firstInstance","","",104,null],[3,"SurfaceCapabilitiesKHR","","",null,null],[12,"minImageCount","","",105,null],[12,"maxImageCount","","",105,null],[12,"currentExtent","","",105,null],[12,"minImageExtent","","",105,null],[12,"maxImageExtent","","",105,null],[12,"maxImageArrayLayers","","",105,null],[12,"supportedTransforms","","",105,null],[12,"currentTransform","","",105,null],[12,"supportedCompositeAlpha","","",105,null],[12,"supportedUsageFlags","","",105,null],[3,"SurfaceFormatKHR","","",null,null],[12,"format","","",106,null],[12,"colorSpace","","",106,null],[3,"SwapchainCreateInfoKHR","","",null,null],[12,"sType","","",107,null],[12,"pNext","","",107,null],[12,"flags","","",107,null],[12,"surface","","",107,null],[12,"minImageCount","","",107,null],[12,"imageFormat","","",107,null],[12,"imageColorSpace","","",107,null],[12,"imageExtent","","",107,null],[12,"imageArrayLayers","","",107,null],[12,"imageUsage","","",107,null],[12,"imageSharingMode","","",107,null],[12,"queueFamilyIndexCount","","",107,null],[12,"pQueueFamilyIndices","","",107,null],[12,"preTransform","","",107,null],[12,"compositeAlpha","","",107,null],[12,"presentMode","","",107,null],[12,"clipped","","",107,null],[12,"oldSwapchain","","",107,null],[3,"PresentInfoKHR","","",null,null],[12,"sType","","",108,null],[12,"pNext","","",108,null],[12,"waitSemaphoreCount","","",108,null],[12,"pWaitSemaphores","","",108,null],[12,"swapchainCount","","",108,null],[12,"pSwapchains","","",108,null],[12,"pImageIndices","","",108,null],[12,"pResults","","",108,null],[3,"DisplayPropertiesKHR","","",null,null],[12,"display","","",109,null],[12,"displayName","","",109,null],[12,"physicalDimensions","","",109,null],[12,"physicalResolution","","",109,null],[12,"supportedTransforms","","",109,null],[12,"planeReorderPossible","","",109,null],[12,"persistentContent","","",109,null],[3,"DisplayModeParametersKHR","","",null,null],[12,"visibleRegion","","",110,null],[12,"refreshRate","","",110,null],[3,"DisplayModePropertiesKHR","","",null,null],[12,"displayMode","","",111,null],[12,"parameters","","",111,null],[3,"DisplayModeCreateInfoKHR","","",null,null],[12,"sType","","",112,null],[12,"pNext","","",112,null],[12,"flags","","",112,null],[12,"parameters","","",112,null],[3,"DisplayPlaneCapabilitiesKHR","","",null,null],[12,"supportedAlpha","","",113,null],[12,"minSrcPosition","","",113,null],[12,"maxSrcPosition","","",113,null],[12,"minSrcExtent","","",113,null],[12,"maxSrcExtent","","",113,null],[12,"minDstPosition","","",113,null],[12,"maxDstPosition","","",113,null],[12,"minDstExtent","","",113,null],[12,"maxDstExtent","","",113,null],[3,"DisplayPlanePropertiesKHR","","",null,null],[12,"currentDisplay","","",114,null],[12,"currentStackIndex","","",114,null],[3,"DisplaySurfaceCreateInfoKHR","","",null,null],[12,"sType","","",115,null],[12,"pNext","","",115,null],[12,"flags","","",115,null],[12,"displayMode","","",115,null],[12,"planeIndex","","",115,null],[12,"planeStackIndex","","",115,null],[12,"transform","","",115,null],[12,"globalAlpha","","",115,null],[12,"alphaMode","","",115,null],[12,"imageExtent","","",115,null],[3,"DisplayPresentInfoKHR","","",null,null],[12,"sType","","",116,null],[12,"pNext","","",116,null],[12,"srcRect","","",116,null],[12,"dstRect","","",116,null],[12,"persistent","","",116,null],[3,"XlibSurfaceCreateInfoKHR","","",null,null],[12,"sType","","",117,null],[12,"pNext","","",117,null],[12,"flags","","",117,null],[12,"dpy","","",117,null],[12,"window","","",117,null],[3,"XcbSurfaceCreateInfoKHR","","",null,null],[12,"sType","","",118,null],[12,"pNext","","",118,null],[12,"flags","","",118,null],[12,"connection","","",118,null],[12,"window","","",118,null],[3,"WaylandSurfaceCreateInfoKHR","","",null,null],[12,"sType","","",119,null],[12,"pNext","","",119,null],[12,"flags","","",119,null],[12,"display","","",119,null],[12,"surface","","",119,null],[3,"MirSurfaceCreateInfoKHR","","",null,null],[12,"sType","","",120,null],[12,"pNext","","",120,null],[12,"flags","","",120,null],[12,"connection","","",120,null],[12,"mirSurface","","",120,null],[3,"AndroidSurfaceCreateInfoKHR","","",null,null],[12,"sType","","",121,null],[12,"pNext","","",121,null],[12,"flags","","",121,null],[12,"window","","",121,null],[3,"Win32SurfaceCreateInfoKHR","","",null,null],[12,"sType","","",122,null],[12,"pNext","","",122,null],[12,"flags","","",122,null],[12,"hinstance","","",122,null],[12,"hwnd","","",122,null],[3,"DebugReportCallbackCreateInfoEXT","","",null,null],[12,"sType","","",123,null],[12,"pNext","","",123,null],[12,"flags","","",123,null],[12,"pfnCallback","","",123,null],[12,"pUserData","","",123,null],[3,"Static","","",null,null],[3,"EntryPoints","","",null,null],[3,"InstancePointers","","",null,null],[3,"DevicePointers","","",null,null],[6,"Flags","","",null,null],[6,"Bool32","","",null,null],[6,"DeviceSize","","",null,null],[6,"SampleMask","","",null,null],[6,"Instance","","",null,null],[6,"PhysicalDevice","","",null,null],[6,"Device","","",null,null],[6,"Queue","","",null,null],[6,"CommandBuffer","","",null,null],[6,"Semaphore","","",null,null],[6,"Fence","","",null,null],[6,"DeviceMemory","","",null,null],[6,"Buffer","","",null,null],[6,"Image","","",null,null],[6,"Event","","",null,null],[6,"QueryPool","","",null,null],[6,"BufferView","","",null,null],[6,"ImageView","","",null,null],[6,"ShaderModule","","",null,null],[6,"PipelineCache","","",null,null],[6,"PipelineLayout","","",null,null],[6,"RenderPass","","",null,null],[6,"Pipeline","","",null,null],[6,"DescriptorSetLayout","","",null,null],[6,"Sampler","","",null,null],[6,"DescriptorPool","","",null,null],[6,"DescriptorSet","","",null,null],[6,"Framebuffer","","",null,null],[6,"CommandPool","","",null,null],[6,"SurfaceKHR","","",null,null],[6,"SwapchainKHR","","",null,null],[6,"DisplayKHR","","",null,null],[6,"DisplayModeKHR","","",null,null],[6,"DebugReportCallbackEXT","","",null,null],[6,"PipelineCacheHeaderVersion","","",null,null],[6,"Result","","",null,null],[6,"StructureType","","",null,null],[6,"SystemAllocationScope","","",null,null],[6,"InternalAllocationType","","",null,null],[6,"Format","","",null,null],[6,"ImageType","","",null,null],[6,"ImageTiling","","",null,null],[6,"PhysicalDeviceType","","",null,null],[6,"QueryType","","",null,null],[6,"SharingMode","","",null,null],[6,"ImageLayout","","",null,null],[6,"ImageViewType","","",null,null],[6,"ComponentSwizzle","","",null,null],[6,"VertexInputRate","","",null,null],[6,"PrimitiveTopology","","",null,null],[6,"PolygonMode","","",null,null],[6,"FrontFace","","",null,null],[6,"CompareOp","","",null,null],[6,"StencilOp","","",null,null],[6,"LogicOp","","",null,null],[6,"BlendFactor","","",null,null],[6,"BlendOp","","",null,null],[6,"DynamicState","","",null,null],[6,"Filter","","",null,null],[6,"SamplerMipmapMode","","",null,null],[6,"SamplerAddressMode","","",null,null],[6,"BorderColor","","",null,null],[6,"DescriptorType","","",null,null],[6,"AttachmentLoadOp","","",null,null],[6,"AttachmentStoreOp","","",null,null],[6,"PipelineBindPoint","","",null,null],[6,"CommandBufferLevel","","",null,null],[6,"IndexType","","",null,null],[6,"SubpassContents","","",null,null],[6,"InstanceCreateFlags","","",null,null],[6,"FormatFeatureFlagBits","","",null,null],[6,"FormatFeatureFlags","","",null,null],[6,"ImageUsageFlagBits","","",null,null],[6,"ImageUsageFlags","","",null,null],[6,"ImageCreateFlagBits","","",null,null],[6,"ImageCreateFlags","","",null,null],[6,"SampleCountFlagBits","","",null,null],[6,"SampleCountFlags","","",null,null],[6,"QueueFlagBits","","",null,null],[6,"QueueFlags","","",null,null],[6,"MemoryPropertyFlagBits","","",null,null],[6,"MemoryPropertyFlags","","",null,null],[6,"MemoryHeapFlagBits","","",null,null],[6,"MemoryHeapFlags","","",null,null],[6,"DeviceCreateFlags","","",null,null],[6,"DeviceQueueCreateFlags","","",null,null],[6,"PipelineStageFlagBits","","",null,null],[6,"PipelineStageFlags","","",null,null],[6,"MemoryMapFlags","","",null,null],[6,"ImageAspectFlagBits","","",null,null],[6,"ImageAspectFlags","","",null,null],[6,"SparseImageFormatFlagBits","","",null,null],[6,"SparseImageFormatFlags","","",null,null],[6,"SparseMemoryBindFlagBits","","",null,null],[6,"SparseMemoryBindFlags","","",null,null],[6,"FenceCreateFlagBits","","",null,null],[6,"FenceCreateFlags","","",null,null],[6,"SemaphoreCreateFlags","","",null,null],[6,"EventCreateFlags","","",null,null],[6,"QueryPoolCreateFlags","","",null,null],[6,"QueryPipelineStatisticFlagBits","","",null,null],[6,"QueryPipelineStatisticFlags","","",null,null],[6,"QueryResultFlagBits","","",null,null],[6,"QueryResultFlags","","",null,null],[6,"BufferCreateFlagBits","","",null,null],[6,"BufferCreateFlags","","",null,null],[6,"BufferUsageFlagBits","","",null,null],[6,"BufferUsageFlags","","",null,null],[6,"BufferViewCreateFlags","","",null,null],[6,"ImageViewCreateFlags","","",null,null],[6,"ShaderModuleCreateFlags","","",null,null],[6,"PipelineCacheCreateFlags","","",null,null],[6,"PipelineCreateFlagBits","","",null,null],[6,"PipelineCreateFlags","","",null,null],[6,"PipelineShaderStageCreateFlags","","",null,null],[6,"ShaderStageFlagBits","","",null,null],[6,"PipelineVertexInputStateCreateFlags","","",null,null],[6,"PipelineInputAssemblyStateCreateFlags","","",null,null],[6,"PipelineTessellationStateCreateFlags","","",null,null],[6,"PipelineViewportStateCreateFlags","","",null,null],[6,"PipelineRasterizationStateCreateFlags","","",null,null],[6,"CullModeFlagBits","","",null,null],[6,"CullModeFlags","","",null,null],[6,"PipelineMultisampleStateCreateFlags","","",null,null],[6,"PipelineDepthStencilStateCreateFlags","","",null,null],[6,"PipelineColorBlendStateCreateFlags","","",null,null],[6,"ColorComponentFlagBits","","",null,null],[6,"ColorComponentFlags","","",null,null],[6,"PipelineDynamicStateCreateFlags","","",null,null],[6,"PipelineLayoutCreateFlags","","",null,null],[6,"ShaderStageFlags","","",null,null],[6,"SamplerCreateFlags","","",null,null],[6,"DescriptorSetLayoutCreateFlags","","",null,null],[6,"DescriptorPoolCreateFlagBits","","",null,null],[6,"DescriptorPoolCreateFlags","","",null,null],[6,"DescriptorPoolResetFlags","","",null,null],[6,"FramebufferCreateFlags","","",null,null],[6,"RenderPassCreateFlags","","",null,null],[6,"AttachmentDescriptionFlagBits","","",null,null],[6,"AttachmentDescriptionFlags","","",null,null],[6,"SubpassDescriptionFlags","","",null,null],[6,"AccessFlagBits","","",null,null],[6,"AccessFlags","","",null,null],[6,"DependencyFlagBits","","",null,null],[6,"DependencyFlags","","",null,null],[6,"CommandPoolCreateFlagBits","","",null,null],[6,"CommandPoolCreateFlags","","",null,null],[6,"CommandPoolResetFlagBits","","",null,null],[6,"CommandPoolResetFlags","","",null,null],[6,"CommandBufferUsageFlagBits","","",null,null],[6,"CommandBufferUsageFlags","","",null,null],[6,"QueryControlFlagBits","","",null,null],[6,"QueryControlFlags","","",null,null],[6,"CommandBufferResetFlagBits","","",null,null],[6,"CommandBufferResetFlags","","",null,null],[6,"StencilFaceFlagBits","","",null,null],[6,"StencilFaceFlags","","",null,null],[6,"DisplayPlaneAlphaFlagBitsKHR","","",null,null],[6,"DisplayModeCreateFlagsKHR","","",null,null],[6,"DisplayPlaneAlphaFlagsKHR","","",null,null],[6,"DisplaySurfaceCreateFlagsKHR","","",null,null],[6,"ColorSpaceKHR","","",null,null],[6,"PresentModeKHR","","",null,null],[6,"SurfaceTransformFlagBitsKHR","","",null,null],[6,"SurfaceTransformFlagsKHR","","",null,null],[6,"CompositeAlphaFlagBitsKHR","","",null,null],[6,"CompositeAlphaFlagsKHR","","",null,null],[6,"DebugReportObjectTypeEXT","","",null,null],[6,"DebugReportErrorEXT","","",null,null],[6,"DebugReportFlagBitsEXT","","",null,null],[6,"DebugReportFlagsEXT","","",null,null],[6,"PFN_vkAllocationFunction","","",null,null],[6,"PFN_vkReallocationFunction","","",null,null],[6,"PFN_vkFreeFunction","","",null,null],[6,"PFN_vkInternalAllocationNotification","","",null,null],[6,"PFN_vkInternalFreeNotification","","",null,null],[6,"PFN_vkDebugReportCallbackEXT","","",null,null],[6,"PFN_vkVoidFunction","","",null,null],[6,"SwapchainCreateFlagsKHR","","",null,null],[6,"XlibSurfaceCreateFlagsKHR","","",null,null],[6,"XcbSurfaceCreateFlagsKHR","","",null,null],[6,"WaylandSurfaceCreateFlagsKHR","","",null,null],[6,"MirSurfaceCreateFlagsKHR","","",null,null],[6,"AndroidSurfaceCreateFlagsKHR","","",null,null],[6,"Win32SurfaceCreateFlagsKHR","","",null,null],[17,"LOD_CLAMP_NONE","","",null,null],[17,"REMAINING_MIP_LEVELS","","",null,null],[17,"REMAINING_ARRAY_LAYERS","","",null,null],[17,"WHOLE_SIZE","","",null,null],[17,"ATTACHMENT_UNUSED","","",null,null],[17,"TRUE","","",null,null],[17,"FALSE","","",null,null],[17,"QUEUE_FAMILY_IGNORED","","",null,null],[17,"SUBPASS_EXTERNAL","","",null,null],[17,"MAX_PHYSICAL_DEVICE_NAME_SIZE","","",null,null],[17,"UUID_SIZE","","",null,null],[17,"MAX_MEMORY_TYPES","","",null,null],[17,"MAX_MEMORY_HEAPS","","",null,null],[17,"MAX_EXTENSION_NAME_SIZE","","",null,null],[17,"MAX_DESCRIPTION_SIZE","","",null,null],[17,"PIPELINE_CACHE_HEADER_VERSION_ONE","","",null,null],[17,"SUCCESS","","",null,null],[17,"NOT_READY","","",null,null],[17,"TIMEOUT","","",null,null],[17,"EVENT_SET","","",null,null],[17,"EVENT_RESET","","",null,null],[17,"INCOMPLETE","","",null,null],[17,"ERROR_OUT_OF_HOST_MEMORY","","",null,null],[17,"ERROR_OUT_OF_DEVICE_MEMORY","","",null,null],[17,"ERROR_INITIALIZATION_FAILED","","",null,null],[17,"ERROR_DEVICE_LOST","","",null,null],[17,"ERROR_MEMORY_MAP_FAILED","","",null,null],[17,"ERROR_LAYER_NOT_PRESENT","","",null,null],[17,"ERROR_EXTENSION_NOT_PRESENT","","",null,null],[17,"ERROR_FEATURE_NOT_PRESENT","","",null,null],[17,"ERROR_INCOMPATIBLE_DRIVER","","",null,null],[17,"ERROR_TOO_MANY_OBJECTS","","",null,null],[17,"ERROR_FORMAT_NOT_SUPPORTED","","",null,null],[17,"ERROR_SURFACE_LOST_KHR","","",null,null],[17,"ERROR_NATIVE_WINDOW_IN_USE_KHR","","",null,null],[17,"SUBOPTIMAL_KHR","","",null,null],[17,"ERROR_OUT_OF_DATE_KHR","","",null,null],[17,"ERROR_INCOMPATIBLE_DISPLAY_KHR","","",null,null],[17,"ERROR_VALIDATION_FAILED_EXT","","",null,null],[17,"STRUCTURE_TYPE_APPLICATION_INFO","","",null,null],[17,"STRUCTURE_TYPE_INSTANCE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_DEVICE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_SUBMIT_INFO","","",null,null],[17,"STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_MAPPED_MEMORY_RANGE","","",null,null],[17,"STRUCTURE_TYPE_BIND_SPARSE_INFO","","",null,null],[17,"STRUCTURE_TYPE_FENCE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_EVENT_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_BUFFER_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_IMAGE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_SAMPLER_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET","","",null,null],[17,"STRUCTURE_TYPE_COPY_DESCRIPTOR_SET","","",null,null],[17,"STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO","","",null,null],[17,"STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO","","",null,null],[17,"STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO","","",null,null],[17,"STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER","","",null,null],[17,"STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER","","",null,null],[17,"STRUCTURE_TYPE_MEMORY_BARRIER","","",null,null],[17,"STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO","","",null,null],[17,"STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_PRESENT_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_MIR_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR","","",null,null],[17,"STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT","","",null,null],[17,"SYSTEM_ALLOCATION_SCOPE_COMMAND","","",null,null],[17,"SYSTEM_ALLOCATION_SCOPE_OBJECT","","",null,null],[17,"SYSTEM_ALLOCATION_SCOPE_CACHE","","",null,null],[17,"SYSTEM_ALLOCATION_SCOPE_DEVICE","","",null,null],[17,"SYSTEM_ALLOCATION_SCOPE_INSTANCE","","",null,null],[17,"INTERNAL_ALLOCATION_TYPE_EXECUTABLE","","",null,null],[17,"FORMAT_UNDEFINED","","",null,null],[17,"FORMAT_R4G4_UNORM_PACK8","","",null,null],[17,"FORMAT_R4G4B4A4_UNORM_PACK16","","",null,null],[17,"FORMAT_B4G4R4A4_UNORM_PACK16","","",null,null],[17,"FORMAT_R5G6B5_UNORM_PACK16","","",null,null],[17,"FORMAT_B5G6R5_UNORM_PACK16","","",null,null],[17,"FORMAT_R5G5B5A1_UNORM_PACK16","","",null,null],[17,"FORMAT_B5G5R5A1_UNORM_PACK16","","",null,null],[17,"FORMAT_A1R5G5B5_UNORM_PACK16","","",null,null],[17,"FORMAT_R8_UNORM","","",null,null],[17,"FORMAT_R8_SNORM","","",null,null],[17,"FORMAT_R8_USCALED","","",null,null],[17,"FORMAT_R8_SSCALED","","",null,null],[17,"FORMAT_R8_UINT","","",null,null],[17,"FORMAT_R8_SINT","","",null,null],[17,"FORMAT_R8_SRGB","","",null,null],[17,"FORMAT_R8G8_UNORM","","",null,null],[17,"FORMAT_R8G8_SNORM","","",null,null],[17,"FORMAT_R8G8_USCALED","","",null,null],[17,"FORMAT_R8G8_SSCALED","","",null,null],[17,"FORMAT_R8G8_UINT","","",null,null],[17,"FORMAT_R8G8_SINT","","",null,null],[17,"FORMAT_R8G8_SRGB","","",null,null],[17,"FORMAT_R8G8B8_UNORM","","",null,null],[17,"FORMAT_R8G8B8_SNORM","","",null,null],[17,"FORMAT_R8G8B8_USCALED","","",null,null],[17,"FORMAT_R8G8B8_SSCALED","","",null,null],[17,"FORMAT_R8G8B8_UINT","","",null,null],[17,"FORMAT_R8G8B8_SINT","","",null,null],[17,"FORMAT_R8G8B8_SRGB","","",null,null],[17,"FORMAT_B8G8R8_UNORM","","",null,null],[17,"FORMAT_B8G8R8_SNORM","","",null,null],[17,"FORMAT_B8G8R8_USCALED","","",null,null],[17,"FORMAT_B8G8R8_SSCALED","","",null,null],[17,"FORMAT_B8G8R8_UINT","","",null,null],[17,"FORMAT_B8G8R8_SINT","","",null,null],[17,"FORMAT_B8G8R8_SRGB","","",null,null],[17,"FORMAT_R8G8B8A8_UNORM","","",null,null],[17,"FORMAT_R8G8B8A8_SNORM","","",null,null],[17,"FORMAT_R8G8B8A8_USCALED","","",null,null],[17,"FORMAT_R8G8B8A8_SSCALED","","",null,null],[17,"FORMAT_R8G8B8A8_UINT","","",null,null],[17,"FORMAT_R8G8B8A8_SINT","","",null,null],[17,"FORMAT_R8G8B8A8_SRGB","","",null,null],[17,"FORMAT_B8G8R8A8_UNORM","","",null,null],[17,"FORMAT_B8G8R8A8_SNORM","","",null,null],[17,"FORMAT_B8G8R8A8_USCALED","","",null,null],[17,"FORMAT_B8G8R8A8_SSCALED","","",null,null],[17,"FORMAT_B8G8R8A8_UINT","","",null,null],[17,"FORMAT_B8G8R8A8_SINT","","",null,null],[17,"FORMAT_B8G8R8A8_SRGB","","",null,null],[17,"FORMAT_A8B8G8R8_UNORM_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_SNORM_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_USCALED_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_SSCALED_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_UINT_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_SINT_PACK32","","",null,null],[17,"FORMAT_A8B8G8R8_SRGB_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_UNORM_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_SNORM_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_USCALED_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_SSCALED_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_UINT_PACK32","","",null,null],[17,"FORMAT_A2R10G10B10_SINT_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_UNORM_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_SNORM_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_USCALED_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_SSCALED_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_UINT_PACK32","","",null,null],[17,"FORMAT_A2B10G10R10_SINT_PACK32","","",null,null],[17,"FORMAT_R16_UNORM","","",null,null],[17,"FORMAT_R16_SNORM","","",null,null],[17,"FORMAT_R16_USCALED","","",null,null],[17,"FORMAT_R16_SSCALED","","",null,null],[17,"FORMAT_R16_UINT","","",null,null],[17,"FORMAT_R16_SINT","","",null,null],[17,"FORMAT_R16_SFLOAT","","",null,null],[17,"FORMAT_R16G16_UNORM","","",null,null],[17,"FORMAT_R16G16_SNORM","","",null,null],[17,"FORMAT_R16G16_USCALED","","",null,null],[17,"FORMAT_R16G16_SSCALED","","",null,null],[17,"FORMAT_R16G16_UINT","","",null,null],[17,"FORMAT_R16G16_SINT","","",null,null],[17,"FORMAT_R16G16_SFLOAT","","",null,null],[17,"FORMAT_R16G16B16_UNORM","","",null,null],[17,"FORMAT_R16G16B16_SNORM","","",null,null],[17,"FORMAT_R16G16B16_USCALED","","",null,null],[17,"FORMAT_R16G16B16_SSCALED","","",null,null],[17,"FORMAT_R16G16B16_UINT","","",null,null],[17,"FORMAT_R16G16B16_SINT","","",null,null],[17,"FORMAT_R16G16B16_SFLOAT","","",null,null],[17,"FORMAT_R16G16B16A16_UNORM","","",null,null],[17,"FORMAT_R16G16B16A16_SNORM","","",null,null],[17,"FORMAT_R16G16B16A16_USCALED","","",null,null],[17,"FORMAT_R16G16B16A16_SSCALED","","",null,null],[17,"FORMAT_R16G16B16A16_UINT","","",null,null],[17,"FORMAT_R16G16B16A16_SINT","","",null,null],[17,"FORMAT_R16G16B16A16_SFLOAT","","",null,null],[17,"FORMAT_R32_UINT","","",null,null],[17,"FORMAT_R32_SINT","","",null,null],[17,"FORMAT_R32_SFLOAT","","",null,null],[17,"FORMAT_R32G32_UINT","","",null,null],[17,"FORMAT_R32G32_SINT","","",null,null],[17,"FORMAT_R32G32_SFLOAT","","",null,null],[17,"FORMAT_R32G32B32_UINT","","",null,null],[17,"FORMAT_R32G32B32_SINT","","",null,null],[17,"FORMAT_R32G32B32_SFLOAT","","",null,null],[17,"FORMAT_R32G32B32A32_UINT","","",null,null],[17,"FORMAT_R32G32B32A32_SINT","","",null,null],[17,"FORMAT_R32G32B32A32_SFLOAT","","",null,null],[17,"FORMAT_R64_UINT","","",null,null],[17,"FORMAT_R64_SINT","","",null,null],[17,"FORMAT_R64_SFLOAT","","",null,null],[17,"FORMAT_R64G64_UINT","","",null,null],[17,"FORMAT_R64G64_SINT","","",null,null],[17,"FORMAT_R64G64_SFLOAT","","",null,null],[17,"FORMAT_R64G64B64_UINT","","",null,null],[17,"FORMAT_R64G64B64_SINT","","",null,null],[17,"FORMAT_R64G64B64_SFLOAT","","",null,null],[17,"FORMAT_R64G64B64A64_UINT","","",null,null],[17,"FORMAT_R64G64B64A64_SINT","","",null,null],[17,"FORMAT_R64G64B64A64_SFLOAT","","",null,null],[17,"FORMAT_B10G11R11_UFLOAT_PACK32","","",null,null],[17,"FORMAT_E5B9G9R9_UFLOAT_PACK32","","",null,null],[17,"FORMAT_D16_UNORM","","",null,null],[17,"FORMAT_X8_D24_UNORM_PACK32","","",null,null],[17,"FORMAT_D32_SFLOAT","","",null,null],[17,"FORMAT_S8_UINT","","",null,null],[17,"FORMAT_D16_UNORM_S8_UINT","","",null,null],[17,"FORMAT_D24_UNORM_S8_UINT","","",null,null],[17,"FORMAT_D32_SFLOAT_S8_UINT","","",null,null],[17,"FORMAT_BC1_RGB_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC1_RGB_SRGB_BLOCK","","",null,null],[17,"FORMAT_BC1_RGBA_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC1_RGBA_SRGB_BLOCK","","",null,null],[17,"FORMAT_BC2_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC2_SRGB_BLOCK","","",null,null],[17,"FORMAT_BC3_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC3_SRGB_BLOCK","","",null,null],[17,"FORMAT_BC4_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC4_SNORM_BLOCK","","",null,null],[17,"FORMAT_BC5_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC5_SNORM_BLOCK","","",null,null],[17,"FORMAT_BC6H_UFLOAT_BLOCK","","",null,null],[17,"FORMAT_BC6H_SFLOAT_BLOCK","","",null,null],[17,"FORMAT_BC7_UNORM_BLOCK","","",null,null],[17,"FORMAT_BC7_SRGB_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8_UNORM_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8_SRGB_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK","","",null,null],[17,"FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK","","",null,null],[17,"FORMAT_EAC_R11_UNORM_BLOCK","","",null,null],[17,"FORMAT_EAC_R11_SNORM_BLOCK","","",null,null],[17,"FORMAT_EAC_R11G11_UNORM_BLOCK","","",null,null],[17,"FORMAT_EAC_R11G11_SNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_4x4_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_4x4_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_5x4_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_5x4_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_5x5_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_5x5_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_6x5_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_6x5_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_6x6_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_6x6_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x5_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x5_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x6_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x6_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x8_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_8x8_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x5_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x5_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x6_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x6_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x8_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x8_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x10_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_10x10_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_12x10_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_12x10_SRGB_BLOCK","","",null,null],[17,"FORMAT_ASTC_12x12_UNORM_BLOCK","","",null,null],[17,"FORMAT_ASTC_12x12_SRGB_BLOCK","","",null,null],[17,"IMAGE_TYPE_1D","","",null,null],[17,"IMAGE_TYPE_2D","","",null,null],[17,"IMAGE_TYPE_3D","","",null,null],[17,"IMAGE_TILING_OPTIMAL","","",null,null],[17,"IMAGE_TILING_LINEAR","","",null,null],[17,"PHYSICAL_DEVICE_TYPE_OTHER","","",null,null],[17,"PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU","","",null,null],[17,"PHYSICAL_DEVICE_TYPE_DISCRETE_GPU","","",null,null],[17,"PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU","","",null,null],[17,"PHYSICAL_DEVICE_TYPE_CPU","","",null,null],[17,"QUERY_TYPE_OCCLUSION","","",null,null],[17,"QUERY_TYPE_PIPELINE_STATISTICS","","",null,null],[17,"QUERY_TYPE_TIMESTAMP","","",null,null],[17,"SHARING_MODE_EXCLUSIVE","","",null,null],[17,"SHARING_MODE_CONCURRENT","","",null,null],[17,"IMAGE_LAYOUT_UNDEFINED","","",null,null],[17,"IMAGE_LAYOUT_GENERAL","","",null,null],[17,"IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL","","",null,null],[17,"IMAGE_LAYOUT_PREINITIALIZED","","",null,null],[17,"IMAGE_LAYOUT_PRESENT_SRC_KHR","","",null,null],[17,"IMAGE_VIEW_TYPE_1D","","",null,null],[17,"IMAGE_VIEW_TYPE_2D","","",null,null],[17,"IMAGE_VIEW_TYPE_3D","","",null,null],[17,"IMAGE_VIEW_TYPE_CUBE","","",null,null],[17,"IMAGE_VIEW_TYPE_1D_ARRAY","","",null,null],[17,"IMAGE_VIEW_TYPE_2D_ARRAY","","",null,null],[17,"IMAGE_VIEW_TYPE_CUBE_ARRAY","","",null,null],[17,"COMPONENT_SWIZZLE_IDENTITY","","",null,null],[17,"COMPONENT_SWIZZLE_ZERO","","",null,null],[17,"COMPONENT_SWIZZLE_ONE","","",null,null],[17,"COMPONENT_SWIZZLE_R","","",null,null],[17,"COMPONENT_SWIZZLE_G","","",null,null],[17,"COMPONENT_SWIZZLE_B","","",null,null],[17,"COMPONENT_SWIZZLE_A","","",null,null],[17,"VERTEX_INPUT_RATE_VERTEX","","",null,null],[17,"VERTEX_INPUT_RATE_INSTANCE","","",null,null],[17,"PRIMITIVE_TOPOLOGY_POINT_LIST","","",null,null],[17,"PRIMITIVE_TOPOLOGY_LINE_LIST","","",null,null],[17,"PRIMITIVE_TOPOLOGY_LINE_STRIP","","",null,null],[17,"PRIMITIVE_TOPOLOGY_TRIANGLE_LIST","","",null,null],[17,"PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP","","",null,null],[17,"PRIMITIVE_TOPOLOGY_TRIANGLE_FAN","","",null,null],[17,"PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY","","",null,null],[17,"PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY","","",null,null],[17,"PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY","","",null,null],[17,"PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY","","",null,null],[17,"PRIMITIVE_TOPOLOGY_PATCH_LIST","","",null,null],[17,"POLYGON_MODE_FILL","","",null,null],[17,"POLYGON_MODE_LINE","","",null,null],[17,"POLYGON_MODE_POINT","","",null,null],[17,"FRONT_FACE_COUNTER_CLOCKWISE","","",null,null],[17,"FRONT_FACE_CLOCKWISE","","",null,null],[17,"COMPARE_OP_NEVER","","",null,null],[17,"COMPARE_OP_LESS","","",null,null],[17,"COMPARE_OP_EQUAL","","",null,null],[17,"COMPARE_OP_LESS_OR_EQUAL","","",null,null],[17,"COMPARE_OP_GREATER","","",null,null],[17,"COMPARE_OP_NOT_EQUAL","","",null,null],[17,"COMPARE_OP_GREATER_OR_EQUAL","","",null,null],[17,"COMPARE_OP_ALWAYS","","",null,null],[17,"STENCIL_OP_KEEP","","",null,null],[17,"STENCIL_OP_ZERO","","",null,null],[17,"STENCIL_OP_REPLACE","","",null,null],[17,"STENCIL_OP_INCREMENT_AND_CLAMP","","",null,null],[17,"STENCIL_OP_DECREMENT_AND_CLAMP","","",null,null],[17,"STENCIL_OP_INVERT","","",null,null],[17,"STENCIL_OP_INCREMENT_AND_WRAP","","",null,null],[17,"STENCIL_OP_DECREMENT_AND_WRAP","","",null,null],[17,"LOGIC_OP_CLEAR","","",null,null],[17,"LOGIC_OP_AND","","",null,null],[17,"LOGIC_OP_AND_REVERSE","","",null,null],[17,"LOGIC_OP_COPY","","",null,null],[17,"LOGIC_OP_AND_INVERTED","","",null,null],[17,"LOGIC_OP_NO_OP","","",null,null],[17,"LOGIC_OP_XOR","","",null,null],[17,"LOGIC_OP_OR","","",null,null],[17,"LOGIC_OP_NOR","","",null,null],[17,"LOGIC_OP_EQUIVALENT","","",null,null],[17,"LOGIC_OP_INVERT","","",null,null],[17,"LOGIC_OP_OR_REVERSE","","",null,null],[17,"LOGIC_OP_COPY_INVERTED","","",null,null],[17,"LOGIC_OP_OR_INVERTED","","",null,null],[17,"LOGIC_OP_NAND","","",null,null],[17,"LOGIC_OP_SET","","",null,null],[17,"BLEND_FACTOR_ZERO","","",null,null],[17,"BLEND_FACTOR_ONE","","",null,null],[17,"BLEND_FACTOR_SRC_COLOR","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_SRC_COLOR","","",null,null],[17,"BLEND_FACTOR_DST_COLOR","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_DST_COLOR","","",null,null],[17,"BLEND_FACTOR_SRC_ALPHA","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_SRC_ALPHA","","",null,null],[17,"BLEND_FACTOR_DST_ALPHA","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_DST_ALPHA","","",null,null],[17,"BLEND_FACTOR_CONSTANT_COLOR","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR","","",null,null],[17,"BLEND_FACTOR_CONSTANT_ALPHA","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA","","",null,null],[17,"BLEND_FACTOR_SRC_ALPHA_SATURATE","","",null,null],[17,"BLEND_FACTOR_SRC1_COLOR","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_SRC1_COLOR","","",null,null],[17,"BLEND_FACTOR_SRC1_ALPHA","","",null,null],[17,"BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA","","",null,null],[17,"BLEND_OP_ADD","","",null,null],[17,"BLEND_OP_SUBTRACT","","",null,null],[17,"BLEND_OP_REVERSE_SUBTRACT","","",null,null],[17,"BLEND_OP_MIN","","",null,null],[17,"BLEND_OP_MAX","","",null,null],[17,"DYNAMIC_STATE_VIEWPORT","","",null,null],[17,"DYNAMIC_STATE_SCISSOR","","",null,null],[17,"DYNAMIC_STATE_LINE_WIDTH","","",null,null],[17,"DYNAMIC_STATE_DEPTH_BIAS","","",null,null],[17,"DYNAMIC_STATE_BLEND_CONSTANTS","","",null,null],[17,"DYNAMIC_STATE_DEPTH_BOUNDS","","",null,null],[17,"DYNAMIC_STATE_STENCIL_COMPARE_MASK","","",null,null],[17,"DYNAMIC_STATE_STENCIL_WRITE_MASK","","",null,null],[17,"DYNAMIC_STATE_STENCIL_REFERENCE","","",null,null],[17,"FILTER_NEAREST","","",null,null],[17,"FILTER_LINEAR","","",null,null],[17,"SAMPLER_MIPMAP_MODE_NEAREST","","",null,null],[17,"SAMPLER_MIPMAP_MODE_LINEAR","","",null,null],[17,"SAMPLER_ADDRESS_MODE_REPEAT","","",null,null],[17,"SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT","","",null,null],[17,"SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE","","",null,null],[17,"SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER","","",null,null],[17,"SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE","","",null,null],[17,"BORDER_COLOR_FLOAT_TRANSPARENT_BLACK","","",null,null],[17,"BORDER_COLOR_INT_TRANSPARENT_BLACK","","",null,null],[17,"BORDER_COLOR_FLOAT_OPAQUE_BLACK","","",null,null],[17,"BORDER_COLOR_INT_OPAQUE_BLACK","","",null,null],[17,"BORDER_COLOR_FLOAT_OPAQUE_WHITE","","",null,null],[17,"BORDER_COLOR_INT_OPAQUE_WHITE","","",null,null],[17,"DESCRIPTOR_TYPE_SAMPLER","","",null,null],[17,"DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER","","",null,null],[17,"DESCRIPTOR_TYPE_SAMPLED_IMAGE","","",null,null],[17,"DESCRIPTOR_TYPE_STORAGE_IMAGE","","",null,null],[17,"DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER","","",null,null],[17,"DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER","","",null,null],[17,"DESCRIPTOR_TYPE_UNIFORM_BUFFER","","",null,null],[17,"DESCRIPTOR_TYPE_STORAGE_BUFFER","","",null,null],[17,"DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC","","",null,null],[17,"DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC","","",null,null],[17,"DESCRIPTOR_TYPE_INPUT_ATTACHMENT","","",null,null],[17,"ATTACHMENT_LOAD_OP_LOAD","","",null,null],[17,"ATTACHMENT_LOAD_OP_CLEAR","","",null,null],[17,"ATTACHMENT_LOAD_OP_DONT_CARE","","",null,null],[17,"ATTACHMENT_STORE_OP_STORE","","",null,null],[17,"ATTACHMENT_STORE_OP_DONT_CARE","","",null,null],[17,"PIPELINE_BIND_POINT_GRAPHICS","","",null,null],[17,"PIPELINE_BIND_POINT_COMPUTE","","",null,null],[17,"COMMAND_BUFFER_LEVEL_PRIMARY","","",null,null],[17,"COMMAND_BUFFER_LEVEL_SECONDARY","","",null,null],[17,"INDEX_TYPE_UINT16","","",null,null],[17,"INDEX_TYPE_UINT32","","",null,null],[17,"SUBPASS_CONTENTS_INLINE","","",null,null],[17,"SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS","","",null,null],[17,"FORMAT_FEATURE_SAMPLED_IMAGE_BIT","","",null,null],[17,"FORMAT_FEATURE_STORAGE_IMAGE_BIT","","",null,null],[17,"FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT","","",null,null],[17,"FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT","","",null,null],[17,"FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT","","",null,null],[17,"FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT","","",null,null],[17,"FORMAT_FEATURE_VERTEX_BUFFER_BIT","","",null,null],[17,"FORMAT_FEATURE_COLOR_ATTACHMENT_BIT","","",null,null],[17,"FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT","","",null,null],[17,"FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT","","",null,null],[17,"FORMAT_FEATURE_BLIT_SRC_BIT","","",null,null],[17,"FORMAT_FEATURE_BLIT_DST_BIT","","",null,null],[17,"FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT","","",null,null],[17,"IMAGE_USAGE_TRANSFER_SRC_BIT","","",null,null],[17,"IMAGE_USAGE_TRANSFER_DST_BIT","","",null,null],[17,"IMAGE_USAGE_SAMPLED_BIT","","",null,null],[17,"IMAGE_USAGE_STORAGE_BIT","","",null,null],[17,"IMAGE_USAGE_COLOR_ATTACHMENT_BIT","","",null,null],[17,"IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT","","",null,null],[17,"IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT","","",null,null],[17,"IMAGE_USAGE_INPUT_ATTACHMENT_BIT","","",null,null],[17,"IMAGE_CREATE_SPARSE_BINDING_BIT","","",null,null],[17,"IMAGE_CREATE_SPARSE_RESIDENCY_BIT","","",null,null],[17,"IMAGE_CREATE_SPARSE_ALIASED_BIT","","",null,null],[17,"IMAGE_CREATE_MUTABLE_FORMAT_BIT","","",null,null],[17,"IMAGE_CREATE_CUBE_COMPATIBLE_BIT","","",null,null],[17,"SAMPLE_COUNT_1_BIT","","",null,null],[17,"SAMPLE_COUNT_2_BIT","","",null,null],[17,"SAMPLE_COUNT_4_BIT","","",null,null],[17,"SAMPLE_COUNT_8_BIT","","",null,null],[17,"SAMPLE_COUNT_16_BIT","","",null,null],[17,"SAMPLE_COUNT_32_BIT","","",null,null],[17,"SAMPLE_COUNT_64_BIT","","",null,null],[17,"QUEUE_GRAPHICS_BIT","","",null,null],[17,"QUEUE_COMPUTE_BIT","","",null,null],[17,"QUEUE_TRANSFER_BIT","","",null,null],[17,"QUEUE_SPARSE_BINDING_BIT","","",null,null],[17,"MEMORY_PROPERTY_DEVICE_LOCAL_BIT","","",null,null],[17,"MEMORY_PROPERTY_HOST_VISIBLE_BIT","","",null,null],[17,"MEMORY_PROPERTY_HOST_COHERENT_BIT","","",null,null],[17,"MEMORY_PROPERTY_HOST_CACHED_BIT","","",null,null],[17,"MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT","","",null,null],[17,"MEMORY_HEAP_DEVICE_LOCAL_BIT","","",null,null],[17,"PIPELINE_STAGE_TOP_OF_PIPE_BIT","","",null,null],[17,"PIPELINE_STAGE_DRAW_INDIRECT_BIT","","",null,null],[17,"PIPELINE_STAGE_VERTEX_INPUT_BIT","","",null,null],[17,"PIPELINE_STAGE_VERTEX_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_GEOMETRY_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_FRAGMENT_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT","","",null,null],[17,"PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT","","",null,null],[17,"PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT","","",null,null],[17,"PIPELINE_STAGE_COMPUTE_SHADER_BIT","","",null,null],[17,"PIPELINE_STAGE_TRANSFER_BIT","","",null,null],[17,"PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT","","",null,null],[17,"PIPELINE_STAGE_HOST_BIT","","",null,null],[17,"PIPELINE_STAGE_ALL_GRAPHICS_BIT","","",null,null],[17,"PIPELINE_STAGE_ALL_COMMANDS_BIT","","",null,null],[17,"IMAGE_ASPECT_COLOR_BIT","","",null,null],[17,"IMAGE_ASPECT_DEPTH_BIT","","",null,null],[17,"IMAGE_ASPECT_STENCIL_BIT","","",null,null],[17,"IMAGE_ASPECT_METADATA_BIT","","",null,null],[17,"SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT","","",null,null],[17,"SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT","","",null,null],[17,"SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT","","",null,null],[17,"SPARSE_MEMORY_BIND_METADATA_BIT","","",null,null],[17,"FENCE_CREATE_SIGNALED_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT","","",null,null],[17,"QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT","","",null,null],[17,"QUERY_RESULT_64_BIT","","",null,null],[17,"QUERY_RESULT_WAIT_BIT","","",null,null],[17,"QUERY_RESULT_WITH_AVAILABILITY_BIT","","",null,null],[17,"QUERY_RESULT_PARTIAL_BIT","","",null,null],[17,"BUFFER_CREATE_SPARSE_BINDING_BIT","","",null,null],[17,"BUFFER_CREATE_SPARSE_RESIDENCY_BIT","","",null,null],[17,"BUFFER_CREATE_SPARSE_ALIASED_BIT","","",null,null],[17,"BUFFER_USAGE_TRANSFER_SRC_BIT","","",null,null],[17,"BUFFER_USAGE_TRANSFER_DST_BIT","","",null,null],[17,"BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_UNIFORM_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_STORAGE_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_INDEX_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_VERTEX_BUFFER_BIT","","",null,null],[17,"BUFFER_USAGE_INDIRECT_BUFFER_BIT","","",null,null],[17,"PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT","","",null,null],[17,"PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT","","",null,null],[17,"PIPELINE_CREATE_DERIVATIVE_BIT","","",null,null],[17,"SHADER_STAGE_VERTEX_BIT","","",null,null],[17,"SHADER_STAGE_TESSELLATION_CONTROL_BIT","","",null,null],[17,"SHADER_STAGE_TESSELLATION_EVALUATION_BIT","","",null,null],[17,"SHADER_STAGE_GEOMETRY_BIT","","",null,null],[17,"SHADER_STAGE_FRAGMENT_BIT","","",null,null],[17,"SHADER_STAGE_COMPUTE_BIT","","",null,null],[17,"SHADER_STAGE_ALL_GRAPHICS","","",null,null],[17,"SHADER_STAGE_ALL","","",null,null],[17,"CULL_MODE_NONE","","",null,null],[17,"CULL_MODE_FRONT_BIT","","",null,null],[17,"CULL_MODE_BACK_BIT","","",null,null],[17,"CULL_MODE_FRONT_AND_BACK","","",null,null],[17,"COLOR_COMPONENT_R_BIT","","",null,null],[17,"COLOR_COMPONENT_G_BIT","","",null,null],[17,"COLOR_COMPONENT_B_BIT","","",null,null],[17,"COLOR_COMPONENT_A_BIT","","",null,null],[17,"DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT","","",null,null],[17,"ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT","","",null,null],[17,"ACCESS_INDIRECT_COMMAND_READ_BIT","","",null,null],[17,"ACCESS_INDEX_READ_BIT","","",null,null],[17,"ACCESS_VERTEX_ATTRIBUTE_READ_BIT","","",null,null],[17,"ACCESS_UNIFORM_READ_BIT","","",null,null],[17,"ACCESS_INPUT_ATTACHMENT_READ_BIT","","",null,null],[17,"ACCESS_SHADER_READ_BIT","","",null,null],[17,"ACCESS_SHADER_WRITE_BIT","","",null,null],[17,"ACCESS_COLOR_ATTACHMENT_READ_BIT","","",null,null],[17,"ACCESS_COLOR_ATTACHMENT_WRITE_BIT","","",null,null],[17,"ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT","","",null,null],[17,"ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT","","",null,null],[17,"ACCESS_TRANSFER_READ_BIT","","",null,null],[17,"ACCESS_TRANSFER_WRITE_BIT","","",null,null],[17,"ACCESS_HOST_READ_BIT","","",null,null],[17,"ACCESS_HOST_WRITE_BIT","","",null,null],[17,"ACCESS_MEMORY_READ_BIT","","",null,null],[17,"ACCESS_MEMORY_WRITE_BIT","","",null,null],[17,"DEPENDENCY_BY_REGION_BIT","","",null,null],[17,"COMMAND_POOL_CREATE_TRANSIENT_BIT","","",null,null],[17,"COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT","","",null,null],[17,"COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT","","",null,null],[17,"COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT","","",null,null],[17,"COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT","","",null,null],[17,"COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT","","",null,null],[17,"QUERY_CONTROL_PRECISE_BIT","","",null,null],[17,"COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT","","",null,null],[17,"STENCIL_FACE_FRONT_BIT","","",null,null],[17,"STENCIL_FACE_BACK_BIT","","",null,null],[17,"STENCIL_FRONT_AND_BACK","","",null,null],[17,"DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR","","",null,null],[17,"DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR","","",null,null],[17,"DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR","","",null,null],[17,"DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR","","",null,null],[17,"COLORSPACE_SRGB_NONLINEAR_KHR","","",null,null],[17,"PRESENT_MODE_IMMEDIATE_KHR","","",null,null],[17,"PRESENT_MODE_MAILBOX_KHR","","",null,null],[17,"PRESENT_MODE_FIFO_KHR","","",null,null],[17,"PRESENT_MODE_FIFO_RELAXED_KHR","","",null,null],[17,"SURFACE_TRANSFORM_IDENTITY_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_ROTATE_90_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_ROTATE_180_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_ROTATE_270_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR","","",null,null],[17,"SURFACE_TRANSFORM_INHERIT_BIT_KHR","","",null,null],[17,"COMPOSITE_ALPHA_OPAQUE_BIT_KHR","","",null,null],[17,"COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR","","",null,null],[17,"COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR","","",null,null],[17,"COMPOSITE_ALPHA_INHERIT_BIT_KHR","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT","","",null,null],[17,"DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT","","",null,null],[17,"DEBUG_REPORT_ERROR_NONE_EXT","","",null,null],[17,"DEBUG_REPORT_ERROR_CALLBACK_REF_EXT","","",null,null],[17,"DEBUG_REPORT_INFORMATION_BIT_EXT","","",null,null],[17,"DEBUG_REPORT_WARNING_BIT_EXT","","",null,null],[17,"DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT","","",null,null],[17,"DEBUG_REPORT_ERROR_BIT_EXT","","",null,null],[17,"DEBUG_REPORT_DEBUG_BIT_EXT","","",null,null],[11,"as_float32","","",124,null],[11,"as_int32","","",124,null],[11,"as_uint32","","",124,null],[11,"float32","","",124,null],[11,"int32","","",124,null],[11,"uint32","","",124,null],[11,"as_color","","",125,{"inputs":[{"name":"clearvalue"}],"output":{"name":"clearcolorvalue"}}],[11,"as_depth_stencil","","",125,{"inputs":[{"name":"clearvalue"}],"output":{"name":"cleardepthstencilvalue"}}],[11,"color","","",125,{"inputs":[{"name":"clearcolorvalue"}],"output":{"name":"clearvalue"}}],[11,"depth_stencil","","",125,{"inputs":[{"name":"cleardepthstencilvalue"}],"output":{"name":"clearvalue"}}],[11,"fmt","","",126,{"inputs":[{"name":"static"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"load","","",126,{"inputs":[{"name":"f"}],"output":{"name":"static"}}],[11,"GetInstanceProcAddr","","",126,null],[11,"fmt","","",127,{"inputs":[{"name":"entrypoints"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"load","","",127,{"inputs":[{"name":"f"}],"output":{"name":"entrypoints"}}],[11,"CreateInstance","","",127,null],[11,"EnumerateInstanceExtensionProperties","","",127,null],[11,"EnumerateInstanceLayerProperties","","",127,null],[11,"fmt","","",128,{"inputs":[{"name":"instancepointers"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"load","","",128,{"inputs":[{"name":"f"}],"output":{"name":"instancepointers"}}],[11,"DestroyInstance","","",128,null],[11,"GetDeviceProcAddr","","",128,null],[11,"EnumeratePhysicalDevices","","",128,null],[11,"EnumerateDeviceExtensionProperties","","",128,null],[11,"EnumerateDeviceLayerProperties","","",128,null],[11,"CreateDevice","","",128,null],[11,"GetPhysicalDeviceFeatures","","",128,null],[11,"GetPhysicalDeviceFormatProperties","","",128,null],[11,"GetPhysicalDeviceImageFormatProperties","","",128,null],[11,"GetPhysicalDeviceProperties","","",128,null],[11,"GetPhysicalDeviceQueueFamilyProperties","","",128,null],[11,"GetPhysicalDeviceMemoryProperties","","",128,null],[11,"GetPhysicalDeviceSparseImageFormatProperties","","",128,null],[11,"DestroySurfaceKHR","","",128,null],[11,"CreateXlibSurfaceKHR","","",128,null],[11,"GetPhysicalDeviceXlibPresentationSupportKHR","","",128,null],[11,"CreateXcbSurfaceKHR","","",128,null],[11,"GetPhysicalDeviceXcbPresentationSupportKHR","","",128,null],[11,"CreateWaylandSurfaceKHR","","",128,null],[11,"GetPhysicalDeviceWaylandPresentationSupportKHR","","",128,null],[11,"CreateMirSurfaceKHR","","",128,null],[11,"GetPhysicalDeviceMirPresentationSupportKHR","","",128,null],[11,"CreateAndroidSurfaceKHR","","",128,null],[11,"CreateWin32SurfaceKHR","","",128,null],[11,"GetPhysicalDeviceWin32PresentationSupportKHR","","",128,{"inputs":[{"name":"instancepointers"},{"name":"physicaldevice"},{"name":"u32"}],"output":{"name":"bool32"}}],[11,"GetPhysicalDeviceDisplayPropertiesKHR","","",128,null],[11,"GetPhysicalDeviceDisplayPlanePropertiesKHR","","",128,null],[11,"GetDisplayPlaneSupportedDisplaysKHR","","",128,null],[11,"GetDisplayModePropertiesKHR","","",128,null],[11,"CreateDisplayModeKHR","","",128,null],[11,"GetDisplayPlaneCapabilitiesKHR","","",128,null],[11,"CreateDisplayPlaneSurfaceKHR","","",128,null],[11,"GetPhysicalDeviceSurfaceSupportKHR","","",128,null],[11,"GetPhysicalDeviceSurfaceCapabilitiesKHR","","",128,null],[11,"GetPhysicalDeviceSurfaceFormatsKHR","","",128,null],[11,"GetPhysicalDeviceSurfacePresentModesKHR","","",128,null],[11,"CreateDebugReportCallbackEXT","","",128,null],[11,"DestroyDebugReportCallbackEXT","","",128,null],[11,"DebugReportMessageEXT","","",128,null],[11,"fmt","","",129,{"inputs":[{"name":"devicepointers"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"load","","",129,{"inputs":[{"name":"f"}],"output":{"name":"devicepointers"}}],[11,"DestroyDevice","","",129,null],[11,"GetDeviceQueue","","",129,null],[11,"QueueSubmit","","",129,null],[11,"QueueWaitIdle","","",129,{"inputs":[{"name":"devicepointers"},{"name":"queue"}],"output":{"name":"result"}}],[11,"DeviceWaitIdle","","",129,{"inputs":[{"name":"devicepointers"},{"name":"device"}],"output":{"name":"result"}}],[11,"AllocateMemory","","",129,null],[11,"FreeMemory","","",129,null],[11,"MapMemory","","",129,null],[11,"UnmapMemory","","",129,null],[11,"FlushMappedMemoryRanges","","",129,null],[11,"InvalidateMappedMemoryRanges","","",129,null],[11,"GetDeviceMemoryCommitment","","",129,null],[11,"BindBufferMemory","","",129,{"inputs":[{"name":"devicepointers"},{"name":"device"},{"name":"buffer"},{"name":"devicememory"},{"name":"devicesize"}],"output":{"name":"result"}}],[11,"BindImageMemory","","",129,{"inputs":[{"name":"devicepointers"},{"name":"device"},{"name":"image"},{"name":"devicememory"},{"name":"devicesize"}],"output":{"name":"result"}}],[11,"GetBufferMemoryRequirements","","",129,null],[11,"GetImageMemoryRequirements","","",129,null],[11,"GetImageSparseMemoryRequirements","","",129,null],[11,"QueueBindSparse","","",129,null],[11,"CreateFence","","",129,null],[11,"DestroyFence","","",129,null],[11,"ResetFences","","",129,null],[11,"GetFenceStatus","","",129,{"inputs":[{"name":"devicepointers"},{"name":"device"},{"name":"fence"}],"output":{"name":"result"}}],[11,"WaitForFences","","",129,null],[11,"CreateSemaphore","","",129,null],[11,"DestroySemaphore","","",129,null],[11,"CreateEvent","","",129,null],[11,"DestroyEvent","","",129,null],[11,"GetEventStatus","","",129,{"inputs":[{"name":"devicepointers"},{"name":"device"},{"name":"event"}],"output":{"name":"result"}}],[11,"SetEvent","","",129,{"inputs":[{"name":"devicepointers"},{"name":"device"},{"name":"event"}],"output":{"name":"result"}}],[11,"ResetEvent","","",129,{"inputs":[{"name":"devicepointers"},{"name":"device"},{"name":"event"}],"output":{"name":"result"}}],[11,"CreateQueryPool","","",129,null],[11,"DestroyQueryPool","","",129,null],[11,"GetQueryPoolResults","","",129,null],[11,"CreateBuffer","","",129,null],[11,"DestroyBuffer","","",129,null],[11,"CreateBufferView","","",129,null],[11,"DestroyBufferView","","",129,null],[11,"CreateImage","","",129,null],[11,"DestroyImage","","",129,null],[11,"GetImageSubresourceLayout","","",129,null],[11,"CreateImageView","","",129,null],[11,"DestroyImageView","","",129,null],[11,"CreateShaderModule","","",129,null],[11,"DestroyShaderModule","","",129,null],[11,"CreatePipelineCache","","",129,null],[11,"DestroyPipelineCache","","",129,null],[11,"GetPipelineCacheData","","",129,null],[11,"MergePipelineCaches","","",129,null],[11,"CreateGraphicsPipelines","","",129,null],[11,"CreateComputePipelines","","",129,null],[11,"DestroyPipeline","","",129,null],[11,"CreatePipelineLayout","","",129,null],[11,"DestroyPipelineLayout","","",129,null],[11,"CreateSampler","","",129,null],[11,"DestroySampler","","",129,null],[11,"CreateDescriptorSetLayout","","",129,null],[11,"DestroyDescriptorSetLayout","","",129,null],[11,"CreateDescriptorPool","","",129,null],[11,"DestroyDescriptorPool","","",129,null],[11,"ResetDescriptorPool","","",129,{"inputs":[{"name":"devicepointers"},{"name":"device"},{"name":"descriptorpool"},{"name":"descriptorpoolresetflags"}],"output":{"name":"result"}}],[11,"AllocateDescriptorSets","","",129,null],[11,"FreeDescriptorSets","","",129,null],[11,"UpdateDescriptorSets","","",129,null],[11,"CreateFramebuffer","","",129,null],[11,"DestroyFramebuffer","","",129,null],[11,"CreateRenderPass","","",129,null],[11,"DestroyRenderPass","","",129,null],[11,"GetRenderAreaGranularity","","",129,null],[11,"CreateCommandPool","","",129,null],[11,"DestroyCommandPool","","",129,null],[11,"ResetCommandPool","","",129,{"inputs":[{"name":"devicepointers"},{"name":"device"},{"name":"commandpool"},{"name":"commandpoolresetflags"}],"output":{"name":"result"}}],[11,"AllocateCommandBuffers","","",129,null],[11,"FreeCommandBuffers","","",129,null],[11,"BeginCommandBuffer","","",129,null],[11,"EndCommandBuffer","","",129,{"inputs":[{"name":"devicepointers"},{"name":"commandbuffer"}],"output":{"name":"result"}}],[11,"ResetCommandBuffer","","",129,{"inputs":[{"name":"devicepointers"},{"name":"commandbuffer"},{"name":"commandbufferresetflags"}],"output":{"name":"result"}}],[11,"CmdBindPipeline","","",129,null],[11,"CmdSetViewport","","",129,null],[11,"CmdSetScissor","","",129,null],[11,"CmdSetLineWidth","","",129,null],[11,"CmdSetDepthBias","","",129,null],[11,"CmdSetBlendConstants","","",129,null],[11,"CmdSetDepthBounds","","",129,null],[11,"CmdSetStencilCompareMask","","",129,null],[11,"CmdSetStencilWriteMask","","",129,null],[11,"CmdSetStencilReference","","",129,null],[11,"CmdBindDescriptorSets","","",129,null],[11,"CmdBindIndexBuffer","","",129,null],[11,"CmdBindVertexBuffers","","",129,null],[11,"CmdDraw","","",129,null],[11,"CmdDrawIndexed","","",129,null],[11,"CmdDrawIndirect","","",129,null],[11,"CmdDrawIndexedIndirect","","",129,null],[11,"CmdDispatch","","",129,null],[11,"CmdDispatchIndirect","","",129,null],[11,"CmdCopyBuffer","","",129,null],[11,"CmdCopyImage","","",129,null],[11,"CmdBlitImage","","",129,null],[11,"CmdCopyBufferToImage","","",129,null],[11,"CmdCopyImageToBuffer","","",129,null],[11,"CmdUpdateBuffer","","",129,null],[11,"CmdFillBuffer","","",129,null],[11,"CmdClearColorImage","","",129,null],[11,"CmdClearDepthStencilImage","","",129,null],[11,"CmdClearAttachments","","",129,null],[11,"CmdResolveImage","","",129,null],[11,"CmdSetEvent","","",129,null],[11,"CmdResetEvent","","",129,null],[11,"CmdWaitEvents","","",129,null],[11,"CmdPipelineBarrier","","",129,null],[11,"CmdBeginQuery","","",129,null],[11,"CmdEndQuery","","",129,null],[11,"CmdResetQueryPool","","",129,null],[11,"CmdWriteTimestamp","","",129,null],[11,"CmdCopyQueryPoolResults","","",129,null],[11,"CmdPushConstants","","",129,null],[11,"CmdBeginRenderPass","","",129,null],[11,"CmdNextSubpass","","",129,null],[11,"CmdEndRenderPass","","",129,null],[11,"CmdExecuteCommands","","",129,null],[11,"CreateSwapchainKHR","","",129,null],[11,"DestroySwapchainKHR","","",129,null],[11,"GetSwapchainImagesKHR","","",129,null],[11,"AcquireNextImageKHR","","",129,null],[11,"QueuePresentKHR","","",129,null],[11,"CreateSharedSwapchainsKHR","","",129,null]],"paths":[[3,"ApplicationInfo"],[3,"InstanceCreateInfo"],[3,"AllocationCallbacks"],[3,"PhysicalDeviceFeatures"],[3,"FormatProperties"],[3,"Extent3D"],[3,"ImageFormatProperties"],[3,"PhysicalDeviceLimits"],[3,"PhysicalDeviceSparseProperties"],[3,"PhysicalDeviceProperties"],[3,"QueueFamilyProperties"],[3,"MemoryType"],[3,"MemoryHeap"],[3,"PhysicalDeviceMemoryProperties"],[3,"DeviceQueueCreateInfo"],[3,"DeviceCreateInfo"],[3,"ExtensionProperties"],[3,"LayerProperties"],[3,"SubmitInfo"],[3,"MemoryAllocateInfo"],[3,"MappedMemoryRange"],[3,"MemoryRequirements"],[3,"SparseImageFormatProperties"],[3,"SparseImageMemoryRequirements"],[3,"SparseMemoryBind"],[3,"SparseBufferMemoryBindInfo"],[3,"SparseImageOpaqueMemoryBindInfo"],[3,"ImageSubresource"],[3,"Offset3D"],[3,"SparseImageMemoryBind"],[3,"SparseImageMemoryBindInfo"],[3,"BindSparseInfo"],[3,"FenceCreateInfo"],[3,"SemaphoreCreateInfo"],[3,"EventCreateInfo"],[3,"QueryPoolCreateInfo"],[3,"BufferCreateInfo"],[3,"BufferViewCreateInfo"],[3,"ImageCreateInfo"],[3,"SubresourceLayout"],[3,"ComponentMapping"],[3,"ImageSubresourceRange"],[3,"ImageViewCreateInfo"],[3,"ShaderModuleCreateInfo"],[3,"PipelineCacheCreateInfo"],[3,"SpecializationMapEntry"],[3,"SpecializationInfo"],[3,"PipelineShaderStageCreateInfo"],[3,"VertexInputBindingDescription"],[3,"VertexInputAttributeDescription"],[3,"PipelineVertexInputStateCreateInfo"],[3,"PipelineInputAssemblyStateCreateInfo"],[3,"PipelineTessellationStateCreateInfo"],[3,"Viewport"],[3,"Offset2D"],[3,"Extent2D"],[3,"Rect2D"],[3,"PipelineViewportStateCreateInfo"],[3,"PipelineRasterizationStateCreateInfo"],[3,"PipelineMultisampleStateCreateInfo"],[3,"StencilOpState"],[3,"PipelineDepthStencilStateCreateInfo"],[3,"PipelineColorBlendAttachmentState"],[3,"PipelineColorBlendStateCreateInfo"],[3,"PipelineDynamicStateCreateInfo"],[3,"GraphicsPipelineCreateInfo"],[3,"ComputePipelineCreateInfo"],[3,"PushConstantRange"],[3,"PipelineLayoutCreateInfo"],[3,"SamplerCreateInfo"],[3,"DescriptorSetLayoutBinding"],[3,"DescriptorSetLayoutCreateInfo"],[3,"DescriptorPoolSize"],[3,"DescriptorPoolCreateInfo"],[3,"DescriptorSetAllocateInfo"],[3,"DescriptorImageInfo"],[3,"DescriptorBufferInfo"],[3,"WriteDescriptorSet"],[3,"CopyDescriptorSet"],[3,"FramebufferCreateInfo"],[3,"AttachmentDescription"],[3,"AttachmentReference"],[3,"SubpassDescription"],[3,"SubpassDependency"],[3,"RenderPassCreateInfo"],[3,"CommandPoolCreateInfo"],[3,"CommandBufferAllocateInfo"],[3,"CommandBufferInheritanceInfo"],[3,"CommandBufferBeginInfo"],[3,"BufferCopy"],[3,"ImageSubresourceLayers"],[3,"ImageCopy"],[3,"ImageBlit"],[3,"BufferImageCopy"],[3,"ClearDepthStencilValue"],[3,"ClearAttachment"],[3,"ClearRect"],[3,"ImageResolve"],[3,"MemoryBarrier"],[3,"BufferMemoryBarrier"],[3,"ImageMemoryBarrier"],[3,"RenderPassBeginInfo"],[3,"DispatchIndirectCommand"],[3,"DrawIndexedIndirectCommand"],[3,"DrawIndirectCommand"],[3,"SurfaceCapabilitiesKHR"],[3,"SurfaceFormatKHR"],[3,"SwapchainCreateInfoKHR"],[3,"PresentInfoKHR"],[3,"DisplayPropertiesKHR"],[3,"DisplayModeParametersKHR"],[3,"DisplayModePropertiesKHR"],[3,"DisplayModeCreateInfoKHR"],[3,"DisplayPlaneCapabilitiesKHR"],[3,"DisplayPlanePropertiesKHR"],[3,"DisplaySurfaceCreateInfoKHR"],[3,"DisplayPresentInfoKHR"],[3,"XlibSurfaceCreateInfoKHR"],[3,"XcbSurfaceCreateInfoKHR"],[3,"WaylandSurfaceCreateInfoKHR"],[3,"MirSurfaceCreateInfoKHR"],[3,"AndroidSurfaceCreateInfoKHR"],[3,"Win32SurfaceCreateInfoKHR"],[3,"DebugReportCallbackCreateInfoEXT"],[3,"ClearColorValue"],[3,"ClearValue"],[3,"Static"],[3,"EntryPoints"],[3,"InstancePointers"],[3,"DevicePointers"]]};
searchIndex["crossbeam"] = {"doc":"Support for concurrent and parallel programming.","items":[[3,"Scope","crossbeam","",null,null],[3,"ScopedJoinHandle","","A handle to a scoped thread",null,null],[5,"scope","","Create a new `scope`, for deferred destructors.",null,{"inputs":[{"name":"f"}],"output":{"name":"r"}}],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[0,"mem","","Memory management for concurrent data structures",null,null],[3,"CachePadded","crossbeam::mem","Pad `T` to the length of a cacheline.",null,null],[0,"epoch","","Epoch-based memory management",null,null],[3,"Atomic","crossbeam::mem::epoch","Like `std::sync::atomic::AtomicPtr`.",null,null],[3,"Guard","","An RAII-style guard for pinning the current epoch.",null,null],[3,"Owned","","Like `Box&lt;T&gt;`: an owned, heap-allocated data value of type `T`.",null,null],[3,"Shared","","Like `&amp;&#39;a T`: a shared reference valid for lifetime `&#39;a`.",null,null],[5,"pin","","Pin the current epoch.",null,{"inputs":[],"output":{"name":"guard"}}],[11,"null","","",0,{"inputs":[],"output":{"name":"atomic"}}],[11,"new","","Create a new atomic pointer",0,{"inputs":[{"name":"t"}],"output":{"name":"atomic"}}],[11,"load","","Do an atomic load with the given memory ordering.",0,{"inputs":[{"name":"atomic"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"option"}}],[11,"store","","Do an atomic store with the given memory ordering.",0,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"}],"output":null}],[11,"store_and_ref","","Do an atomic store with the given memory ordering, immediately yielding\na shared reference to the pointer that was stored.",0,{"inputs":[{"name":"atomic"},{"name":"owned"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"shared"}}],[11,"store_shared","","Do an atomic store of a `Shared` pointer with the given memory ordering.",0,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"}],"output":null}],[11,"cas","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering.",0,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"option"},{"name":"ordering"}],"output":{"name":"result"}}],[11,"cas_and_ref","","Do a compare-and-set from a `Shared` to an `Owned` pointer with the\ngiven memory ordering, immediatley acquiring a new `Shared` reference to\nthe previously-owned pointer if successful.",0,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"owned"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"result"}}],[11,"cas_shared","","Do a compare-and-set from a `Shared` to another `Shared` pointer with\nthe given memory ordering.",0,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"option"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"swap","","Do an atomic swap with an `Owned` pointer with the given memory ordering.",0,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"option"}}],[11,"swap_shared","","Do an atomic swap with a `Shared` pointer with the given memory ordering.",0,{"inputs":[{"name":"atomic"},{"name":"option"},{"name":"ordering"},{"name":"guard"}],"output":{"name":"option"}}],[11,"unlinked","","Assert that the value is no longer reachable from a lock-free data\nstructure and should be collected when sufficient epochs have passed.",1,{"inputs":[{"name":"guard"},{"name":"shared"}],"output":null}],[11,"migrate_garbage","","Move the thread-local garbage into the global set of garbage.",1,{"inputs":[{"name":"guard"}],"output":null}],[11,"drop","","",1,{"inputs":[{"name":"guard"}],"output":null}],[11,"new","","Move `t` to a new heap allocation.",2,{"inputs":[{"name":"t"}],"output":{"name":"owned"}}],[11,"into_inner","","Move data out of the owned box, deallocating the box.",2,{"inputs":[{"name":"owned"}],"output":{"name":"t"}}],[11,"deref","","",2,{"inputs":[{"name":"owned"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"owned"}],"output":{"name":"t"}}],[11,"eq","","",3,{"inputs":[{"name":"shared"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"shared"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",3,{"inputs":[{"name":"shared"}],"output":{"name":"t"}}],[11,"as_raw","","",3,null],[11,"zeroed","crossbeam::mem","A const fn equivalent to mem::zeroed().",4,{"inputs":[],"output":{"name":"cachepadded"}}],[11,"new","","Wrap `t` with cacheline padding.",4,{"inputs":[{"name":"t"}],"output":{"name":"cachepadded"}}],[11,"deref","","",4,{"inputs":[{"name":"cachepadded"}],"output":{"name":"t"}}],[11,"deref_mut","","",4,{"inputs":[{"name":"cachepadded"}],"output":{"name":"t"}}],[8,"ZerosValid","","Types for which mem::zeroed() is safe.",null,null],[0,"sync","crossbeam","Synchronization primitives.",null,null],[3,"MsQueue","crossbeam::sync","A Michael-Scott lock-free queue, with support for blocking `pop`s.",null,null],[3,"AtomicOption","","",null,null],[3,"TreiberStack","","Treiber&#39;s lock-free stack.",null,null],[3,"SegQueue","","A Michael-Scott queue that allocates &quot;segments&quot; (arrays of nodes)\nfor efficiency.",null,null],[3,"ArcCell","","A type providing atomic storage and retrieval of an `Arc&lt;T&gt;`.",null,null],[11,"new","","",5,{"inputs":[],"output":{"name":"atomicoption"}}],[11,"swap_box","","",5,{"inputs":[{"name":"atomicoption"},{"name":"box"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"swap","","",5,{"inputs":[{"name":"atomicoption"},{"name":"t"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"take","","",5,{"inputs":[{"name":"atomicoption"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"new","","Create a new, empty queue.",6,{"inputs":[],"output":{"name":"msqueue"}}],[11,"push","","Add `t` to the back of the queue, possibly waking up threads\nblocked on `pop`.",6,{"inputs":[{"name":"msqueue"},{"name":"t"}],"output":null}],[11,"is_empty","","Check if this queue is empty.",6,{"inputs":[{"name":"msqueue"}],"output":{"name":"bool"}}],[11,"try_pop","","Attempt to dequeue from the front.",6,{"inputs":[{"name":"msqueue"}],"output":{"name":"option"}}],[11,"pop","","Dequeue an element from the front of the queue, blocking if the queue is\nempty.",6,{"inputs":[{"name":"msqueue"}],"output":{"name":"t"}}],[11,"new","","Create a new, empty stack.",7,{"inputs":[],"output":{"name":"treiberstack"}}],[11,"push","","Push `t` on top of the stack.",7,{"inputs":[{"name":"treiberstack"},{"name":"t"}],"output":null}],[11,"pop","","Attempt to pop the top element of the stack.",7,{"inputs":[{"name":"treiberstack"}],"output":{"name":"option"}}],[11,"is_empty","","Check if this queue is empty.",7,{"inputs":[{"name":"treiberstack"}],"output":{"name":"bool"}}],[11,"new","","Create a new, empty queue.",8,{"inputs":[],"output":{"name":"segqueue"}}],[11,"push","","Add `t` to the back of the queue.",8,{"inputs":[{"name":"segqueue"},{"name":"t"}],"output":null}],[11,"try_pop","","Attempt to dequeue from the front.",8,{"inputs":[{"name":"segqueue"}],"output":{"name":"option"}}],[0,"chase_lev","","A lock-free concurrent work-stealing deque",null,null],[3,"Worker","crossbeam::sync::chase_lev","Worker half of the work-stealing deque. This worker has exclusive access to\none side of the deque, and uses `push` and `try_pop` method to manipulate it.",null,null],[3,"Stealer","","The stealing half of the work-stealing deque. Stealers have access to the\nopposite end of the deque from the worker, and they only have access to the\n`steal` method.",null,null],[4,"Steal","","When stealing some data, this is an enumeration of the possible outcomes.",null,null],[13,"Empty","","The deque was empty at the time of stealing",9,null],[13,"Abort","","The stealer lost the race for stealing data, and a retry may return more\ndata.",9,null],[13,"Data","","The stealer has successfully stolen some data.",9,null],[5,"deque","","Creates a new empty deque",null,null],[11,"fmt","","",9,{"inputs":[{"name":"steal"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"steal"},{"name":"steal"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"steal"},{"name":"steal"}],"output":{"name":"bool"}}],[11,"push","","Pushes data onto the front of this work queue.",10,{"inputs":[{"name":"worker"},{"name":"t"}],"output":null}],[11,"try_pop","","Pops data off the front of the work queue, returning `None` on an empty\nqueue.",10,{"inputs":[{"name":"worker"}],"output":{"name":"option"}}],[11,"steal","","Steals work off the end of the queue (opposite of the worker&#39;s end)",11,{"inputs":[{"name":"stealer"}],"output":{"name":"steal"}}],[11,"clone","","",11,{"inputs":[{"name":"stealer"}],"output":{"name":"stealer"}}],[11,"drop","crossbeam::sync","",12,{"inputs":[{"name":"arccell"}],"output":null}],[11,"new","","Creates a new `ArcCell`.",12,{"inputs":[{"name":"arc"}],"output":{"name":"arccell"}}],[11,"set","","Stores a new value in the `ArcCell`, returning the previous\nvalue.",12,{"inputs":[{"name":"arccell"},{"name":"arc"}],"output":{"name":"arc"}}],[11,"get","","Returns a copy of the value stored by the `ArcCell`.",12,{"inputs":[{"name":"arccell"}],"output":{"name":"arc"}}],[11,"defer","crossbeam","Schedule code to be executed when exiting the scope.",13,{"inputs":[{"name":"scope"},{"name":"f"}],"output":null}],[11,"spawn","","Create a scoped thread.",13,{"inputs":[{"name":"scope"},{"name":"f"}],"output":{"name":"scopedjoinhandle"}}],[11,"join","","Join the scoped thread, returning the result it produced.",14,{"inputs":[{"name":"scopedjoinhandle"}],"output":{"name":"t"}}],[11,"thread","","Get the underlying thread handle.",14,{"inputs":[{"name":"scopedjoinhandle"}],"output":{"name":"thread"}}],[11,"drop","","",13,{"inputs":[{"name":"scope"}],"output":null}]],"paths":[[3,"Atomic"],[3,"Guard"],[3,"Owned"],[3,"Shared"],[3,"CachePadded"],[3,"AtomicOption"],[3,"MsQueue"],[3,"TreiberStack"],[3,"SegQueue"],[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"ArcCell"],[3,"Scope"],[3,"ScopedJoinHandle"]]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain number of elements inline and fall back\nto the heap for larger allocations.","items":[[3,"SmallVecMoveIterator","smallvec","",null,null],[3,"SmallVec","","",null,null],[6,"SmallVec1","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec2","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec4","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec8","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec16","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec24","","Deprecated alias to ease transition from an earlier version.",null,null],[6,"SmallVec32","","Deprecated alias to ease transition from an earlier version.",null,null],[8,"VecLike","","",null,null],[10,"len","","",0,{"inputs":[{"name":"veclike"}],"output":{"name":"usize"}}],[10,"push","","",0,{"inputs":[{"name":"veclike"},{"name":"t"}],"output":null}],[8,"Array","","",null,null],[16,"Item","","",1,null],[10,"size","","",1,{"inputs":[],"output":{"name":"usize"}}],[10,"ptr","","",1,null],[10,"ptr_mut","","",1,null],[11,"len","collections::vec","",2,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"push","","",2,{"inputs":[{"name":"vec"},{"name":"t"}],"output":null}],[11,"next","smallvec","",3,{"inputs":[{"name":"smallvecmoveiterator"}],"output":{"name":"option"}}],[11,"drop","","",3,{"inputs":[{"name":"smallvecmoveiterator"}],"output":null}],[11,"set_len","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":null}],[11,"inline_size","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"usize"}}],[11,"len","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"usize"}}],[11,"is_empty","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"bool"}}],[11,"capacity","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"usize"}}],[11,"spilled","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"bool"}}],[11,"into_iter","","NB: For efficiency reasons (avoiding making a second copy of the inline elements), this\nactually clears out the original array instead of moving it.\nFIXME: Rename this to `drain`? It’s more like `Vec::drain` than `Vec::into_iter`.",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"smallvecmoveiterator"}}],[11,"push","","",4,{"inputs":[{"name":"smallvec"},{"name":"item"}],"output":null}],[11,"push_all_move","","",4,{"inputs":[{"name":"smallvec"},{"name":"v"}],"output":null}],[11,"pop","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"option"}}],[11,"grow","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":null}],[11,"reserve","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":null}],[11,"reserve_exact","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":null}],[11,"shrink_to_fit","","",4,{"inputs":[{"name":"smallvec"}],"output":null}],[11,"truncate","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":null}],[11,"swap_remove","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":{"name":"item"}}],[11,"clear","","",4,{"inputs":[{"name":"smallvec"}],"output":null}],[11,"remove","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":{"name":"item"}}],[11,"insert","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"},{"name":"item"}],"output":null}],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"index","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":{"name":"item"}}],[11,"index_mut","","",4,{"inputs":[{"name":"smallvec"},{"name":"usize"}],"output":{"name":"item"}}],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"index","","",4,null],[11,"index_mut","","",4,null],[11,"len","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"usize"}}],[11,"push","","",4,{"inputs":[{"name":"smallvec"},{"name":"item"}],"output":null}],[11,"from_iter","","",4,{"inputs":[{"name":"i"}],"output":{"name":"smallvec"}}],[11,"extend","","",4,{"inputs":[{"name":"smallvec"},{"name":"i"}],"output":null}],[11,"fmt","","",4,{"inputs":[{"name":"smallvec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",4,{"inputs":[],"output":{"name":"smallvec"}}],[11,"drop","","",4,{"inputs":[{"name":"smallvec"}],"output":null}],[11,"clone","","",4,{"inputs":[{"name":"smallvec"}],"output":{"name":"smallvec"}}]],"paths":[[8,"VecLike"],[8,"Array"],[3,"Vec"],[3,"SmallVecMoveIterator"],[3,"SmallVec"]]};
searchIndex["fnv"] = {"doc":"An implementation of the [Fowler–Noll–Vo hash function][chongo].","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"fnvhasher"}}],[11,"finish","","",0,{"inputs":[{"name":"fnvhasher"}],"output":{"name":"u64"}}],[11,"write","","",0,null]],"paths":[[3,"FnvHasher"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[14,"lazy_static!","lazy_static","",null,null]],"paths":[]};
initSearch(searchIndex);
